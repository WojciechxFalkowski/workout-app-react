{"version":3,"sources":["pages/Login/Login.tsx","components/LoadingIndicator/LoadingIndicator.tsx","components/Hamburger/Hamburger.tsx","components/Header/components/Navigation.tsx","components/Header/Header.tsx","components/PrivateRoute/PrivateRoute.tsx","components/FormTemplate/FormTemplate.js","components/Button/Button.tsx","components/Arrow/Arrow.tsx","fire.jsx","utils/validation.ts","components/EditTitle/EditTitle.tsx","components/GoBackDelete/GoBackDelete.tsx","components/Chart/Chart.tsx","components/PopUp/PopUp.tsx","components/AuthProvider/AuthProvider.tsx","pages/Root/components/Home/components/Greetings/Greetings.tsx","pages/Root/components/Home/Home.tsx","pages/Root/Root.tsx","pages/Trainings/components/Table/Table.tsx","pages/Trainings/Trainings.tsx","pages/Training/components/TrainingExerciseList/TrainingExerciseList.tsx","pages/Training/components/DragAndDropList/DragAndDropList.tsx","pages/Training/Training.tsx","pages/Exercise/components/FormInput/components/Line/Line.tsx","pages/Exercise/components/FormInput/components/RemoveSeries/RemoveSeries.tsx","pages/Exercise/components/FormInput/components/SeriesNumber/SeriesNumber.tsx","pages/Exercise/components/FormInput/FormInput.tsx","pages/Exercise/Exercise.tsx","pages/Statistics/components/Charts/components/TrainingsPerMonth/TrainingsPerMonth.tsx","pages/Statistics/components/Charts/components/TrainingsPerTrainingName/TrainingsPerTrainingName.tsx","pages/Statistics/components/Charts/components/WeightRaisedPerTrainingName/WeightRaisedPerTrainingName.tsx","pages/Statistics/components/Charts/Charts.tsx","pages/Statistics/Statistics.tsx","pages/Measurement/components/Block/Block.tsx","pages/Measurement/Measurement.tsx","pages/Diet/components/DietList/components/DietElement/components/DietNutrient/DietNutrient.tsx","pages/Diet/components/DietList/components/DietElement/DietElement.tsx","pages/Diet/components/DietList/DietList.tsx","pages/Diet/Diet.tsx","pages/DietDay/components/MealList/components/AddElementBlock/AddElementBlock.tsx","pages/DietDay/components/MealList/components/MealTable/components/IngredientItem/IngredientItem.tsx","pages/DietDay/components/MealList/components/MealTable/components/SumNutrientsByType/SumNutrientsByType.tsx","pages/DietDay/components/MealList/components/MealTable/MealTable.tsx","pages/DietDay/components/MealList/MealList.tsx","pages/DietDay/components/AddMeal/components/Block/Block.tsx","pages/DietDay/components/AddMeal/AddMeal.tsx","pages/DietDay/components/MealSummary/MealSummary.tsx","pages/DietDay/DietDay.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LoginPage","useState","isSignedIn","setIsSignedIn","uiConfig","signInFlow","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccess","to","firebaseAuth","LoadingIndicator","className","Hamburger","onClick","hamburgerActive","ref","Navigation","handleHamburger","currentUser","useContext","AuthContext","signOut","then","error","href","Header","header","useRef","current","classList","toggle","remove","PrivateRoute","RouteComponent","component","rest","render","routeProps","FormTemplate","formFields","fields","button","handleSubmit","onSubmit","props","map","formField","key","name","validate","defaultValue","initialValue","parse","input","meta","text","type","placeholder","step","undefined","min","touched","variant","Button","children","Arrow","history","useHistory","goBack","fire","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","required","value","composeValidators","validators","reduce","validator","EditTitle","labelText","editDate","refUrl","isActiveEditing","setIsActiveEditing","workoutName","setWorkoutName","editTimeDate","setEditTimeDate","editName","setEditName","unshift","handleClickIcon","loadTrainingName","snapshot","val","date","useEffect","newRef","database","once","off","values","update","saveEditedTraining","GoBackDelete","handleEdit","editTitle","Chart","specification","canvasRef","ctx","getContext","chart","ChartJS","destroy","PopUp","handleRemoveBlock","e","stopPropagation","createContext","AuthProvider","setCurrentUser","pending","setPending","onAuthStateChanged","user","child","uid","userId","email","set","Provider","Greetings","Date","today","getDay","getDate","getMonth","getFullYear","displayName","Home","console","log","Root","Table","trainings","training","modifiedDate","getHours","getMinutes","id","push","handleTraining","reverse","Trainings","setTrainings","todayDatePattern","uploadTrainings","trainingArray","forEach","childSnapshot","childData","orderByChild","on","replace","saveNewTraining","TrainingExerciseList","exercises","exerciseName","exerciseKey","pathname","state","handleTrainingExercise","DragAndDropList","exercise","index","content","listItems","setListItems","onDragEnd","result","destination","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","item","droppableId","provided","droppableProps","innerRef","draggableId","draggableProps","dragHandleProps","Training","match","params","setExercises","loadTrainings","exerciseArray","Line","handleAddSeries","RemoveSeries","handleRemoveSeries","SeriesNumber","FormInput","setFormFields","ID","Math","random","toString","substr","number","Exercise","url","length","newArray","field","TrainingsPerMonth","trainingsPerMonth","data","labels","datasets","backgroundColor","context","dataIndex","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","weight","options","title","display","legend","position","scales","yAxes","ticks","lineHeight","TrainingsPerTrainingName","trainingsPerTrainingName","amount","findIndex","WeightRaisedPerTrainingName","selectChange","setSelectChange","filter","trainingsArray","Object","entries","series","seriesArray","i","Number","formatedDate","beginAtZero","onChange","target","Charts","Statistics","Block","measurements","setShowBlock","setMeasurements","newMeasurement","arm","chest","thighs","waist","Measurement","showBlock","uploadMeasurements","measurementsArray","measurement","filteredMeasurements","handleDeleteMeasurement","DietNutrient","nutrients","DietElement","carbs","fats","proteins","mineralsalt","calories","slice","handleDietDay","DietList","diets","diet","meal","Diet","setDiets","flag","setFlag","uploadDiet","dietArray","AddElementBlock","valuesModified","ingredient","newList","saveIngredient","IngredientItem","indexList","filteredList","ind","handleRemoveMealItem","SumNutrientsByType","titles","sumNutrientsByType","MealTable","meals","mealName","filteredMealList","handleRemoveMeal","MealList","find","saveMeal","AddMeal","MealSummary","dailySchedule","distinction","DietDay","useParams","setMeals","uploadDietDay","dietDayArray","App","Suspense","fallback","path","Login","exact","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.56086224.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nexport interface Props {}\r\nexport interface Test {\r\n  signInFlow: string;\r\n  signInOptions: Array<string> | any;\r\n  callbacks: any;\r\n}\r\nconst LoginPage: React.FC<Props> = () => {\r\n  const [isSignedIn, setIsSignedIn] = useState(false);\r\n  const uiConfig: Test = {\r\n    signInFlow: \"popup\",\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      // firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n      // firebase.auth.TwitterAuthProvider.PROVIDER_ID,\r\n      // firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n    ],\r\n    callbacks: {\r\n      signInSuccess: () => {\r\n        setIsSignedIn(true);\r\n\r\n        return false;\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isSignedIn ? (\r\n        <Redirect to=\"/home\" />\r\n      ) : (\r\n        <StyledFirebaseAuth\r\n          uiConfig={uiConfig}\r\n          firebaseAuth={firebase.auth()}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport \"./LoadingIndicator.scss\";\r\nconst LoadingIndicator = () => {\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"root__div\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingIndicator;\r\n","import React from \"react\";\r\nimport \"./Hamburger.scss\";\r\n\r\nexport interface Props<T> {\r\n  onClick: any;\r\n  // isActiveHamburger: boolean;\r\n  hamburgerActive: T | null;\r\n}\r\nconst Hamburger: React.FC<Props<any>> = ({ onClick, hamburgerActive }) => {\r\n  return (\r\n    <div className=\"hamburger\" onClick={onClick}>\r\n      <div className=\"hamburger__box\">\r\n        <div ref={hamburgerActive} className=\"hamburger__inner inner\">\r\n          <div className=\"inner__before\"></div>\r\n          <div className=\"inner__after\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hamburger;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"./navigation.scss\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nexport interface Props {\r\n  handleHamburger: () => void;\r\n}\r\n\r\nconst Navigation: React.FC<Props> = ({ handleHamburger }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const handleSignOut = () => {\r\n    handleHamburger();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(\r\n        function () {},\r\n        function (error) {}\r\n      );\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"navigation\">\r\n        <ul className=\"navigation__ul\">\r\n          {currentUser ? (\r\n            <>\r\n              <li className=\"navigation__li\">\r\n                <Link\r\n                  onClick={handleHamburger}\r\n                  to=\"/trainings\"\r\n                  className=\"navigation__a\"\r\n                >\r\n                  Treningi\r\n                </Link>\r\n              </li>\r\n              <li className=\"navigation__li\">\r\n                <Link\r\n                  onClick={handleHamburger}\r\n                  to=\"/statistics\"\r\n                  className=\"navigation__a\"\r\n                >\r\n                  Statystyki\r\n                </Link>\r\n              </li>\r\n              <li className=\"navigation__li\">\r\n                <Link\r\n                  onClick={handleHamburger}\r\n                  to=\"/measurement\"\r\n                  className=\"navigation__a\"\r\n                >\r\n                  Pomiary\r\n                </Link>\r\n              </li>\r\n              <li className=\"navigation__li\">\r\n                <Link\r\n                  onClick={handleHamburger}\r\n                  to=\"/diet\"\r\n                  className=\"navigation__a\"\r\n                >\r\n                  Dieta\r\n                </Link>\r\n              </li>\r\n              <li className=\"navigation__li navigation__logout\">\r\n                <a onClick={handleSignOut} href=\"/\" className=\"navigation__a\">\r\n                  Wyloguj\r\n                </a>\r\n              </li>\r\n            </>\r\n          ) : (\r\n            <li className=\"navigation__li navigation__login\">\r\n              <Link\r\n                onClick={handleHamburger}\r\n                className=\"navigation__a\"\r\n                to=\"/login\"\r\n              >\r\n                Zaloguj się\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useRef } from \"react\";\r\nimport \"./header.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Navigation from \"./components\";\r\nimport { Hamburger } from \"components\";\r\ninterface Props {}\r\n\r\nconst Header: React.FC<Props> = () => {\r\n  const header = useRef<HTMLElement>(null);\r\n  const hamburgerActive = useRef<HTMLDivElement>(null);\r\n\r\n  const onClick = () => {\r\n    hamburgerActive.current?.classList.toggle(\"is-active-hamburger\");\r\n    header.current?.classList.toggle(\"header--active\");\r\n  };\r\n  const handleHamburger = () => {\r\n    hamburgerActive.current?.classList.remove(\"is-active-hamburger\");\r\n    header.current?.classList.remove(\"header--active\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"invisible__header\"></div>\r\n      <header ref={header} className=\"header\">\r\n        <h1 className=\"header__logo\">\r\n          <Link to=\"/\" className=\"header__link\">\r\n            TO DO WORKOUT\r\n          </Link>\r\n        </h1>\r\n        <div className=\"header__hamburger\">\r\n          <Hamburger onClick={onClick} hamburgerActive={hamburgerActive} />\r\n        </div>\r\n        <div className=\"header__links\">\r\n          <Navigation handleHamburger={handleHamburger} />\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nexport interface Props {\r\n  component: any;\r\n  exact: boolean;\r\n  path: string;\r\n}\r\nconst PrivateRoute: React.FC<Props> = ({\r\n  component: RouteComponent,\r\n\r\n  ...rest\r\n}) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport \"./FormTemplate.scss\";\r\nconst FormTemplate = ({ formFields: { fields, button }, handleSubmit }) => {\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      {(props) => (\r\n        <form onSubmit={props.handleSubmit} className=\"form\">\r\n          {fields.map((formField) => {\r\n            return (\r\n              <Field\r\n                key={formField.name}\r\n                name={formField.name}\r\n                validate={formField.validate}\r\n                defaultValue={formField.initialValue}\r\n                parse={formField.parse}\r\n              >\r\n                {({ input, meta }) => (\r\n                  <div className=\"form__wrapper\">\r\n                    <label>{formField.text}</label>\r\n                    {formField.component === \"textarea\" ? (\r\n                      <textarea\r\n                        className=\"form__textarea\"\r\n                        {...input}\r\n                        type=\"text\"\r\n                        placeholder={\"Description\"}\r\n                      />\r\n                    ) : (\r\n                      <input\r\n                        className=\"form__input\"\r\n                        {...input}\r\n                        type={formField.type ? formField.type : \"text\"}\r\n                        step={formField.step ? formField.step : undefined}\r\n                        min={formField.min ? formField.min : undefined}\r\n                        placeholder={formField.placeholder}\r\n                      />\r\n                    )}\r\n                    {meta.error && meta.touched && (\r\n                      <span className=\"form__span\">{meta.error}</span>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            );\r\n          })}\r\n\r\n          <button\r\n            variant={button.variant}\r\n            type={button.type}\r\n            className=\"form__button\"\r\n          >\r\n            {button.text}\r\n          </button>\r\n        </form>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormTemplate;\r\n","import React from \"react\";\r\nimport \"./button.scss\";\r\nexport interface Props {\r\n  onClick: () => void;\r\n}\r\n\r\nconst Button: React.FC<Props> = ({ onClick, children }) => {\r\n  return (\r\n    <button onClick={onClick} className=\"button\">\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import \"./arrow.scss\";\r\nimport React from \"react\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from \"components\";\r\n\r\nconst Arrow = () => {\r\n  const history = useHistory();\r\n  const handleArrowClick = () => {\r\n    history.goBack();\r\n  };\r\n  return (\r\n    <div className=\"arrow\">\r\n      <Button onClick={handleArrowClick}>\r\n        <IoIosArrowBack />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import firebase from \"firebase/app\";\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyAkx7U5xHRytqTxEvWcAeBafAnn0RxvCGE\",\r\n  authDomain: \"workout-app-react.firebaseapp.com\",\r\n  databaseURL: \"https://workout-app-react.firebaseio.com\",\r\n  projectId: \"workout-app-react\",\r\n  storageBucket: \"workout-app-react.appspot.com\",\r\n  messagingSenderId: \"525427559623\",\r\n  appId: \"1:525427559623:web:086662897279ef7ca942e2\",\r\n  measurementId: \"G-LRVXXWQ6R2\",\r\n};\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nexport default fire;\r\n","export const required = (text: string) => (\r\n  value: string | number\r\n): undefined | string => (value ? undefined : text);\r\nexport const checkAtSign = (text: string) => (value: string) =>\r\n  value.includes(\"@\") ? undefined : text;\r\nexport const mustBeNumber = (text: string) => (\r\n  value: number\r\n): string | undefined => (isNaN(value) ? text : undefined);\r\nexport const minValue = (min: number, text: string) => (value: string) =>\r\n  isNaN(value.length) || value.length >= min ? undefined : text;\r\nexport const mustBeAmount = (text: string) => (value: string) =>\r\n  value.length === Number(value).toString().length ? undefined : text;\r\nexport const maxValue = (max: number, text: string) => (value: string) =>\r\n  isNaN(value.length) || value.length <= max ? undefined : text;\r\nexport const uniqueMealName = (items: any, text: string) => (value: string) =>\r\n  items.find((item: any) => item.mealName === value) === undefined\r\n    ? undefined\r\n    : text;\r\n\r\nexport const composeValidators = (...validators: any) => (value: any) =>\r\n  validators.reduce(\r\n    (error: any, validator: any) => error || validator(value),\r\n    undefined\r\n  );\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\nimport { FormTemplate } from \"components\";\r\nimport fire from \"fire\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\nimport \"./editTitle.scss\";\r\nexport interface Props {\r\n  labelText: string;\r\n  editDate: boolean;\r\n  refUrl: string;\r\n  isActiveEditing: boolean;\r\n  setIsActiveEditing: any;\r\n}\r\n\r\nconst EditTitle: React.FC<Props> = ({\r\n  labelText,\r\n  editDate,\r\n  refUrl,\r\n  isActiveEditing,\r\n  setIsActiveEditing,\r\n}) => {\r\n  const [workoutName, setWorkoutName] = useState();\r\n  const [editTimeDate, setEditTimeDate] = useState();\r\n  const [editName, setEditName] = useState(false);\r\n  const formFields = {\r\n    fields: [\r\n      {\r\n        name: \"workoutName\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: workoutName,\r\n        text: labelText,\r\n        placeholder: \"Nazwa treningu\",\r\n        type: \"text\",\r\n      },\r\n    ],\r\n    button: {\r\n      type: \"submit\",\r\n      text: \"Potwierdź zmiany\",\r\n    },\r\n  };\r\n  if (editDate) {\r\n    formFields.fields.unshift({\r\n      name: \"date\",\r\n      validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n      initialValue: editTimeDate,\r\n      text: labelText,\r\n      placeholder: \"Data treningu\",\r\n      type: \"datetime-local\",\r\n    });\r\n  }\r\n  const handleClickIcon = () => {\r\n    setEditName(!editName);\r\n    setIsActiveEditing(!isActiveEditing);\r\n  };\r\n  const saveEditedTraining = (workoutName: string, date?: string) => {\r\n    if (date) {\r\n      fire.database().ref(refUrl).update({ workoutName, date });\r\n    } else {\r\n      fire.database().ref(refUrl).update({ workoutName });\r\n    }\r\n  };\r\n  const handleSubmit = (values: any) => {\r\n    saveEditedTraining(values.workoutName, values.date);\r\n    setWorkoutName(values.workoutName);\r\n    if (editDate) {\r\n      setEditTimeDate(values.date);\r\n    }\r\n\r\n    handleClickIcon();\r\n  };\r\n  const loadTrainingName = function (snapshot: any) {\r\n    setWorkoutName(snapshot.val().workoutName);\r\n    setEditTimeDate(snapshot.val().date);\r\n  };\r\n  useEffect(() => {\r\n    const newRef = fire.database().ref(refUrl);\r\n    newRef.once(\"value\").then(loadTrainingName);\r\n\r\n    return () => {\r\n      newRef.off(\"value\", loadTrainingName);\r\n    };\r\n  }, [refUrl]);\r\n  return (\r\n    <>\r\n      {editName ? (\r\n        <FormTemplate formFields={formFields} handleSubmit={handleSubmit} />\r\n      ) : (\r\n        <div className=\"edit-title__div\">\r\n          <h2 className=\"edit-title__h2\">{workoutName}</h2>\r\n          <div className=\"edit-title__div-icon\">\r\n            <BiEditAlt\r\n              onClick={handleClickIcon}\r\n              className=\"edit-title__icon-edit\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTitle;\r\n","import React from \"react\";\r\nimport { Button, Arrow } from \"components\";\r\nimport \"./goBackDelete.scss\";\r\nexport interface Props {\r\n  handleEdit: () => void;\r\n  editTitle: string;\r\n}\r\n\r\nconst GoBackDelete: React.FC<Props> = ({ handleEdit, editTitle }) => {\r\n  return (\r\n    <div className=\"go-back-delete\">\r\n      <Arrow />\r\n      <Button onClick={handleEdit}>{editTitle}</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoBackDelete;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Chart as ChartJS } from \"chart.js\";\r\nimport \"./chart.scss\";\r\n\r\nexport interface Props {\r\n  specification: any;\r\n  children: any;\r\n}\r\nconst Chart: React.FC<Props> = ({ specification, children }) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (canvasRef.current !== null) {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      if (ctx) {\r\n        const chart = new ChartJS(ctx, specification);\r\n        return () => {\r\n          chart.destroy();\r\n        };\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {children ? <h1 className=\"chart__h1\">{children}</h1> : null}\r\n      <canvas className=\"chart__canvas\" ref={canvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport { FormTemplate } from \"components\";\r\nimport \"./popUp.scss\";\r\ninterface Fields {\r\n  name?: string;\r\n  validate?: (value: any) => void;\r\n  initialValue?: string | undefined;\r\n  text?: string;\r\n  placeholder?: string;\r\n  type?: string;\r\n  step?: string;\r\n  min?: string;\r\n}\r\n\r\ninterface Button {\r\n  text: string;\r\n}\r\ninterface FormFields {\r\n  fields: Fields[];\r\n  button: Button;\r\n}\r\nexport interface Props {\r\n  handleRemoveBlock: () => void;\r\n  formFields: FormFields;\r\n  handleSubmit: (val: any) => void;\r\n}\r\n\r\nconst PopUp: React.FC<Props> = ({\r\n  handleRemoveBlock,\r\n  formFields,\r\n  handleSubmit,\r\n}) => {\r\n  return (\r\n    <div onClick={(e) => handleRemoveBlock()} className=\"pop-up\">\r\n      <div onClick={(e) => e.stopPropagation()} className=\"pop-up__add\">\r\n        <FormTemplate formFields={formFields} handleSubmit={handleSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n","import React, { useEffect, useState, createContext } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { LoadingIndicator } from \"components\";\r\nexport const AuthContext = createContext<Partial<ContextProps>>({});\r\ntype ContextProps = { currentUser: user | null };\r\ninterface user {\r\n  uid: string;\r\n  displayName: string;\r\n}\r\ninterface Props {}\r\nconst AuthProvider: React.FC<Props> = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const writeUserData = (userId: string, email: string) => {\r\n      firebase\r\n        .database()\r\n        .ref(\"users/\" + userId)\r\n        .set({\r\n          email: email,\r\n        });\r\n    };\r\n    firebase.auth().onAuthStateChanged((user: any) => {\r\n      setCurrentUser(user);\r\n      setPending(false);\r\n      if (user) {\r\n        let rootRef = firebase.database().ref(\"users/\");\r\n        rootRef.child(user.uid).once(\"value\", function (snapshot: any) {\r\n          let exists = snapshot.val() !== null;\r\n          if (!exists) {\r\n            // console.log(\"To konto nie ma bazy danych\");\r\n            writeUserData(user.uid, user.email);\r\n          } else {\r\n            // console.log(\"To konto ma baze danych\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  if (pending) {\r\n    return <LoadingIndicator />;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport \"./greetings.scss\";\r\nexport interface Props {}\r\n\r\nconst Greetings: React.FC<Props> = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const date = new Date();\r\n  const dayOfWeek = [\r\n    \"Poniedziałek\",\r\n    \"Wtorek\",\r\n    \"Środa\",\r\n    \"Czwarte\",\r\n    \"Piątek\",\r\n    \"Sobota\",\r\n    \"Niedziela\",\r\n  ];\r\n  const monthOfYear = [\r\n    \"Stycznia\",\r\n    \"Lutego\",\r\n    \"Marca\",\r\n    \"Kwietnia\",\r\n    \"Maja\",\r\n    \"Czerwca\",\r\n    \"Lipca\",\r\n    \"Sierpnia\",\r\n    \"Września\",\r\n    \"Października\",\r\n    \"Listopada\",\r\n    \"Grudnia\",\r\n  ];\r\n  const today = `${dayOfWeek[date.getDay()]}, ${date.getDate()} ${\r\n    monthOfYear[date.getMonth()]\r\n  } ${date.getFullYear()}`;\r\n  return (\r\n    <div className=\"greetings\">\r\n      {currentUser && (\r\n        <span className=\"greetings__name\">\r\n          Cześć {currentUser.displayName} !\r\n        </span>\r\n      )}\r\n      <span className=\"greetings__date\">{today}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Greetings;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport { Greetings } from \"./components\";\r\n// import fire from \"fire\";\r\n\r\nexport interface Props {}\r\n// let index = 0;\r\nconst Home: React.FC<Props> = () => {\r\n  // console.log(`wywołanie Home:${index++}`);\r\n  const { currentUser } = useContext(AuthContext);\r\n  console.log(\"currentUser w HOME:\", currentUser);\r\n\r\n  return <>{currentUser && <Greetings />}</>;\r\n};\r\n\r\nexport default Home;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport { Home } from \"./components\";\r\n\r\nexport interface Props {}\r\n\r\nconst Root: React.FC<Props> = () => {\r\n  const { currentUser }: any | undefined = useContext(AuthContext);\r\n  return <>{currentUser ? <Home /> : <div>Zaloguj się</div>}</>;\r\n};\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\nimport \"./Table.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport interface Props {\r\n  trainings: Array<training>;\r\n}\r\ninterface training {\r\n  id: string;\r\n  date: string;\r\n  workoutName: string;\r\n}\r\nconst Table: React.FC<Props> = ({ trainings }) => {\r\n  const history = useHistory();\r\n  const handleTraining = (training: training) => {\r\n    history.push(`/trainings/${training.id}`);\r\n  };\r\n  return (\r\n    <>\r\n      <h2 className=\"trainings__h2\">Treningi</h2>\r\n      <table className=\"trainings__table\">\r\n        <thead>\r\n          <tr className=\"trainings__tr\">\r\n            <th className=\"trainings__th\">Nazwa</th>\r\n            <th className=\"trainings__th\">Data</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {trainings\r\n            .map((training: training) => {\r\n              const date = new Date(training.date);\r\n              const modifiedDate = `${\r\n                date.getDate() > 9 ? date.getDate() : \"0\" + date.getDate()\r\n              }-${\r\n                date.getMonth() + 1 > 9\r\n                  ? date.getMonth() + 1\r\n                  : \"0\" + date.getMonth() + 1\r\n              }-${date.getFullYear()} ${\r\n                date.getHours() > 9 ? date.getHours() : \"0\" + date.getHours()\r\n              }:${\r\n                date.getMinutes() > 9\r\n                  ? date.getMinutes()\r\n                  : \"0\" + date.getMinutes()\r\n              }`;\r\n              return (\r\n                <tr key={training.id} className=\"trainings__tr\">\r\n                  <th className=\"trainings__th\">\r\n                    <span\r\n                      onClick={() => handleTraining(training)}\r\n                      className=\"trainings__span\"\r\n                    >\r\n                      {training.workoutName}\r\n                    </span>\r\n                  </th>\r\n                  <th className=\"trainings__th\">{modifiedDate}</th>\r\n                </tr>\r\n              );\r\n            })\r\n            .reverse()}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { FormTemplate } from \"components\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport fire from \"../../fire\";\r\nimport { Table } from \"./components\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { required, composeValidators } from \"utils/validation\";\r\nexport interface Props {}\r\ntype Trainings = Array<training>;\r\ninterface training {\r\n  id: string;\r\n  date: string;\r\n  workoutName: string;\r\n}\r\nconst Trainings: React.FC<Props> = () => {\r\n  const history = useHistory();\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [trainings, setTrainings] = useState<Trainings>();\r\n  const today = new Date();\r\n  const todayDatePattern = `${today.getFullYear()}-${today.getMonth() + 1}-${\r\n    today.getDate() > 9 ? today.getDate() : \"0\" + today.getDate()\r\n  }T${today.getHours() > 9 ? today.getHours() : \"0\" + today.getHours()}:${\r\n    today.getMinutes() > 9 ? today.getMinutes() : \"0\" + today.getMinutes()\r\n  }`;\r\n  const formFields = {\r\n    fields: [\r\n      {\r\n        name: \"date\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: todayDatePattern,\r\n        text: \"Data treningu\",\r\n        placeholder: \"Data treningu\",\r\n        type: \"datetime-local\",\r\n      },\r\n      {\r\n        name: \"workoutName\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Nazwa treningu\",\r\n        placeholder: \"Nazwa treningu\",\r\n      },\r\n    ],\r\n    button: {\r\n      type: \"submit\",\r\n      text: \"Dodaj trening\",\r\n    },\r\n  };\r\n  const saveNewTraining = (\r\n    userId: string,\r\n    id: string,\r\n    date: string,\r\n    workoutName: string\r\n  ) => {\r\n    fire\r\n      .database()\r\n      .ref(\"users/\" + userId + \"/trainings/\" + id)\r\n      .set({ id, date, workoutName });\r\n  };\r\n  const handleSubmit = (values: any) => {\r\n    const date = values.date\r\n      .replace(/-/g, \"\")\r\n      .replace(/T/g, \"\")\r\n      .replace(/:/g, \"\");\r\n\r\n    if (currentUser) {\r\n      saveNewTraining(currentUser.uid, date, values.date, values.workoutName);\r\n      history.push(`/trainings/${date}`);\r\n    }\r\n  };\r\n  const uploadTrainings = function (snapshot: any) {\r\n    const trainingArray: any = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const childData = childSnapshot.val();\r\n      trainingArray.push(childData);\r\n    });\r\n    setTrainings(trainingArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = fire\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/trainings\")\r\n        .orderByChild(\"date\");\r\n      ref.on(\"value\", uploadTrainings);\r\n      return () => {\r\n        ref.off(\"value\", uploadTrainings);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n  return (\r\n    <>\r\n      <FormTemplate formFields={formFields} handleSubmit={handleSubmit} />\r\n      {trainings && <Table trainings={trainings} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trainings;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./trainingExerciseList.scss\";\r\nexport interface Props {\r\n  exercises: any;\r\n  id: string;\r\n}\r\nconst TrainingExerciseList: React.FC<Props> = ({ exercises, id }) => {\r\n  const history = useHistory();\r\n  const handleTrainingExercise = (exerciseKey: any, exerciseName: any) => {\r\n    history.push({\r\n      pathname: `/trainings/${id}/${exerciseKey}`,\r\n      state: { exerciseName },\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <ul className=\"training-exercise-list__ul\">\r\n        {exercises.map((exerciseName: any) => {\r\n          return (\r\n            <li\r\n              onClick={() =>\r\n                handleTrainingExercise(\r\n                  exerciseName.key,\r\n                  exerciseName.workoutName\r\n                )\r\n              }\r\n              key={exerciseName.key}\r\n              className=\"training-exercise-list__exercise\"\r\n            >\r\n              {exerciseName.workoutName}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingExerciseList;\r\n","import fire from \"fire\";\r\nimport React, { useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport \"./dragAndDropList.scss\";\r\nconst reorder = (list: any, startIndex: any, endIndex: any) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n  return result;\r\n};\r\nexport interface Props {\r\n  exercises: any;\r\n  id: string;\r\n  refUrl: string;\r\n}\r\nconst DragAndDropList: React.FC<Props> = ({ exercises, id, refUrl }) => {\r\n  const [listItems, setListItems] = useState(\r\n    exercises.map((exercise: any, index: number) => {\r\n      return {\r\n        id: `${index + 1}`,\r\n        content: exercise.workoutName,\r\n        key: exercise.key,\r\n      };\r\n    })\r\n  );\r\n  const onDragEnd = (result: any) => {\r\n    if (!result.destination) return;\r\n    const items: any = reorder(\r\n      listItems,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    setListItems(items);\r\n    fire.database().ref(refUrl).set({});\r\n    items.forEach((item: any) => {\r\n      fire.database().ref(refUrl).push().set({ workoutName: item.content });\r\n    });\r\n  };\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <Droppable droppableId=\"droppable\">\r\n        {(provided, snapshot) => (\r\n          <div\r\n            className=\"list\"\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {listItems.map((item: any, index: number) => (\r\n              <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    className=\"list__item\"\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    {item.content}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\nexport default DragAndDropList;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport fire from \"fire\";\r\nimport { DragAndDropList } from \"./components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { TrainingExerciseList } from \"./components\";\r\nimport { FormTemplate, EditTitle, GoBackDelete } from \"components\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\nimport \"./training.scss\";\r\ninterface Exercise {\r\n  workoutName: string;\r\n}\r\ninterface Id {\r\n  id: string;\r\n}\r\ntype MatchParams = {\r\n  params: Id;\r\n};\r\nexport interface Props {\r\n  match: MatchParams;\r\n}\r\nconst Training: React.FC<Props> = ({ match }) => {\r\n  const history = useHistory();\r\n  const { id } = match.params;\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [isActiveEditing, setIsActiveEditing] = useState(false);\r\n  const formFields = {\r\n    fields: [\r\n      {\r\n        name: \"workoutName\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Nowe ćwiczenie\",\r\n        placeholder: \"Nowe ćwiczenie\",\r\n      },\r\n    ],\r\n    button: {\r\n      type: \"submit\",\r\n      text: \"Dodaj ćwiczenie\",\r\n    },\r\n  };\r\n\r\n  const handleDeleteTraining = () => {\r\n    if (currentUser) {\r\n      fire.database().ref(`users/${currentUser.uid}/trainings/${id}`).remove();\r\n      history.goBack();\r\n    }\r\n  };\r\n  const handleSubmit = (values: Exercise) => {\r\n    if (currentUser) {\r\n      fire\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/trainings/${id}`)\r\n        .child(\"exercises\")\r\n        .push()\r\n        .set({ workoutName: values.workoutName });\r\n      values.workoutName = \"\";\r\n    }\r\n  };\r\n\r\n  if (currentUser) {\r\n  }\r\n  const [exercises, setExercises] = useState();\r\n  const loadTrainings = function (snapshot: any) {\r\n    const exerciseArray: any = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const { workoutName } = childSnapshot.val();\r\n      const key = childSnapshot.key;\r\n      exerciseArray.push({ workoutName, key });\r\n    });\r\n    setExercises(exerciseArray);\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = fire\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/trainings/${id}`);\r\n      ref.child(`exercises`).on(\"value\", loadTrainings);\r\n      return () => {\r\n        ref.child(`exercises`).off(\"value\", loadTrainings);\r\n      };\r\n    }\r\n  }, [currentUser, id]);\r\n\r\n  return (\r\n    <div className=\"training\">\r\n      {!isActiveEditing && (\r\n        <GoBackDelete\r\n          handleEdit={handleDeleteTraining}\r\n          editTitle=\"Usuń trening\"\r\n        />\r\n      )}\r\n\r\n      {currentUser && (\r\n        <EditTitle\r\n          labelText=\"Nazwa treningu\"\r\n          editDate={true}\r\n          refUrl={`users/${currentUser.uid}/trainings/${id}`}\r\n          isActiveEditing={isActiveEditing}\r\n          setIsActiveEditing={setIsActiveEditing}\r\n        />\r\n      )}\r\n      {isActiveEditing && exercises && currentUser ? (\r\n        <DragAndDropList\r\n          exercises={exercises}\r\n          id={id}\r\n          refUrl={`users/${currentUser.uid}/trainings/${id}/exercises`}\r\n        />\r\n      ) : (\r\n        <>\r\n          <FormTemplate formFields={formFields} handleSubmit={handleSubmit} />\r\n          {exercises && <TrainingExerciseList exercises={exercises} id={id} />}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Training;\r\n","import React from \"react\";\r\nimport \"./line.scss\";\r\nexport interface Props {\r\n  handleAddSeries: () => void;\r\n}\r\n\r\nconst Line: React.FC<Props> = ({ handleAddSeries }) => {\r\n  return (\r\n    <div onClick={handleAddSeries} className=\"exercise__line\">\r\n      <div className=\"exercise__check\">+</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Line;\r\n","import React from \"react\";\r\nimport \"./removeSeries.scss\";\r\nexport interface Props {\r\n  index: number;\r\n  handleRemoveSeries: (index: number) => void;\r\n}\r\n\r\nconst RemoveSeries: React.FC<Props> = ({ index, handleRemoveSeries }) => {\r\n  return (\r\n    <div className=\"remove-series\">\r\n      <button\r\n        onClick={() => handleRemoveSeries(index)}\r\n        type=\"button\"\r\n        className=\"remove-series__button\"\r\n      >\r\n        Usuń serię\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemoveSeries;\r\n","import React from \"react\";\r\nimport \"./seriesNumber.scss\";\r\nexport interface Props {\r\n  index: number;\r\n}\r\n\r\nconst SeriesNumber: React.FC<Props> = ({ index }) => {\r\n  return (\r\n    <>\r\n      {index % 2 === 0 && <p className=\"seriesNumber\">Seria {index / 2 + 1}</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SeriesNumber;\r\n","import React from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\nimport \"./formInput.scss\";\r\nimport { Line, RemoveSeries, SeriesNumber } from \"./components\";\r\ninterface Fields {\r\n  name: string;\r\n  validate: (value: any) => void;\r\n  initialValue: string | undefined;\r\n  text: string;\r\n  placeholder: string;\r\n}\r\ninterface Button {\r\n  text: string;\r\n}\r\ninterface FormFields {\r\n  fields: Fields[];\r\n  button: Button;\r\n}\r\ninterface Props {\r\n  formFields: FormFields;\r\n  setFormFields: (cos: any) => void;\r\n  handleSubmit: (values: any) => void;\r\n}\r\n\r\nconst FormInput: React.FC<Props> = ({\r\n  formFields: { fields, button },\r\n  handleSubmit,\r\n  setFormFields,\r\n}) => {\r\n  const handleAddSeries = () => {\r\n    fields.push(\r\n      {\r\n        name: `exerciseWeight${ID()}`,\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Ciężar (kg)\",\r\n        placeholder: \"Ciężar (kg)\",\r\n      },\r\n      {\r\n        name: `exerciseRepeat${ID()}`,\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Liczba powtórzeń\",\r\n        placeholder: \"Liczba powtórzeń\",\r\n      }\r\n    );\r\n    setFormFields({\r\n      fields,\r\n      button,\r\n    });\r\n  };\r\n  const ID = function () {\r\n    return (\r\n      Math.random().toString(36).substr(2, 9) +\r\n      Math.random().toString(36).substr(2, 9)\r\n    );\r\n  };\r\n  const handleRemoveSeries = (number: number) => {\r\n    fields.splice(number - 1, 2);\r\n    setFormFields({\r\n      fields,\r\n      button,\r\n    });\r\n  };\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      {(props) => (\r\n        <form onSubmit={props.handleSubmit} className=\"form\">\r\n          {fields.map((formField: any, index: number) => {\r\n            return (\r\n              <Field\r\n                key={formField.name}\r\n                name={formField.name}\r\n                validate={formField.validate}\r\n                defaultValue={formField.initialValue}\r\n                parse={formField.parse}\r\n              >\r\n                {({ input, meta }) => (\r\n                  <>\r\n                    <SeriesNumber index={index} />\r\n                    <div className=\"form__wrapper\">\r\n                      <label>{formField.text}</label>\r\n                      <input\r\n                        className=\"form__input\"\r\n                        {...input}\r\n                        type=\"number\"\r\n                        step=\"1\"\r\n                        min=\"0\"\r\n                        placeholder={formField.placeholder}\r\n                      />\r\n                      {meta.error && meta.touched && (\r\n                        <span className=\"form__span\">{meta.error}</span>\r\n                      )}\r\n                    </div>\r\n                    {index % 2 === 1 && (\r\n                      <RemoveSeries\r\n                        index={index}\r\n                        handleRemoveSeries={handleRemoveSeries}\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Field>\r\n            );\r\n          })}\r\n          <Line handleAddSeries={handleAddSeries} />\r\n          <button className=\"form__button\">{button.text}</button>\r\n        </form>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport { FormInput } from \"./components\";\r\nimport { EditTitle, GoBackDelete } from \"components\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\nimport fire from \"./../../fire\";\r\nimport \"./exercise.scss\";\r\ninterface Id {\r\n  id: string;\r\n}\r\ninterface Params {\r\n  params: Id;\r\n  path: string;\r\n  url: string;\r\n}\r\nexport interface Props {\r\n  match: Params;\r\n}\r\n\r\nconst Exercise: React.FC<Props> = (props) => {\r\n  let history = useHistory();\r\n  const { currentUser } = useContext(AuthContext);\r\n  const url = props.match.url.replace(\"/trainings/\", \"\");\r\n  const id = url.replace(\"/\" + props.match.params.id, \"\");\r\n  const [isActiveEditing, setIsActiveEditing] = useState(false);\r\n  const [formFields, setFormFields] = useState({\r\n    fields: [\r\n      {\r\n        name: \"exerciseWeight\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Ciężar (kg)\",\r\n        placeholder: \"Ciężar (kg)\",\r\n      },\r\n      {\r\n        name: \"exerciseRepeat\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Liczba powtórzeń\",\r\n        placeholder: \"Liczba powtórzeń\",\r\n      },\r\n    ],\r\n    button: {\r\n      type: \"submit\",\r\n      text: \"Zapisz\",\r\n    },\r\n  });\r\n  const handleSaveExercise = () => {\r\n    if (currentUser) {\r\n      fire\r\n        .database()\r\n        .ref(\r\n          `users/${currentUser.uid}/trainings/${id}/exercises/${props.match.params.id}`\r\n        )\r\n        .remove();\r\n      history.goBack();\r\n    }\r\n  };\r\n  const handleSubmit = (values: any) => {\r\n    const newArray: any = [];\r\n    formFields.fields.forEach((field) => {\r\n      newArray.push(values[field.name]);\r\n    });\r\n    if (currentUser) {\r\n      const url = `users/${currentUser.uid}/trainings/${id}/exercises/${props.match.params.id}`;\r\n      fire.database().ref(url).child(\"series\").set(newArray);\r\n    }\r\n  };\r\n  const ID = function () {\r\n    return (\r\n      Math.random().toString(36).substr(2, 9) +\r\n      Math.random().toString(36).substr(2, 9)\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      fire\r\n        .database()\r\n        .ref(\r\n          `users/${currentUser.uid}/trainings/${id}/exercises/${props.match.params.id}/series`\r\n        )\r\n        .on(\"value\", function (snapshot) {\r\n          if (snapshot) {\r\n            const fields: any = [];\r\n            const button = {\r\n              type: \"submit\",\r\n              text: \"Zapisz\",\r\n            };\r\n            snapshot.forEach(function (childSnapshot) {\r\n              const text =\r\n                fields.length % 2 === 0 ? \"Ciężar (kg)\" : \"Liczba powtórzeń\";\r\n\r\n              fields.push({\r\n                name: `${\r\n                  fields.length % 2 === 0 ? \"exerciseWeight\" : \"exerciseRepeat\"\r\n                }${ID()}`,\r\n                validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n                initialValue: childSnapshot.val(),\r\n                text: text,\r\n                placeholder: text,\r\n              });\r\n            });\r\n            if (fields.length > 0) {\r\n              setFormFields({\r\n                fields,\r\n                button,\r\n              });\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }, [currentUser, id, props.match.params.id]);\r\n  return (\r\n    <div className=\"exercise\">\r\n      {!isActiveEditing && (\r\n        <GoBackDelete\r\n          handleEdit={handleSaveExercise}\r\n          editTitle=\"Usuń ćwiczenie\"\r\n        />\r\n      )}\r\n      {currentUser && (\r\n        <EditTitle\r\n          labelText=\"Nazwa ćwiczenia\"\r\n          editDate={false}\r\n          refUrl={`users/${currentUser.uid}/trainings/${id}/exercises/${props.match.params.id}`}\r\n          isActiveEditing={isActiveEditing}\r\n          setIsActiveEditing={setIsActiveEditing}\r\n        />\r\n      )}\r\n      {!isActiveEditing && (\r\n        <FormInput\r\n          formFields={formFields}\r\n          setFormFields={setFormFields}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Exercise;\r\n","import React from \"react\";\r\nimport { Chart } from \"components\";\r\ninterface training {\r\n  date: string;\r\n  id: string;\r\n  workoutName: string;\r\n  exercises?: object;\r\n}\r\nexport interface Props {\r\n  trainings: Array<training>;\r\n}\r\n\r\nconst TrainingsPerMonth: React.FC<Props> = ({ trainings }) => {\r\n  const weekNames = [\r\n    \"Styczeń\",\r\n    \"Luty\",\r\n    \"Marzec\",\r\n    \"Kwiecień\",\r\n    \"Maj\",\r\n    \"Czerwiec\",\r\n    \"Lipiec\",\r\n    \"Sierpień\",\r\n    \"Wrzesień\",\r\n    \"Październik\",\r\n    \"Listopad\",\r\n    \"Grudzień\",\r\n  ];\r\n  const trainingsPerMonth: Array<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n  trainings.forEach((training: training) => {\r\n    trainingsPerMonth[new Date(training.date).getMonth()] += 1;\r\n  });\r\n  const specification = {\r\n    type: \"bar\",\r\n    data: {\r\n      labels: weekNames,\r\n      datasets: [\r\n        {\r\n          data: trainingsPerMonth,\r\n          backgroundColor: function (context: any) {\r\n            const index = context.dataIndex;\r\n            return index % 2\r\n              ? \"rgba(255, 165, 0, 0.5)\"\r\n              : \"rgba(235, 118, 98, 0.8)\";\r\n          },\r\n\r\n          borderColor: function (context: any) {\r\n            const index = context.dataIndex;\r\n            return index % 2\r\n              ? \"rgba(255, 165, 0, 0.5)\"\r\n              : \"rgba(235, 118, 98, 1)\";\r\n          },\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: [],\r\n          hoverBorderColor: [],\r\n          hoverBorderWidth: 3,\r\n          weight: 1,\r\n        },\r\n      ],\r\n    },\r\n\r\n    options: {\r\n      title: {\r\n        display: true,\r\n        text: \"Liczba treningów w roku\",\r\n      },\r\n      legend: {\r\n        display: false,\r\n        labels: {},\r\n        position: \"right\",\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              lineHeight: 2,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  return <>{<Chart specification={specification}> </Chart>}</>;\r\n};\r\n\r\nexport default TrainingsPerMonth;\r\n","import React from \"react\";\r\nimport { Chart } from \"components\";\r\ninterface trainingsPerTrainingNameItem {\r\n  name: Array<string>;\r\n  amount: Array<number>;\r\n}\r\ninterface training {\r\n  date: string;\r\n  id: string;\r\n  workoutName: string;\r\n  exercises?: object;\r\n}\r\nexport interface Props {\r\n  trainings: Array<training>;\r\n}\r\n\r\nconst TrainingsPerTrainingName: React.FC<Props> = ({ trainings }) => {\r\n  const trainingsPerTrainingName: trainingsPerTrainingNameItem = {\r\n    name: [],\r\n    amount: [],\r\n  };\r\n  trainings.forEach((training: training) => {\r\n    const index = trainingsPerTrainingName.name.findIndex(\r\n      (item) => item === training.workoutName\r\n    );\r\n    if (index !== -1) {\r\n      ++trainingsPerTrainingName.amount[index];\r\n    } else {\r\n      trainingsPerTrainingName.name.push(training.workoutName);\r\n      trainingsPerTrainingName.amount.push(1);\r\n    }\r\n  });\r\n\r\n  const specification = {\r\n    type: \"pie\",\r\n\r\n    data: {\r\n      labels: trainingsPerTrainingName.name,\r\n      datasets: [\r\n        {\r\n          data: trainingsPerTrainingName.amount,\r\n          backgroundColor: [\r\n            \"rgba(230, 25, 75, 0.2)\",\r\n            \"rgba(245, 130, 48, 0.2)\",\r\n            \"rgba(255, 225, 25, 0.2)\",\r\n            \"rgba(210, 245,60, 0.2)\",\r\n            \"rgba(60, 180, 75, 0.2)\",\r\n            \"rgba(70, 240, 75, 0.2)\",\r\n            \"rgba(0, 130, 200, 0.2)\",\r\n            \"rgba(0, 0, 128, 0.2)\",\r\n            \"rgba(145, 30, 180, 0.2)\",\r\n            \"rgba(240, 30, 180, 0.2)\",\r\n            \"rgba(128, 128, 128, 0.2)\",\r\n            \"rgba(0, 0, 0, 0.2)\",\r\n          ],\r\n          borderColor: [\r\n            \"rgba(230, 25, 75, 0.8)\",\r\n            \"rgba(245, 130, 48, 0.8)\",\r\n            \"rgba(255, 225, 25, 0.8)\",\r\n            \"rgba(210, 245,60,0.8)\",\r\n            \"rgba(60, 180, 75, 0.8)\",\r\n            \"rgba(70, 240, 75,0.8)\",\r\n            \"rgba(0, 130, 200,0.8)\",\r\n            \"rgba(0, 0, 128, 0.8)\",\r\n            \"rgba(145, 30, 180, 0.8)\",\r\n            \"rgba(240, 30, 180, 0.8)\",\r\n            \"rgba(128, 128, 128, 0.8)\",\r\n            \"rgba(0, 0, 0, 0.8)\",\r\n          ],\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: [\r\n            \"rgba(230, 25, 75, 0.5)\",\r\n            \"rgba(245, 130, 48, 0.5)\",\r\n            \"rgba(255, 225, 25, 0.5)\",\r\n            \"rgba(210, 245,60, 0.5)\",\r\n            \"rgba(60, 180, 75, 0.5)\",\r\n            \"rgba(70, 240, 75, 0.5)\",\r\n            \"rgba(0, 130, 200, 0.5)\",\r\n            \"rgba(0, 0, 128, 0.5)\",\r\n            \"rgba(145, 30, 180, 0.5)\",\r\n            \"rgba(240, 30, 180, 0.5)\",\r\n            \"rgba(128, 128, 128, 0.5)\",\r\n            \"rgba(0, 0, 0, 0.5)\",\r\n          ],\r\n          hoverBorderColor: [\r\n            \"rgba(230, 25, 75, 1)\",\r\n            \"rgba(245, 130, 48, 1)\",\r\n            \"rgba(255, 225, 25, 1)\",\r\n            \"rgba(210, 245,60,1)\",\r\n            \"rgba(60, 180, 75, 1)\",\r\n            \"rgba(70, 240, 75,1)\",\r\n            \"rgba(0, 130, 200,1)\",\r\n            \"rgba(0, 0, 128, 1)\",\r\n            \"rgba(145, 30, 180, 1)\",\r\n            \"rgba(240, 30, 180, 1)\",\r\n            \"rgba(128, 128, 128, 1)\",\r\n            \"rgba(0, 0, 0, 1)\",\r\n          ],\r\n          hoverBorderWidth: 3,\r\n          weight: 1,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return <>{<Chart specification={specification}> </Chart>}</>;\r\n};\r\n\r\nexport default TrainingsPerTrainingName;\r\n","import React, { useState } from \"react\";\r\nimport { Chart } from \"components\";\r\n\r\nimport \"./weightRaisedPerTrainingName.scss\";\r\ninterface trainingsPerTrainingNameItem {\r\n  date: Array<string>;\r\n  amount: Array<number>;\r\n}\r\ninterface training {\r\n  date: string;\r\n  id: string;\r\n  workoutName: string;\r\n  exercises?: object;\r\n}\r\nexport interface Props {\r\n  trainings: Array<training>;\r\n}\r\n\r\nconst WeightRaisedPerTrainingName: React.FC<Props> = ({ trainings }) => {\r\n  const options: Array<string> = [];\r\n  trainings.forEach((training: training) => {\r\n    const id = options.findIndex((item) => item === training.workoutName);\r\n    if (id === -1) {\r\n      options.push(training.workoutName);\r\n    }\r\n  });\r\n\r\n  const [selectChange, setSelectChange] = useState<string>(options[0]);\r\n  const data = trainings.filter((training: training) => {\r\n    return training.workoutName === selectChange;\r\n  });\r\n  const trainingsArray: trainingsPerTrainingNameItem = { date: [], amount: [] };\r\n  data.forEach((training) => {\r\n    let amount = 0;\r\n    if (training.exercises) {\r\n      for (const [, value] of Object.entries(training.exercises)) {\r\n        if (value.series) {\r\n          let seriesArray = [];\r\n\r\n          for (const [, series] of Object.entries(value.series)) {\r\n            seriesArray.push(series);\r\n          }\r\n          for (let i = 0; i < seriesArray.length; i += 2) {\r\n            amount += Number(seriesArray[i]) * Number(seriesArray[i + 1]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const date = new Date(training.date);\r\n    const formatedDate = `${\r\n      date.getDate() <= 9 ? \"0\" + date.getDate() : date.getDate()\r\n    }/${\r\n      date.getMonth() + 1 < 10 ? \"0\" + date.getMonth() + 1 : date.getMonth() + 1\r\n    }/${date.getFullYear()}`;\r\n    trainingsArray.date.push(formatedDate);\r\n    trainingsArray.amount.push(amount);\r\n  });\r\n\r\n  const specification = {\r\n    type: \"bar\",\r\n    data: {\r\n      labels: trainingsArray.date,\r\n      datasets: [\r\n        {\r\n          data: trainingsArray.amount,\r\n          backgroundColor: function (context: any) {\r\n            const index = context.dataIndex;\r\n            return index % 2\r\n              ? \"rgba(255, 165, 0, 0.5)\"\r\n              : \"rgba(235, 118, 98, 0.8)\";\r\n          },\r\n\r\n          borderColor: function (context: any) {\r\n            const index = context.dataIndex;\r\n            return index % 2\r\n              ? \"rgba(255, 165, 0, 0.5)\"\r\n              : \"rgba(235, 118, 98, 1)\";\r\n          },\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: [],\r\n          hoverBorderColor: [],\r\n          hoverBorderWidth: 3,\r\n          weight: 1,\r\n        },\r\n      ],\r\n    },\r\n\r\n    options: {\r\n      title: {\r\n        display: true,\r\n        text: \"Liczba podniesionych kg\",\r\n      },\r\n      legend: {\r\n        display: false,\r\n        labels: {},\r\n        position: \"right\",\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              lineHeight: 2,\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n  const handleSelectChange = (e: any) => {\r\n    setSelectChange(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"weightRaisedPerTrainingName\">\r\n      <label className=\"weightRaisedPerTrainingName__label\">\r\n        Wybierz partię mięśni\r\n      </label>\r\n      <select onChange={handleSelectChange}>\r\n        {options.map((item, index) => {\r\n          return (\r\n            <option key={index} value={item}>\r\n              {item}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n\r\n      {<Chart specification={specification}> </Chart>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeightRaisedPerTrainingName;\r\n","import React from \"react\";\r\nimport {\r\n  TrainingsPerMonth,\r\n  TrainingsPerTrainingName,\r\n  WeightRaisedPerTrainingName,\r\n} from \"./components\";\r\ninterface training {\r\n  date: string;\r\n  id: string;\r\n  workoutName: string;\r\n  exercises?: object;\r\n}\r\nexport interface Props {\r\n  trainings: Array<training>;\r\n}\r\nconst Charts: React.FC<Props> = ({ trainings }) => {\r\n  return (\r\n    <>\r\n      <TrainingsPerMonth trainings={trainings} />\r\n      <TrainingsPerTrainingName trainings={trainings} />\r\n      <WeightRaisedPerTrainingName trainings={trainings} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport fire from \"fire\";\r\nimport { Charts } from \"./components\";\r\ntype exercise = {\r\n  workoutName: string;\r\n  series?: Array<string>;\r\n};\r\ninterface training {\r\n  date: string;\r\n  id: string;\r\n  workoutName: string;\r\n  exercises?: object;\r\n}\r\nexport interface Props {}\r\nconst Statistics: React.FC<Props> = () => {\r\n  const { currentUser }: any | undefined = useContext(AuthContext);\r\n  const [trainings, setTrainings] = useState<Array<training>>();\r\n  const uploadTrainings = function (snapshot: any) {\r\n    const trainingArray: Array<training> = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      trainingArray.push(childSnapshot.val());\r\n    });\r\n    setTrainings(trainingArray);\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = fire.database().ref(`users/${currentUser.uid}/trainings`);\r\n      ref.once(\"value\", uploadTrainings);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  return <>{trainings && <Charts trainings={trainings} />}</>;\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { useContext } from \"react\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport fire from \"../../../../fire\";\r\nimport { PopUp } from \"components\";\r\nexport interface Props {\r\n  measurements: Array<measurement>;\r\n  setShowBlock: (arg: boolean) => void;\r\n  setMeasurements: (arg: Array<measurement>) => void;\r\n}\r\ninterface measurement {\r\n  id: string;\r\n  date: string;\r\n  weight: number;\r\n  arm: number;\r\n  chest: number;\r\n  waist: number;\r\n  thighs: number;\r\n}\r\ninterface Fields {\r\n  name?: string;\r\n  validate?: (value: any) => void;\r\n  initialValue?: string | undefined;\r\n  text?: string;\r\n  placeholder?: string;\r\n  type?: string;\r\n  step?: string;\r\n  min?: string;\r\n}\r\ninterface Button {\r\n  text: string;\r\n  type: string;\r\n}\r\ninterface FormFields {\r\n  fields: Fields[];\r\n  button: Button;\r\n}\r\nconst Block: React.FC<Props> = ({\r\n  measurements,\r\n  setShowBlock,\r\n  setMeasurements,\r\n}) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const today = new Date();\r\n  const todayDatePattern = `${today.getFullYear()}-${today.getMonth() + 1}-${\r\n    today.getDate() > 9 ? today.getDate() : \"0\" + today.getDate()\r\n  }`;\r\n  const formFields: FormFields = {\r\n    fields: [\r\n      {\r\n        name: \"date\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: todayDatePattern,\r\n        text: \"Data treningu\",\r\n        placeholder: \"Data treningu\",\r\n        type: \"date\",\r\n      },\r\n      {\r\n        name: \"weight\",\r\n        initialValue: undefined,\r\n        text: \"Weight\",\r\n        placeholder: \"Wight\",\r\n        type: \"number\",\r\n        step: \"1\",\r\n        min: \"0\",\r\n      },\r\n      {\r\n        name: \"arm\",\r\n        initialValue: undefined,\r\n        text: \"Arm\",\r\n        placeholder: \"Arm\",\r\n        type: \"number\",\r\n        step: \"1\",\r\n        min: \"0\",\r\n      },\r\n      {\r\n        name: \"chest\",\r\n        initialValue: undefined,\r\n        text: \"Chest\",\r\n        placeholder: \"Chest\",\r\n        type: \"number\",\r\n        step: \"1\",\r\n        min: \"0\",\r\n      },\r\n      {\r\n        name: \"waist\",\r\n        initialValue: undefined,\r\n        text: \"Waist\",\r\n        placeholder: \"Waist\",\r\n        type: \"number\",\r\n        step: \"1\",\r\n        min: \"0\",\r\n      },\r\n      {\r\n        name: \"thighs\",\r\n        initialValue: undefined,\r\n        text: \"Thighs\",\r\n        placeholder: \"Thighs\",\r\n        type: \"number\",\r\n        step: \"1\",\r\n        min: \"0\",\r\n      },\r\n    ],\r\n    button: {\r\n      type: \"submit\",\r\n      text: \"Dodaj\",\r\n    },\r\n  };\r\n  const ID = function () {\r\n    return (\r\n      Math.random().toString(36).substr(2, 9) +\r\n      Math.random().toString(36).substr(2, 9) +\r\n      Math.random().toString(36).substr(2, 9)\r\n    );\r\n  };\r\n  const handleRemoveBlock = () => {\r\n    setShowBlock(false);\r\n  };\r\n  const saveMeasurement = (userId: string, newMeasurement: any) => {\r\n    fire\r\n      .database()\r\n      .ref(\"users/\" + userId + \"/measurements\")\r\n      .set([...measurements, newMeasurement]);\r\n  };\r\n  const handleSubmit = (values: measurement) => {\r\n    if (\r\n      !values.arm &&\r\n      !values.chest &&\r\n      !values.thighs &&\r\n      !values.waist &&\r\n      !values.weight\r\n    ) {\r\n    } else {\r\n      setMeasurements([...measurements, { ...values, id: ID() }]);\r\n      setShowBlock(false);\r\n      if (currentUser) {\r\n        saveMeasurement(currentUser.uid, { ...values, id: ID() });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <PopUp\r\n      handleRemoveBlock={handleRemoveBlock}\r\n      formFields={formFields}\r\n      handleSubmit={handleSubmit}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Block;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Block } from \"./components\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport fire from \"../../fire\";\r\nimport \"./measurement.scss\";\r\nimport { Button } from \"components\";\r\nexport interface Props {}\r\n\r\ninterface measurement {\r\n  id: string;\r\n  date: string;\r\n  weight: number;\r\n  arm: number;\r\n  chest: number;\r\n  waist: number;\r\n  thighs: number;\r\n}\r\nconst Measurement: React.FC<Props> = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [measurements, setMeasurements] = useState<Array<measurement>>([]);\r\n  const [showBlock, setShowBlock] = useState(false);\r\n  const handleAddMeasurement = () => {\r\n    setShowBlock(true);\r\n  };\r\n  const handleDeleteMeasurement = (id: string) => {\r\n    const filteredMeasurements = measurements.filter(\r\n      (item: any) => item.id !== id\r\n    );\r\n    if (currentUser) {\r\n      fire\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/measurements\")\r\n        .set([...filteredMeasurements]);\r\n    }\r\n  };\r\n  const uploadMeasurements = function (snapshot: any) {\r\n    const measurementsArray: any = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const childData = childSnapshot.val();\r\n      measurementsArray.push(childData);\r\n    });\r\n    setMeasurements(measurementsArray);\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = fire\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/measurements\")\r\n        .orderByChild(\"date\");\r\n      ref.on(\"value\", uploadMeasurements);\r\n      return () => {\r\n        ref.off(\"value\", uploadMeasurements);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n  return (\r\n    <div className=\"measurement\">\r\n      <Button onClick={handleAddMeasurement}>Dodaj pomiary</Button>\r\n      {showBlock && (\r\n        <Block\r\n          measurements={measurements}\r\n          setShowBlock={setShowBlock}\r\n          setMeasurements={setMeasurements}\r\n        />\r\n      )}\r\n      <table className=\"measurement__table\">\r\n        <thead className=\"measurement__thead\">\r\n          <tr className=\"measurement__tr\">\r\n            <th className=\"measurement__th\">Data</th>\r\n            <th className=\"measurement__th\">Waga</th>\r\n            <th className=\"measurement__th\">Ramię</th>\r\n            <th className=\"measurement__th\">Klatka</th>\r\n            <th className=\"measurement__th\">Talia</th>\r\n            <th className=\"measurement__th\">Uda</th>\r\n            <th className=\"measurement__th\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"measurement__tbody\">\r\n          {measurements\r\n            .map((measurement) => {\r\n              const date = new Date(measurement.date);\r\n              const modifiedDate = `${\r\n                date.getDate() > 9 ? date.getDate() : \"0\" + date.getDate()\r\n              }/${\r\n                date.getMonth() + 1 > 9\r\n                  ? date.getMonth() + 1\r\n                  : \"0\" + date.getMonth() + 1\r\n              }/${date.getFullYear()}`;\r\n              return (\r\n                <tr className=\"measurement__tr\" key={measurement.id}>\r\n                  <td className=\"measurement__td\">{modifiedDate}</td>\r\n                  <td className=\"measurement__td\">{measurement.weight}</td>\r\n                  <td className=\"measurement__td\">{measurement.arm}</td>\r\n                  <td className=\"measurement__td\">{measurement.chest}</td>\r\n                  <td className=\"measurement__td\">{measurement.waist}</td>\r\n                  <td className=\"measurement__td\">{measurement.thighs}</td>\r\n                  <td className=\"measurement__td\">\r\n                    <Button\r\n                      onClick={() => handleDeleteMeasurement(measurement.id)}\r\n                    >\r\n                      Usuń\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })\r\n            .reverse()}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Measurement;\r\n","import * as React from \"react\";\r\nimport \"./dietNutrient.scss\";\r\nexport interface Props {\r\n  title: string;\r\n  nutrients: Array<number>;\r\n  index: number;\r\n}\r\n\r\nconst DietNutrient: React.FC<Props> = ({ title, nutrients, index }) => {\r\n  return (\r\n    <>\r\n      <div className=\"diet-nutrient\">\r\n        <p className=\"diet-nutrient__title\">{title}</p>\r\n        <p className=\"diet-nutrient__amount\">{nutrients[index]}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DietNutrient;\r\n","import React from \"react\";\r\nimport { DietNutrient } from \"./components\";\r\nimport \"./dietElement.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport interface Props {\r\n  date: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  mineralsalt: number;\r\n  calories: number;\r\n}\r\n\r\nconst DietElement: React.FC<Props> = ({\r\n  date,\r\n  carbs,\r\n  fats,\r\n  proteins,\r\n  mineralsalt,\r\n  calories,\r\n}) => {\r\n  const history = useHistory();\r\n  const titles: Array<string> = [\r\n    \"Węglowodany\",\r\n    \"Tłuszcze\",\r\n    \"Białko\",\r\n    \"Sole mineralne\",\r\n    \"Kalorie\",\r\n  ];\r\n  const nutrients: Array<number> = [\r\n    carbs,\r\n    fats,\r\n    proteins,\r\n    mineralsalt,\r\n    calories,\r\n  ];\r\n  const handleDietDay = (date: string) => {\r\n    history.push(`diet/${date}`);\r\n  };\r\n  const modifiedDate = `${date.slice(6, 8)}/${date.slice(4, 6)}/${date.slice(\r\n    0,\r\n    4\r\n  )}`;\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => handleDietDay(date)}\r\n        className=\"diet-element\"\r\n        key={date}\r\n      >\r\n        <div className=\"diet-element__date\">{modifiedDate}</div>\r\n        <div className=\"diet-element__nutrients\">\r\n          {titles.map((title: string, index: number) => {\r\n            return (\r\n              <DietNutrient\r\n                key={title}\r\n                title={title}\r\n                nutrients={nutrients}\r\n                index={index}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DietElement;\r\n","import React from \"react\";\r\nimport { DietElement } from \"./components\";\r\ninterface list {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  mineralsalt: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<list>;\r\n}\r\ninterface diet {\r\n  date: string;\r\n  meal: Array<meal>;\r\n}\r\nexport interface Props {\r\n  diets: Array<diet>;\r\n}\r\n\r\nconst DietList: React.FC<Props> = ({ diets }) => {\r\n  return (\r\n    <>\r\n      {diets\r\n        .map((diet) => {\r\n          let [carbs, fats, proteins, mineralsalt, calories] = [0, 0, 0, 0, 0];\r\n          if (diet.meal) {\r\n            diet.meal.forEach((meal) => {\r\n              if (meal.list) {\r\n                meal.list.forEach((item) => {\r\n                  carbs += item.carbs;\r\n                  fats += item.fats;\r\n                  proteins += item.proteins;\r\n                  mineralsalt += item.mineralsalt;\r\n                  calories += item.calories;\r\n                });\r\n              }\r\n            });\r\n          }\r\n          return (\r\n            <DietElement\r\n              key={diet.date}\r\n              date={diet.date}\r\n              carbs={carbs}\r\n              fats={fats}\r\n              proteins={proteins}\r\n              mineralsalt={mineralsalt}\r\n              calories={calories}\r\n            />\r\n          );\r\n        })\r\n        .reverse()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DietList;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { DietList } from \"./components\";\r\nimport \"./diet.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport { Button } from \"components\";\r\ninterface list {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  mineralsalt: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<list>;\r\n}\r\ninterface diet {\r\n  date: string;\r\n  meal: Array<meal>;\r\n}\r\nexport interface Props {}\r\n\r\nconst Diet: React.FC<Props> = () => {\r\n  const history = useHistory();\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [diets, setDiets] = useState<Array<diet>>([]);\r\n  const [flag, setFlag] = useState(false);\r\n  const handleAddDiet = () => {\r\n    const today = new Date();\r\n    const todayDatePattern = `${today.getFullYear()}${today.getMonth() + 1}${\r\n      today.getDate() > 9 ? today.getDate() : \"0\" + today.getDate()\r\n    }`;\r\n    let flag = true;\r\n    diets.forEach((item) => {\r\n      if (todayDatePattern === item.date) {\r\n        flag = false;\r\n        setFlag(true);\r\n      }\r\n    });\r\n    if (flag) {\r\n      const saveNewDiet = (userId: string, date: string) => {\r\n        firebase\r\n          .database()\r\n          .ref(\"users/\" + userId + \"/diet/\" + date)\r\n          .set({ date });\r\n      };\r\n\r\n      if (currentUser) {\r\n        saveNewDiet(currentUser.uid, todayDatePattern);\r\n        history.push(`/diet/${todayDatePattern}`);\r\n      }\r\n    }\r\n  };\r\n  const uploadDiet = function (snapshot: any) {\r\n    const dietArray: any = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const childData = childSnapshot.val();\r\n      dietArray.push(childData);\r\n    });\r\n\r\n    setDiets(dietArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/diet\")\r\n        .orderByChild(\"date\");\r\n      ref.on(\"value\", uploadDiet);\r\n      return () => {\r\n        ref.off(\"value\", uploadDiet);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n  return (\r\n    <div className=\"diet\">\r\n      <div className=\"diet__div\">\r\n        <Button onClick={handleAddDiet}>Dodaj diete</Button>\r\n        {flag && (\r\n          <span className=\"diet__span\">Dzisiejsza dieta jest już dodana</span>\r\n        )}\r\n      </div>\r\n      <DietList diets={diets} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Diet;\r\n","import React, { useContext } from \"react\";\r\nimport { PopUp } from \"components\";\r\nimport { required, composeValidators, mustBeAmount } from \"utils/validation\";\r\nimport firebase from \"firebase/app\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\ninterface mealItem {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  mineralsalt: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n}\r\ninterface Fields {\r\n  name?: string;\r\n  validate?: (value: any) => void;\r\n  initialValue?: string | undefined;\r\n  text?: string;\r\n  placeholder?: string;\r\n  type?: string;\r\n  step?: string;\r\n  min?: string;\r\n}\r\ninterface Button {\r\n  text: string;\r\n  type: string;\r\n}\r\ninterface FormFields {\r\n  fields: Fields[];\r\n  button: Button;\r\n}\r\n\r\nexport interface Props {\r\n  index: number;\r\n  id: string;\r\n  setShowBlock: (arg: boolean) => void;\r\n  meal: meal;\r\n}\r\n\r\nconst AddElementBlock: React.FC<Props> = ({\r\n  index,\r\n  id,\r\n  setShowBlock,\r\n  meal,\r\n}) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const formFields: FormFields = {\r\n    fields: [\r\n      {\r\n        name: \"ingredient\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Nazwa składnika\",\r\n        placeholder: \"Nazwa składnika\",\r\n        type: \"text\",\r\n      },\r\n      {\r\n        name: \"carbs\",\r\n        validate: composeValidators(\r\n          required(\"To pole jest wymagane!\"),\r\n          mustBeAmount(\"To nie jest liczba!\")\r\n        ),\r\n        initialValue: undefined,\r\n        text: \"Węglowodany\",\r\n        placeholder: \"Węglowodany\",\r\n        type: \"number\",\r\n        step: \"0.1\",\r\n        min: \"0\",\r\n      },\r\n      {\r\n        name: \"fats\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Tłuszcze\",\r\n        placeholder: \"Tłuszcze\",\r\n        type: \"number\",\r\n        step: \"0.1\",\r\n        min: \"0\",\r\n      },\r\n      {\r\n        name: \"proteins\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Białko\",\r\n        placeholder: \"Białko\",\r\n        type: \"number\",\r\n        step: \"0.1\",\r\n        min: \"0\",\r\n      },\r\n      {\r\n        name: \"mineralsalt\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Sole mineralne\",\r\n        placeholder: \"Sole mineralne\",\r\n        type: \"number\",\r\n        step: \"0.1\",\r\n        min: \"0\",\r\n      },\r\n      {\r\n        name: \"calories\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Wartość energetyczna (kcal)\",\r\n        placeholder: \"Wartość energetyczna (kcal)\",\r\n        type: \"number\",\r\n        step: \"0.1\",\r\n        min: \"0\",\r\n      },\r\n    ],\r\n    button: {\r\n      type: \"submit\",\r\n      text: \"Dodaj\",\r\n    },\r\n  };\r\n  const handleRemoveBlock = () => {\r\n    setShowBlock(false);\r\n  };\r\n  const saveIngredient = (\r\n    userId: string,\r\n    index: number,\r\n    values: mealItem,\r\n    list: Array<mealItem>\r\n  ) => {\r\n    const newList = list ? list : [];\r\n    firebase\r\n      .database()\r\n      .ref(`users/${userId}/diet/${id}/meal/${index}/list`)\r\n      .set([...newList, values]);\r\n  };\r\n  const handleSubmit = (values: mealItem) => {\r\n    const valuesModified = {\r\n      ingredient: values.ingredient,\r\n      carbs: Number(values.carbs),\r\n      fats: Number(values.fats),\r\n      proteins: Number(values.proteins),\r\n      mineralsalt: Number(values.mineralsalt),\r\n      calories: Number(values.calories),\r\n    };\r\n\r\n    if (currentUser) {\r\n      saveIngredient(currentUser.uid, index, valuesModified, meal.list);\r\n    }\r\n    setShowBlock(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PopUp\r\n        handleRemoveBlock={handleRemoveBlock}\r\n        formFields={formFields}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddElementBlock;\r\n","import React, { useContext } from \"react\";\r\nimport { IoIosRemoveCircleOutline } from \"react-icons/io\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\ninterface mealItem {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  mineralsalt: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n}\r\nexport interface Props {\r\n  meal: meal;\r\n  item: mealItem;\r\n  index: number;\r\n  indexList: number;\r\n  id: string;\r\n}\r\n\r\nconst IngredientItem: React.FC<Props> = ({\r\n  meal,\r\n  item,\r\n  index,\r\n  indexList,\r\n  id,\r\n}) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const handleRemoveMealItem = (index: number) => {\r\n    if (currentUser) {\r\n      const filteredList = meal.list.filter((item, ind) => ind !== index);\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/diet/${id}/meal/${indexList}/list`)\r\n        .set([...filteredList]);\r\n    }\r\n  };\r\n  return (\r\n    <tr>\r\n      <td className=\"meal-table__td\">{item.ingredient}</td>\r\n      <td className=\"meal-table__td\">{item.carbs}</td>\r\n      <td className=\"meal-table__td\">{item.fats}</td>\r\n      <td className=\"meal-table__td\">{item.proteins}</td>\r\n      <td className=\"meal-table__td\">{item.mineralsalt}</td>\r\n      <td className=\"meal-table__td\">{item.calories}</td>\r\n      <td className=\"meal-table__td\">\r\n        <IoIosRemoveCircleOutline onClick={() => handleRemoveMealItem(index)} />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default IngredientItem;\r\n","import React from \"react\";\r\ninterface mealItem {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  mineralsalt: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n}\r\nexport interface Props {\r\n  meal: meal;\r\n  titles: Array<string>;\r\n}\r\n\r\nconst SumNutrientsByType: React.FC<Props> = ({ meal, titles }) => {\r\n  const sumNutrientsByType = [0, 0, 0, 0, 0];\r\n  if (meal.list) {\r\n    meal.list.forEach((item) => {\r\n      sumNutrientsByType[0] += item.carbs;\r\n      sumNutrientsByType[1] += item.fats;\r\n      sumNutrientsByType[2] += item.proteins;\r\n      sumNutrientsByType[3] += item.mineralsalt;\r\n      sumNutrientsByType[4] += item.calories;\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      {sumNutrientsByType.map((item, index) => {\r\n        return (\r\n          <td key={titles[index]} className=\"meal-table__td\">\r\n            {item}\r\n          </td>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SumNutrientsByType;\r\n","import { Button } from \"components\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport { AddElementBlock } from \"./../../components\";\r\n\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport { IngredientItem, SumNutrientsByType } from \"./components\";\r\nimport \"./mealTable.scss\";\r\ninterface mealItem {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  mineralsalt: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n}\r\nexport interface Props {\r\n  meals: Array<meal>;\r\n  meal: meal;\r\n  indexList: number;\r\n  id: string;\r\n}\r\n\r\nconst MealTable: React.FC<Props> = ({ meals, meal, indexList, id }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [showBlock, setShowBlock] = useState(false);\r\n  const titles: Array<string> = [\r\n    \"Węglowodany\",\r\n    \"Tłuszcze\",\r\n    \"Białko\",\r\n    \"Sole mineralne\",\r\n    \"Kalorie\",\r\n  ];\r\n\r\n  const handleAddMealEelement = () => {\r\n    setShowBlock(true);\r\n  };\r\n\r\n  const handleRemoveMeal = (mealName: string) => {\r\n    if (currentUser) {\r\n      const filteredMealList = meals.filter(\r\n        (item) => item.mealName !== mealName\r\n      );\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/diet/${id}/meal`)\r\n        .set([...filteredMealList]);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <table key={meal.mealName} className=\"meal-table\">\r\n        <thead className=\"meal-table__thead\">\r\n          <tr className=\"meal-table__tr\">\r\n            <th className=\"meal-table__th\">{meal.mealName}</th>\r\n            {titles.map((title) => (\r\n              <th key={title} className=\"meal-table__th\">\r\n                {title}\r\n              </th>\r\n            ))}\r\n\r\n            <th className=\"meal-table__th\">\r\n              <AiFillDelete onClick={() => handleRemoveMeal(meal.mealName)} />\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"meal-table__tbody\">\r\n          {meal.list &&\r\n            meal.list.map((item, index) => {\r\n              return (\r\n                <IngredientItem\r\n                  key={item.ingredient}\r\n                  meal={meal}\r\n                  item={item}\r\n                  index={index}\r\n                  indexList={indexList}\r\n                  id={id}\r\n                />\r\n              );\r\n            })}\r\n          <tr className=\"meal-table__tr\">\r\n            <td className=\"meal-table__td\">\r\n              <Button onClick={handleAddMealEelement}>Dodaj</Button>\r\n            </td>\r\n            <SumNutrientsByType meal={meal} titles={titles} />\r\n            <td className=\"meal-table__td\"></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      {showBlock && (\r\n        <AddElementBlock\r\n          index={indexList}\r\n          id={id}\r\n          setShowBlock={setShowBlock}\r\n          meal={meal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MealTable;\r\n","import React from \"react\";\r\n\r\nimport { MealTable } from \"./components\";\r\ninterface mealItem {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  mineralsalt: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n}\r\n\r\nexport interface Props {\r\n  meals: Array<meal>;\r\n  id: string;\r\n}\r\nconst MealList: React.FC<Props> = ({ meals, id }) => {\r\n  return (\r\n    <>\r\n      {meals &&\r\n        meals.map((meal, index) => {\r\n          return (\r\n            <MealTable\r\n              key={meal.mealName}\r\n              meals={meals}\r\n              meal={meal}\r\n              indexList={index}\r\n              id={id}\r\n            />\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MealList;\r\n","import React, { useContext } from \"react\";\r\nimport { PopUp } from \"components\";\r\nimport firebase from \"firebase/app\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport { composeValidators, required, uniqueMealName } from \"utils/validation\";\r\ninterface values {\r\n  mealName: string;\r\n}\r\n\r\ninterface Fields {\r\n  name?: string;\r\n  validate?: (value: any) => void;\r\n  initialValue?: string | undefined;\r\n  text?: string;\r\n  placeholder?: string;\r\n  type?: string;\r\n  step?: string;\r\n  min?: string;\r\n}\r\ninterface Button {\r\n  text: string;\r\n  type: string;\r\n}\r\ninterface FormFields {\r\n  fields: Fields[];\r\n  button: Button;\r\n}\r\nexport interface Props {\r\n  setShowBlock: (arg: boolean) => void;\r\n  meals: any;\r\n  id: string;\r\n}\r\n\r\nconst Block: React.FC<Props> = ({ setShowBlock, meals, id }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const formFields: FormFields = {\r\n    fields: [\r\n      {\r\n        name: \"mealName\",\r\n        validate: composeValidators(\r\n          required(\"To pole jest wymagane!\"),\r\n          uniqueMealName(meals, \"Taki posiłek już istnieje!\")\r\n        ),\r\n\r\n        initialValue: undefined,\r\n        text: \"Nazwa posiłku\",\r\n        placeholder: \"Nazwa posiłku\",\r\n        type: \"text\",\r\n      },\r\n    ],\r\n    button: {\r\n      type: \"submit\",\r\n      text: \"Dodaj\",\r\n    },\r\n  };\r\n  const handleRemoveBlock = () => {\r\n    setShowBlock(false);\r\n  };\r\n  const saveMeal = (userId: string, values: values) => {\r\n    firebase\r\n      .database()\r\n      .ref(`users/${userId}/diet/${id}/meal`)\r\n      .set([...meals, values]);\r\n  };\r\n  const handleSubmit = (values: values) => {\r\n    if (values.mealName) {\r\n      if (currentUser) {\r\n        saveMeal(currentUser.uid, values);\r\n      }\r\n    }\r\n    setShowBlock(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PopUp\r\n        handleRemoveBlock={handleRemoveBlock}\r\n        formFields={formFields}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Block;\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"components\";\r\nimport { Block } from \"./components\";\r\nexport interface Props {\r\n  meals: any;\r\n  id: string;\r\n}\r\n\r\nconst AddMeal: React.FC<Props> = ({ meals, id }) => {\r\n  const [showBlock, setShowBlock] = useState(false);\r\n  const handleAddMeal = () => {\r\n    setShowBlock(true);\r\n  };\r\n  return (\r\n    <>\r\n      <Button onClick={handleAddMeal}>Dodaj posiłek</Button>\r\n      {showBlock && <Block setShowBlock={setShowBlock} meals={meals} id={id} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddMeal;\r\n","import React from \"react\";\r\nimport \"./mealSummary.scss\";\r\ninterface mealItem {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  mineralsalt: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n}\r\nexport interface Props {\r\n  meals: Array<meal>;\r\n}\r\nconst MealSummary: React.FC<Props> = ({ meals }) => {\r\n  const sumNutrientsByType: Array<number> = [0, 0, 0, 0, 0];\r\n  const titles: Array<string> = [\r\n    \"Węglowodany\",\r\n    \"Tłuszcze\",\r\n    \"Białko\",\r\n    \"Sole mineralne\",\r\n    \"Kalorie\",\r\n  ];\r\n  const dailySchedule: Array<number> = [3000, 3000, 3000, 3000, 3000];\r\n  meals.forEach((meal) => {\r\n    if (meal.list) {\r\n      meal.list.forEach((item) => {\r\n        sumNutrientsByType[0] += item.carbs;\r\n        sumNutrientsByType[1] += item.fats;\r\n        sumNutrientsByType[2] += item.proteins;\r\n        sumNutrientsByType[3] += item.mineralsalt;\r\n        sumNutrientsByType[4] += item.calories;\r\n      });\r\n    }\r\n  });\r\n  return (\r\n    <table className=\"mealSummary\">\r\n      <tbody className=\"mealSummary__tbody\">\r\n        <tr className=\"mealSummary__tr\">\r\n          <td className=\"mealSummary__td\">Razem</td>\r\n          {sumNutrientsByType.map((type, index) => {\r\n            return (\r\n              <td key={titles[index]} className=\"mealSummary__td\">\r\n                {type}\r\n              </td>\r\n            );\r\n          })}\r\n        </tr>\r\n        <tr className=\"mealSummary__tr\">\r\n          <td className=\"mealSummary__td\">Dzienny plan</td>\r\n          {dailySchedule.map((item, index) => (\r\n            <td key={titles[index]} className=\"mealSummary__td\">\r\n              {item}\r\n            </td>\r\n          ))}\r\n        </tr>\r\n        <tr className=\"mealSummary__tr\">\r\n          <td className=\"mealSummary__td\">Brakujące</td>\r\n          {dailySchedule.map((item, index) => {\r\n            const distinction = sumNutrientsByType[index] - item;\r\n            if (distinction >= 0) {\r\n              return (\r\n                <td\r\n                  key={titles[index]}\r\n                  className=\"mealSummary__td mealSummary__above-zero\"\r\n                >\r\n                  {distinction}\r\n                </td>\r\n              );\r\n            } else {\r\n              return (\r\n                <td\r\n                  key={titles[index]}\r\n                  className=\"mealSummary__td mealSummary__below-zero\"\r\n                >\r\n                  {distinction}\r\n                </td>\r\n              );\r\n            }\r\n          })}\r\n        </tr>\r\n      </tbody>\r\n      <tfoot className=\"mealSummary__tfoot\">\r\n        <tr className=\"mealSummary__tr\">\r\n          <th className=\"mealSummary__th\"></th>\r\n          {titles.map((title) => (\r\n            <th key={title} className=\"mealSummary__th\">\r\n              {title}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default MealSummary;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport \"./dietDay.scss\";\r\nimport { GoBackDelete } from \"components\";\r\nimport { MealList, AddMeal, MealSummary } from \"./components\";\r\ninterface params {\r\n  id: string;\r\n}\r\ninterface mealItem {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  mineralsalt: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n}\r\nexport interface Props {}\r\nconst DietDay: React.FC<Props> = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const params: params = useParams();\r\n  const history = useHistory();\r\n  const [meals, setMeals] = useState<Array<meal>>([]);\r\n\r\n  const uploadDietDay = function (snapshot: any) {\r\n    const dietDayArray: any = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const childData = childSnapshot.val();\r\n      dietDayArray.push(childData);\r\n    });\r\n    setMeals(dietDayArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/diet/\" + params.id + \"/meal\");\r\n      ref.on(\"value\", uploadDietDay);\r\n      return () => {\r\n        ref.off(\"value\", uploadDietDay);\r\n      };\r\n    }\r\n  }, [currentUser, params.id]);\r\n\r\n  const handleRemoveDietDay = () => {\r\n    if (currentUser) {\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/diet/${params.id}`)\r\n        .remove();\r\n      history.goBack();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"diet-day\">\r\n      <GoBackDelete handleEdit={handleRemoveDietDay} editTitle=\"Usuń diete\" />\r\n      <AddMeal meals={meals} id={params.id} />\r\n      <MealList meals={meals} id={params.id} />\r\n      {meals.length !== 0 && <MealSummary meals={meals} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DietDay;\r\n","import React from \"react\";\nimport \"reset-css\";\nimport \"./App.scss\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport {\n  Login,\n  Root,\n  Trainings,\n  Training,\n  Exercise,\n  Statistics,\n  Measurement,\n  Diet,\n  DietDay,\n} from \"pages\";\n\nimport {\n  LoadingIndicator,\n  Header,\n  AuthProvider,\n  PrivateRoute,\n} from \"components\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <React.Suspense fallback={<LoadingIndicator />}>\n      <AuthProvider>\n        <div className=\"app__wrapper\">\n          <Router>\n            <Header />\n            <Switch>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <PrivateRoute\n                path=\"/trainings\"\n                component={Trainings}\n                exact={true}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/trainings/:id\"\n                component={Training}\n                exact={true}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/trainings/:id/:id\"\n                component={Exercise}\n                exact={true}\n              ></PrivateRoute>\n              {/* <PrivateRoute path=\"/exercises\" component={Home}></PrivateRoute> */}\n              <PrivateRoute\n                path=\"/statistics\"\n                exact={false}\n                component={Statistics}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/measurement\"\n                exact={false}\n                component={Measurement}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/diet\"\n                exact={true}\n                component={Diet}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/diet/:id\"\n                exact={true}\n                component={DietDay}\n              ></PrivateRoute>\n              <Route path=\"/\" exact>\n                <Root />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      </AuthProvider>\n    </React.Suspense>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}