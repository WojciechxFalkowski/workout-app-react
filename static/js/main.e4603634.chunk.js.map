{"version":3,"sources":["pages/Login/Login.tsx","components/LoadingIndicator/LoadingIndicator.tsx","components/Hamburger/Hamburger.tsx","components/Header/components/Navigation.tsx","components/Header/Header.tsx","components/PrivateRoute/PrivateRoute.tsx","components/FormTemplate/FormTemplate.js","components/Button/Button.tsx","components/Arrow/Arrow.tsx","fire.jsx","utils/validation.ts","components/EditTitle/EditTitle.tsx","components/GoBackDelete/GoBackDelete.tsx","components/Chart/Chart.tsx","components/CustomHookInput/CustomHookInput.tsx","components/AuthProvider/AuthProvider.tsx","utils/constants/constant.ts","pages/Root/components/LoggedHome/components/Greetings/Greetings.tsx","pages/Root/components/LoggedHome/components/MyProfile/components/MyProfileName/MyProfileName.tsx","pages/Root/components/LoggedHome/components/MyProfile/components/MyProfileRank/MyProfileRank.tsx","pages/Root/components/LoggedHome/components/MyProfile/components/Ranks/Ranks.tsx","pages/Root/components/LoggedHome/components/MyProfile/MyProfile.tsx","pages/Root/components/LoggedHome/components/Activities/components/EatenCalories/EatenCalories.tsx","utils/dateFunctions/index.ts","pages/Root/components/LoggedHome/components/Activities/components/TodayTrainings/TodayTrainings.tsx","pages/Root/components/LoggedHome/components/Activities/Activities.tsx","pages/Root/components/LoggedHome/components/TableResults/TableResults.tsx","pages/Root/components/LoggedHome/LoggedHome.tsx","pages/Root/components/Home/components/BackgroundImage/BackgroundImage.tsx","pages/Root/components/Home/components/Features/components/Feature/Feature.tsx","pages/Root/components/Home/components/Features/Features.tsx","pages/Root/components/Home/components/Feedback/Feedback.tsx","pages/Root/components/Home/components/SendMessage/SendMessage.tsx","pages/Root/components/Home/components/Footer/Footer.tsx","pages/Root/components/Home/Home.tsx","pages/Root/Root.tsx","pages/Trainings/components/TrainingsList/components/ListItems/ListItems.tsx","pages/Trainings/components/TrainingsList/TrainingsList.tsx","pages/Trainings/components/AddTraining/AddTraining.tsx","pages/Trainings/Trainings.tsx","pages/Training/components/TrainingExerciseList/TrainingExerciseList.tsx","pages/Training/components/DragAndDropList/DragAndDropList.tsx","pages/Training/components/TrainingItem/TrainingItem.tsx","pages/Training/Training.tsx","utils/generateRandomString/index.js","pages/Exercise/components/FormInput/components/Line/Line.tsx","pages/Exercise/components/FormInput/components/RemoveSeries/RemoveSeries.tsx","pages/Exercise/components/FormInput/components/SeriesNumber/SeriesNumber.tsx","pages/Exercise/components/FormInput/FormInput.tsx","pages/Exercise/Exercise.tsx","pages/Statistics/components/Charts/components/TrainingsPerMonth/TrainingsPerMonth.tsx","pages/Statistics/components/Charts/components/TrainingsPerTrainingName/TrainingsPerTrainingName.tsx","pages/Statistics/components/Charts/components/WeightRaisedPerTrainingName/WeightRaisedPerTrainingName.tsx","pages/Statistics/components/Charts/Charts.tsx","pages/Statistics/Statistics.tsx","pages/Diet/components/DietList/components/DietElement/components/DietNutrient/DietNutrient.tsx","pages/Diet/components/DietList/components/DietElement/DietElement.tsx","pages/Diet/components/DietList/DietList.tsx","pages/Diet/Diet.tsx","pages/DietDay/components/MealList/components/MealTable/components/IngredientItem/IngredientItem.tsx","pages/DietDay/components/MealList/components/MealTable/components/SumNutrientsByType/SumNutrientsByType.tsx","pages/DietDay/components/MealList/components/MealTable/components/AddIngredient/AddIngredient.tsx","pages/DietDay/components/MealList/components/MealTable/MealTable.tsx","pages/DietDay/components/MealList/MealList.tsx","pages/DietDay/components/AddMeal/AddMeal.tsx","pages/DietDay/components/MealSummary/components/SumOfEatenIngredients/SumOfEatenIngredients.tsx","pages/DietDay/components/MealSummary/components/DailyPlan/DailyPlan.tsx","pages/DietDay/components/MealSummary/components/MissingCalories/MissingCalories.tsx","pages/DietDay/components/MealSummary/components/Tfoot/Tfoot.tsx","pages/DietDay/components/MealSummary/MealSummary.tsx","pages/DietDay/DietDay.tsx","pages/Settings/components/User/User.tsx","pages/Settings/components/Diet/Diet.tsx","pages/Settings/Settings.tsx","pages/NotFound/NotFound.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LoginPage","useState","isSignedIn","setIsSignedIn","uiConfig","signInFlow","signInOptions","provider","firebase","auth","GoogleAuthProvider","PROVIDER_ID","fullLabel","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","className","to","firebaseAuth","LoadingIndicator","Hamburger","onClick","hamburgerActive","ref","Navigation","handleHamburger","currentUser","useContext","AuthContext","activeClassName","signOut","then","error","href","Header","header","useRef","exact","current","classList","toggle","remove","PrivateRoute","RouteComponent","component","rest","render","routeProps","FormTemplate","formFields","fields","button","handleSubmit","onSubmit","props","map","formField","key","name","validate","defaultValue","initialValue","parse","input","meta","text","type","placeholder","step","undefined","min","max","touched","variant","Button","children","Arrow","history","useHistory","goBack","fire","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","required","value","maxValue","isNaN","length","composeValidators","validators","reduce","validator","EditTitle","labelText","editDate","refUrl","isActiveEditing","setIsActiveEditing","workoutName","setWorkoutName","editTimeDate","setEditTimeDate","editName","setEditName","isLoaded","setIsLoaded","unshift","handleClickIcon","loadTrainingName","snapshot","val","date","useEffect","newRef","database","once","off","values","update","saveEditedTraining","GoBackDelete","handleEdit","editTitle","Chart","specification","canvasRef","ctx","getContext","chart","ChartJS","destroy","CustomHookInput","setValue","onChange","e","target","createContext","AuthProvider","setCurrentUser","pending","setPending","onAuthStateChanged","user","child","uid","displayName","split","surname","slice","join","userId","email","set","writeUserData","Provider","ingredientTitles","namesOfDaysOfWeekArray","namesOfTheMonths","trainingList","Greetings","Date","monthOfYear","today","getDay","getDate","getMonth","getFullYear","MyProfileName","toUpperCase","MyProfileRank","handleFlipCard","numberOfTrainings","setNumberOfTrainings","numChildren","trainingName","Ranks","trainingItem","MyProfile","refFlipper","EatenCalories","ingredients","carbs","fats","proteins","calories","push","dayMonthYearWithSeparator","dateToModifie","separator","reverse","dayOfMonth","month","year","modifiedDate","hoursMinutesWithSeparator","hours","getHours","minutes","getMinutes","TodayTrainings","trainings","setTrainings","uploadTrainings","trainingArray","forEach","childSnapshot","childData","orderByChild","startAt","on","training","id","Activities","TableResults","statistics","setStatistics","handleStatistics","usersStatistics","sort","a","b","item","index","Home","setUser","uploadUser","BackgroundImage","Feature","icon","title","Features","Feedback","opinions","setOpinions","numberOfOpinions","indexOfActiveFeedback","setIndexOfActiveFeedback","indexActiveFeedback","setInterval","prevState","clearInterval","handleActiveFeedback","direction","uploadOpinions","opinionArray","limitToLast","SendMessage","useCookies","isSendForm","setIsSendForm","isSameSession","setIsSameSession","sendForm","newDate","opinion","expires","Footer","Root","LoggedHome","Table","exercisesCount","exercises","Object","keys","handleTraining","TrainingsList","ListItems","AddTraining","datePattern","replace","saveNewTraining","Trainings","TrainingExerciseList","exerciseName","exerciseKey","pathname","state","handleTrainingExercise","series","strinNumber","inx","seriesString","DragAndDropList","exercise","content","listItems","setListItems","onDragEnd","result","destination","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","droppableId","provided","droppableProps","innerRef","draggableId","draggableProps","dragHandleProps","TrainingItem","Training","match","params","setExercises","loadTrainings","exerciseArray","generateRandomString","Math","random","toString","substr","Line","setFormFields","RemoveSeries","handleRemoveSeries","SeriesNumber","FormInput","paramId","number","newArray","field","url","Exercise","TrainingsPerMonth","trainingsPerMonth","data","labels","datasets","backgroundColor","context","dataIndex","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","weight","options","display","legend","position","scales","yAxes","ticks","lineHeight","TrainingsPerTrainingName","trainingsPerTrainingName","amount","findIndex","WeightRaisedPerTrainingName","includes","selectChange","setSelectChange","filter","trainingsArray","entries","seriesArray","i","Number","formatedDate","fill","beginAtZero","Charts","Statistics","DietNutrient","nutrients","DietElement","titles","stringDate","slicedDayMonthYearWithSeparator","handleDietDay","DietList","diets","diet","meal","Diet","setDiets","flag","setFlag","uploadDiet","dietArray","todayDatePattern","IngredientItem","indexList","ingredient","filteredList","ind","handleRemoveMealItem","SumNutrientsByType","sumNutrientsByType","AddIngredient","isNameTaken","setActiveMeal","mealList","currentUserId","setIngredient","setCarbs","setFats","setProteins","setCalories","String","maxNameLength","mealItem","mealItems","handleSaveMealItem","MealTable","meals","activeMeal","mealName","filteredMealList","handleRemoveMeal","MealList","AddMeal","inputNameRef","inputName","setInputName","focus","TrLine","DailyPlan","MissingCalories","distinction","Tfoot","MealSummary","setDiet","SumOfEatenIngredients","DietDay","useParams","setMeals","uploadDietDay","dietDayArray","User","settings","setSettings","uploadUserInfo","propName","Settings","NotFound","App","CookiesProvider","Suspense","fallback","basename","process","path","Login","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e4603634.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./login.scss\";\r\nexport interface Props {}\r\nexport interface Test {\r\n  signInFlow: string;\r\n  signInOptions: Array<string> | any;\r\n  callbacks: any;\r\n}\r\nconst LoginPage: React.FC<Props> = () => {\r\n  const [isSignedIn, setIsSignedIn] = useState(false);\r\n  const uiConfig: Test = {\r\n    signInFlow: \"popup\",\r\n    signInOptions: [\r\n      {\r\n        provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n        fullLabel: \"Logowanie za pomocą google\",\r\n      },\r\n      {\r\n        provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n        fullLabel: \"Logowanie za pomocą email\",\r\n      },\r\n    ],\r\n    callbacks: {\r\n      signInSuccessWithAuthResult: () => {\r\n        setIsSignedIn(true);\r\n        return false;\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <main className=\"login\">\r\n      <div className=\"login__div\">\r\n        {isSignedIn ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <StyledFirebaseAuth\r\n            uiConfig={uiConfig}\r\n            firebaseAuth={firebase.auth()}\r\n          />\r\n        )}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport \"./LoadingIndicator.scss\";\r\nconst LoadingIndicator = () => {\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"root__div\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingIndicator;\r\n","import React from \"react\";\r\nimport \"./Hamburger.scss\";\r\n\r\nexport interface Props<T> {\r\n  onClick: () => void;\r\n  hamburgerActive: T;\r\n}\r\nconst Hamburger: React.FC<Props<any>> = ({ onClick, hamburgerActive }) => {\r\n  return (\r\n    <div className=\"hamburger\" onClick={onClick}>\r\n      <div className=\"hamburger__box\">\r\n        <div ref={hamburgerActive} className=\"hamburger__inner inner\">\r\n          <div className=\"inner__before\"></div>\r\n          <div className=\"inner__after\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hamburger;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"./navigation.scss\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nexport interface Props {\r\n  handleHamburger: () => void;\r\n}\r\n\r\nconst Navigation: React.FC<Props> = ({ handleHamburger }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const handleSignOut = () => {\r\n    handleHamburger();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(\r\n        function () {},\r\n        function (error) {}\r\n      );\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"navigation\">\r\n        <ul className=\"navigation__ul\">\r\n          {currentUser ? (\r\n            <>\r\n              <li className=\"navigation__li\">\r\n                <NavLink\r\n                  activeClassName=\"navigation--active\"\r\n                  onClick={handleHamburger}\r\n                  to=\"/trainings\"\r\n                  className=\"navigation__a\"\r\n                >\r\n                  Treningi\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"navigation__li\">\r\n                <NavLink\r\n                  activeClassName=\"navigation--active\"\r\n                  onClick={handleHamburger}\r\n                  to=\"/statistics\"\r\n                  className=\"navigation__a\"\r\n                >\r\n                  Statystyki\r\n                </NavLink>\r\n              </li>\r\n              {/* <li className=\"navigation__li\">\r\n                <NavLink\r\n                  activeClassName=\"navigation--active\"\r\n                  onClick={handleHamburger}\r\n                  to=\"/measurement\"\r\n                  className=\"navigation__a\"\r\n                >\r\n                  Pomiary\r\n                </NavLink>\r\n              </li> */}\r\n              <li className=\"navigation__li\">\r\n                <NavLink\r\n                  activeClassName=\"navigation--active\"\r\n                  onClick={handleHamburger}\r\n                  to=\"/diet\"\r\n                  className=\"navigation__a\"\r\n                >\r\n                  Dieta\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"navigation__li\">\r\n                <NavLink\r\n                  activeClassName=\"navigation--active\"\r\n                  onClick={handleHamburger}\r\n                  to=\"/settings\"\r\n                  className=\"navigation__a\"\r\n                >\r\n                  Ustawienia\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"navigation__li navigation__logout\">\r\n                <a\r\n                  onClick={handleSignOut}\r\n                  href=\"/workout-app-react\"\r\n                  className=\"navigation__a\"\r\n                >\r\n                  Wyloguj\r\n                </a>\r\n              </li>\r\n            </>\r\n          ) : (\r\n            <li className=\"navigation__li navigation__login\">\r\n              <NavLink\r\n                activeClassName=\"navigation--active\"\r\n                onClick={handleHamburger}\r\n                className=\"navigation__a\"\r\n                to=\"/login\"\r\n              >\r\n                Logowanie / Rejestracja\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useRef } from \"react\";\r\nimport \"./header.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Navigation from \"./components\";\r\nimport { Hamburger } from \"components\";\r\ninterface Props {}\r\n\r\nconst Header: React.FC<Props> = () => {\r\n  const header = useRef<HTMLElement>(null);\r\n  const hamburgerActive = useRef<HTMLDivElement>(null);\r\n\r\n  const onClick = () => {\r\n    hamburgerActive.current?.classList.toggle(\"is-active-hamburger\");\r\n    header.current?.classList.toggle(\"header--active\");\r\n  };\r\n  const handleHamburger = () => {\r\n    hamburgerActive.current?.classList.remove(\"is-active-hamburger\");\r\n    header.current?.classList.remove(\"header--active\");\r\n  };\r\n  return (\r\n    <>\r\n      <header ref={header} className=\"header\">\r\n        <h1 className=\"header__logo\">\r\n          <NavLink\r\n            to=\"/\"\r\n            exact\r\n            activeClassName=\"navigation--active\"\r\n            className=\"header__link\"\r\n          >\r\n            TO DO WORKOUT\r\n          </NavLink>\r\n        </h1>\r\n        <div className=\"header__hamburger\">\r\n          <Hamburger onClick={onClick} hamburgerActive={hamburgerActive} />\r\n        </div>\r\n        <div className=\"header__links\">\r\n          <Navigation handleHamburger={handleHamburger} />\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nexport interface Props {\r\n  component: any;\r\n  exact: boolean;\r\n  path: string;\r\n}\r\nconst PrivateRoute: React.FC<Props> = ({\r\n  component: RouteComponent,\r\n\r\n  ...rest\r\n}) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport \"./FormTemplate.scss\";\r\nconst FormTemplate = ({ formFields: { fields, button }, handleSubmit }) => {\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      {(props) => (\r\n        <form onSubmit={props.handleSubmit} className=\"form\">\r\n          {fields.map((formField) => {\r\n            return (\r\n              <Field\r\n                key={formField.name}\r\n                name={formField.name}\r\n                validate={formField.validate}\r\n                defaultValue={formField.initialValue}\r\n                parse={formField.parse}\r\n              >\r\n                {({ input, meta }) => (\r\n                  <div className=\"form__wrapper\">\r\n                    <label>{formField.text}</label>\r\n                    {formField.component === \"textarea\" ? (\r\n                      <textarea\r\n                        className=\"form__textarea\"\r\n                        {...input}\r\n                        type=\"text\"\r\n                        placeholder={\"Description\"}\r\n                      />\r\n                    ) : (\r\n                      <input\r\n                        className=\"form__input\"\r\n                        {...input}\r\n                        type={formField.type}\r\n                        step={formField.step ? formField.step : undefined}\r\n                        min={formField.min ? formField.min : undefined}\r\n                        max={formField.max ? formField.max : undefined}\r\n                        placeholder={formField.placeholder}\r\n                      />\r\n                    )}\r\n                    {meta.error && meta.touched && (\r\n                      <span className=\"form__span\">{meta.error}</span>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            );\r\n          })}\r\n\r\n          <button\r\n            variant={button.variant}\r\n            type={button.type}\r\n            className=\"form__button\"\r\n          >\r\n            {button.text}\r\n          </button>\r\n        </form>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormTemplate;\r\n","import React from \"react\";\r\nimport \"./button.scss\";\r\ninterface Props {\r\n  onClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst Button: React.FC<Props> = ({ onClick, children }) => {\r\n  return (\r\n    <button onClick={onClick} className=\"button\">\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import \"./arrow.scss\";\r\nimport React from \"react\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from \"components\";\r\n\r\nconst Arrow = () => {\r\n  const history = useHistory();\r\n  const handleArrowClick = () => {\r\n    history.goBack();\r\n  };\r\n  return (\r\n    <div className=\"arrow\">\r\n      <Button onClick={handleArrowClick}>\r\n        <IoIosArrowBack />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import firebase from \"firebase/app\";\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyAkx7U5xHRytqTxEvWcAeBafAnn0RxvCGE\",\r\n  authDomain: \"workout-app-react.firebaseapp.com\",\r\n  databaseURL: \"https://workout-app-react.firebaseio.com\",\r\n  projectId: \"workout-app-react\",\r\n  storageBucket: \"workout-app-react.appspot.com\",\r\n  messagingSenderId: \"525427559623\",\r\n  appId: \"1:525427559623:web:086662897279ef7ca942e2\",\r\n  measurementId: \"G-LRVXXWQ6R2\",\r\n};\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nexport default fire;\r\n","export const required = (text: string) => (\r\n  value: string | number\r\n): undefined | string => (value ? undefined : text);\r\nexport const checkAtSign = (text: string) => (value: string) =>\r\n  value.includes(\"@\") ? undefined : text;\r\nexport const mustBeNumber = (text: string) => (\r\n  value: number\r\n): string | undefined => (isNaN(value) ? text : undefined);\r\nexport const minValue = (min: number, text: string) => (value: string) =>\r\n  isNaN(value.length) || value.length >= min ? undefined : text;\r\nexport const mustBeAmount = (text: string) => (value: string) =>\r\n  value.length === Number(value).toString().length ? undefined : text;\r\nexport const maxValue = (max: number, text: string) => (value: string) =>\r\n  isNaN(value.length) || value.length <= max ? undefined : text;\r\nexport const uniqueMealName = (items: any, text: string) => (value: string) =>\r\n  items.find((item: any) => item.mealName === value) === undefined\r\n    ? undefined\r\n    : text;\r\n\r\nexport const composeValidators = (...validators: any) => (value: any) =>\r\n  validators.reduce(\r\n    (error: any, validator: any) => error || validator(value),\r\n    undefined\r\n  );\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\nimport { FormTemplate } from \"components\";\r\nimport fire from \"fire\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\nimport \"./editTitle.scss\";\r\nimport LoadingIndicator from \"components/LoadingIndicator\";\r\nexport interface Props {\r\n  labelText: string;\r\n  editDate: boolean;\r\n  refUrl: string;\r\n  isActiveEditing: boolean;\r\n  setIsActiveEditing: (value: boolean) => void;\r\n}\r\n\r\nconst EditTitle: React.FC<Props> = ({\r\n  labelText,\r\n  editDate,\r\n  refUrl,\r\n  isActiveEditing,\r\n  setIsActiveEditing,\r\n}) => {\r\n  const [workoutName, setWorkoutName] = useState();\r\n  const [editTimeDate, setEditTimeDate] = useState();\r\n  const [editName, setEditName] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const formFields = {\r\n    fields: [\r\n      {\r\n        name: \"workoutName\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: workoutName,\r\n        text: labelText,\r\n        placeholder: \"Nazwa treningu\",\r\n        type: \"text\",\r\n      },\r\n    ],\r\n    button: {\r\n      type: \"submit\",\r\n      text: \"Potwierdź zmiany\",\r\n    },\r\n  };\r\n  if (editDate) {\r\n    formFields.fields.unshift({\r\n      name: \"date\",\r\n      validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n      initialValue: editTimeDate,\r\n      text: labelText,\r\n      placeholder: \"Data treningu\",\r\n      type: \"datetime-local\",\r\n    });\r\n  }\r\n  const handleClickIcon = () => {\r\n    setEditName(!editName);\r\n    setIsActiveEditing(!isActiveEditing);\r\n  };\r\n  const saveEditedTraining = (workoutName: string, date?: string) => {\r\n    if (date) {\r\n      fire.database().ref(refUrl).update({ workoutName, date });\r\n    } else {\r\n      fire.database().ref(refUrl).update({ workoutName });\r\n    }\r\n  };\r\n  const handleSubmit = (values: any) => {\r\n    saveEditedTraining(values.workoutName, values.date);\r\n    setWorkoutName(values.workoutName);\r\n    if (editDate) {\r\n      setEditTimeDate(values.date);\r\n    }\r\n\r\n    handleClickIcon();\r\n  };\r\n  const loadTrainingName = function (snapshot: any) {\r\n    setWorkoutName(snapshot.val().workoutName);\r\n    setEditTimeDate(snapshot.val().date);\r\n    setIsLoaded(true);\r\n  };\r\n  useEffect(() => {\r\n    const newRef = fire.database().ref(refUrl);\r\n    newRef.once(\"value\").then(loadTrainingName);\r\n\r\n    return () => {\r\n      newRef.off(\"value\", loadTrainingName);\r\n    };\r\n  }, [refUrl]);\r\n  return (\r\n    <>\r\n      {editName ? (\r\n        <FormTemplate formFields={formFields} handleSubmit={handleSubmit} />\r\n      ) : isLoaded ? (\r\n        <div className=\"edit-title__div\">\r\n          <h2 className=\"edit-title__h2\">{workoutName}</h2>\r\n          <div className=\"edit-title__div-icon\">\r\n            <BiEditAlt\r\n              onClick={handleClickIcon}\r\n              className=\"edit-title__icon-edit\"\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <LoadingIndicator />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTitle;\r\n","import React from \"react\";\r\nimport { Button, Arrow } from \"components\";\r\nimport \"./goBackDelete.scss\";\r\nexport interface Props {\r\n  handleEdit: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n  editTitle: string;\r\n}\r\n\r\nconst GoBackDelete: React.FC<Props> = ({ handleEdit, editTitle }) => {\r\n  return (\r\n    <section className=\"go-back-delete\">\r\n      <Arrow />\r\n      <Button onClick={handleEdit}>{editTitle}</Button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default GoBackDelete;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Chart as ChartJS } from \"chart.js\";\r\nimport \"./chart.scss\";\r\n\r\nexport interface Props {\r\n  specification: any;\r\n  children: any;\r\n}\r\nconst Chart: React.FC<Props> = ({ specification, children }) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  useEffect(() => {\r\n    if (canvasRef.current !== null) {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      if (ctx) {\r\n        const chart = new ChartJS(ctx, specification);\r\n        return () => {\r\n          chart.destroy();\r\n        };\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {children ? <h1 className=\"chart__h1\">{children}</h1> : null}\r\n      <canvas className=\"chart__canvas\" ref={canvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState } from \"react\";\r\nexport interface Props {}\r\n\r\nconst CustomHookInput = ({ type }: any) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const input = (\r\n    <input\r\n      value={value}\r\n      onChange={(e) => setValue(e.target.value)}\r\n      type={type}\r\n      min={0}\r\n    />\r\n  );\r\n  return [value, input];\r\n};\r\n\r\nexport default CustomHookInput;\r\n","import React, { useEffect, useState, createContext } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { LoadingIndicator } from \"components\";\r\nexport const AuthContext = createContext<Partial<ContextProps>>({});\r\ntype ContextProps = { currentUser: user | null };\r\ntype user = {\r\n  uid: string;\r\n  displayName: string;\r\n};\r\ntype Props = {};\r\nconst AuthProvider: React.FC<Props> = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const writeUserData = (\r\n      userId: string,\r\n      email: string,\r\n      name: string,\r\n      surname: string\r\n    ) => {\r\n      firebase\r\n        .database()\r\n        .ref(\"users/\" + userId)\r\n        .set({\r\n          email: email,\r\n        });\r\n      firebase\r\n        .database()\r\n        .ref(\"users/\" + userId + \"/settings/user\")\r\n        .set({\r\n          name,\r\n          surname,\r\n        });\r\n    };\r\n    firebase.auth().onAuthStateChanged((user: any) => {\r\n      if (user) {\r\n        let rootRef = firebase.database().ref(\"users/\");\r\n        rootRef.child(user.uid).once(\"value\", function (snapshot: any) {\r\n          let exists = snapshot.val() !== null;\r\n          if (!exists) {\r\n            const name = user.displayName.split(\" \")[0];\r\n            const surname = user.displayName.split(\" \").slice(1).join(\" \");\r\n            writeUserData(user.uid, user.email, name, surname);\r\n          } else {\r\n          }\r\n        });\r\n      }\r\n      setCurrentUser(user);\r\n      setPending(false);\r\n    });\r\n  }, []);\r\n\r\n  if (pending) {\r\n    return <LoadingIndicator />;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthProvider;\r\n","export const ingredientTitles: Array<string> = [\r\n  \"Węglowodany\",\r\n  \"Tłuszcze\",\r\n  \"Białko\",\r\n  \"Kalorie\",\r\n];\r\nexport const namesOfDaysOfWeekArray: Array<string> = [\r\n  \"Niedziela\",\r\n  \"Poniedziałek\",\r\n  \"Wtorek\",\r\n  \"Środa\",\r\n  \"Czwartek\",\r\n  \"Piątek\",\r\n  \"Sobota\",\r\n];\r\nexport const namesOfTheMonths: Array<string> = [\r\n  \"Stycznia\",\r\n  \"Lutego\",\r\n  \"Marca\",\r\n  \"Kwietnia\",\r\n  \"Maja\",\r\n  \"Czerwca\",\r\n  \"Lipca\",\r\n  \"Sierpnia\",\r\n  \"Września\",\r\n  \"Października\",\r\n  \"Listopada\",\r\n  \"Grudnia\",\r\n];\r\ninterface trainingItem {\r\n  name: string;\r\n  min: number;\r\n}\r\nexport const trainingList: Array<trainingItem> = [\r\n  { name: \"Początkujący/a\", min: 0 },\r\n  { name: \"Średnio zaawansowany/a\", min: 10 },\r\n  { name: \"Zaawansowany\", min: 50 },\r\n  { name: \"Ekspert\", min: 100 },\r\n];\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./greetings.scss\";\r\nimport { namesOfDaysOfWeekArray, namesOfTheMonths } from \"utils/constants\";\r\nexport interface Props {\r\n  name: string;\r\n}\r\n\r\nconst Greetings: React.FC<Props> = ({ name }) => {\r\n  const date = new Date();\r\n  const dayOfWeek = namesOfDaysOfWeekArray;\r\n  const monthOfYear = namesOfTheMonths;\r\n  const today = `${dayOfWeek[date.getDay()]}, ${date.getDate()} ${\r\n    monthOfYear[date.getMonth()]\r\n  } ${date.getFullYear()}`;\r\n  return (\r\n    <section className=\"greetings\">\r\n      <h1 className=\"greetings__name\">\r\n        {\"Cześć \"}\r\n        {name ? (\r\n          name\r\n        ) : (\r\n          <Link className=\"greetings__link\" to=\"settings\">\r\n            nieznajomy\r\n          </Link>\r\n        )}\r\n        {\" !\"}\r\n      </h1>\r\n\r\n      <span className=\"greetings__date\">{today}</span>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Greetings;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./myProfileName.scss\";\r\nexport interface Props {\r\n  name: string;\r\n  surname: string;\r\n}\r\n\r\nconst MyProfileName: React.FC<Props> = ({ name, surname }) => {\r\n  return (\r\n    <div className=\"my-profile-name\">\r\n      <span className=\"my-profile-name__text\">Mój profil</span>\r\n      <div className=\"my-profile-name__div-initials\">\r\n        <span className=\"my-profile-name__initials\">\r\n          {name && surname ? (\r\n            `${name[0].toUpperCase()}${surname[0].toUpperCase()}`\r\n          ) : (\r\n            <Link className=\"my-profile-name__link\" to=\"settings\">\r\n              ?\r\n            </Link>\r\n          )}\r\n        </span>\r\n      </div>\r\n      <span className=\"my-profile-name__name\">\r\n        {name && surname ? (\r\n          `${name} ${surname}`\r\n        ) : (\r\n          <Link className=\"my-profile-name__link\" to=\"settings\">\r\n            -\r\n          </Link>\r\n        )}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyProfileName;\r\n","import React, { useState } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { trainingList } from \"utils/constants\";\r\nimport \"./myProfileRank.scss\";\r\ninterface currentUser {\r\n  uid: string;\r\n}\r\ninterface Props {\r\n  currentUser: currentUser;\r\n  handleFlipCard: () => void;\r\n}\r\n\r\nconst MyProfileRank: React.FC<Props> = ({ currentUser, handleFlipCard }) => {\r\n  const [numberOfTrainings, setNumberOfTrainings] = useState<number>(0);\r\n  var ref = firebase.database().ref(`users/${currentUser.uid}/trainings`);\r\n  ref.once(\"value\").then(function (snapshot) {\r\n    setNumberOfTrainings(snapshot.numChildren());\r\n  });\r\n  const trainingName =\r\n    numberOfTrainings >= trainingList[3].min\r\n      ? trainingList[3].name\r\n      : numberOfTrainings >= trainingList[2].min\r\n      ? trainingList[2].name\r\n      : numberOfTrainings >= trainingList[1].min\r\n      ? trainingList[1].name\r\n      : trainingList[0].name;\r\n  return (\r\n    <span onClick={handleFlipCard} className=\"my-profile-rank\">\r\n      {trainingName}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default MyProfileRank;\r\n","import React from \"react\";\r\nimport { Button } from \"components\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { trainingList } from \"utils/constants\";\r\nimport \"./rank.scss\";\r\ninterface Props {\r\n  handleFlipCard: () => void;\r\n}\r\n\r\nconst Ranks: React.FC<Props> = ({ handleFlipCard }) => {\r\n  return (\r\n    <div className=\"rank\">\r\n      <Button onClick={handleFlipCard}>\r\n        <IoIosArrowBack />\r\n      </Button>\r\n      <div className=\"rank__div\">\r\n        <h1 className=\"rank__h1\">Liczba treningów</h1>\r\n        <div className=\"rank__div-list\">\r\n          {trainingList.map((trainingItem) => (\r\n            <p key={trainingItem.name} className=\"rank__p\">\r\n              <span className=\"rank__span-name\">{trainingItem.name}</span>\r\n              <span className=\"rank__span-min\">{trainingItem.min}</span>\r\n            </p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ranks;\r\n","import React, { useRef } from \"react\";\r\nimport { MyProfileName, MyProfileRank, Ranks } from \"./components\";\r\nimport \"./myProfile.scss\";\r\n\r\ninterface currentUser {\r\n  uid: string;\r\n}\r\nexport interface Props {\r\n  name: string;\r\n  surname: string;\r\n  currentUser: currentUser;\r\n}\r\n\r\nconst MyProfile: React.FC<Props> = ({ name, surname, currentUser }) => {\r\n  const refFlipper = useRef<HTMLDivElement>(null);\r\n  const handleFlipCard = () => {\r\n    if (refFlipper.current) {\r\n      refFlipper.current.classList.toggle(\"active-card\");\r\n    }\r\n  };\r\n  return (\r\n    <article className=\"my-profile\">\r\n      <div ref={refFlipper} className=\"my-profile__inner \">\r\n        <div className=\"my-profile__front\">\r\n          <MyProfileName name={name} surname={surname} />\r\n          <MyProfileRank\r\n            currentUser={currentUser}\r\n            handleFlipCard={handleFlipCard}\r\n          />\r\n        </div>\r\n        <div className=\"my-profile__back\">\r\n          <Ranks handleFlipCard={handleFlipCard} />\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default MyProfile;\r\n","import React from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport \"./eatenCalories.scss\";\r\ninterface ingredients {\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n}\r\nexport interface Props {\r\n  ingredients: ingredients;\r\n}\r\n\r\nconst EatenCalories: React.FC<Props> = ({\r\n  ingredients: { carbs, fats, proteins, calories },\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"eaten-calories\">\r\n      <span className=\"eaten-calories__title\">Dieta</span>\r\n      <div className=\"eaten-calories__calories\">\r\n        {carbs && (\r\n          <p\r\n            onClick={() => history.push(`settings`)}\r\n            className=\"eaten-calories__p\"\r\n          >\r\n            Węglowodany: {carbs}\r\n          </p>\r\n        )}\r\n        {fats && (\r\n          <p\r\n            onClick={() => history.push(`settings`)}\r\n            className=\"eaten-calories__p\"\r\n          >\r\n            Tłuszcze: {fats}\r\n          </p>\r\n        )}\r\n        {proteins && (\r\n          <p\r\n            onClick={() => history.push(`settings`)}\r\n            className=\"eaten-calories__p\"\r\n          >\r\n            Białko: {proteins}\r\n          </p>\r\n        )}\r\n        {calories && (\r\n          <p\r\n            onClick={() => history.push(`settings`)}\r\n            className=\"eaten-calories__p\"\r\n          >\r\n            Kalorie: {calories}\r\n          </p>\r\n        )}\r\n        {!carbs && !fats && !proteins && !calories && (\r\n          <Link className=\"eaten-calories__a\" to=\"settings\">\r\n            Brak ustawionej diety\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EatenCalories;\r\n","export const dayMonthYearWithSeparator = (\r\n  dateToModifie: Date,\r\n  separator: string,\r\n  reverse: string = \"no\"\r\n) => {\r\n  const date = new Date(dateToModifie);\r\n  const dayOfMonth = date.getDate() > 9 ? date.getDate() : \"0\" + date.getDate();\r\n  const month =\r\n    date.getMonth() + 1 > 9 ? date.getMonth() + 1 : \"0\" + date.getMonth() + 1;\r\n  const year = date.getFullYear();\r\n  const modifiedDate =\r\n    reverse === \"yes\"\r\n      ? `${year}${separator}${month}${separator}${dayOfMonth}`\r\n      : `${dayOfMonth}${separator}${month}${separator}${year}`;\r\n  return modifiedDate;\r\n};\r\nexport const hoursMinutesWithSeparator = (\r\n  dateToModifie: Date,\r\n  separator: string\r\n) => {\r\n  const date = new Date(dateToModifie);\r\n  const hours = date.getHours() > 9 ? date.getHours() : \"0\" + date.getHours();\r\n  const minutes =\r\n    date.getMinutes() > 9 ? date.getMinutes() : \"0\" + date.getMinutes();\r\n  return `${hours}${separator}${minutes}`;\r\n};\r\nexport const slicedDayMonthYearWithSeparator = (\r\n  stringDate: string,\r\n  separator: string,\r\n  reverse: string = \"no\"\r\n) => {\r\n  const dayOfMonth = stringDate.slice(6, 8);\r\n  const month = stringDate.slice(4, 6);\r\n  const year = stringDate.slice(0, 4);\r\n  const modifiedDate =\r\n    reverse === \"yes\"\r\n      ? `${year}${separator}${month}${separator}${dayOfMonth}`\r\n      : `${dayOfMonth}${separator}${month}${separator}${year}`;\r\n  return modifiedDate;\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"./todayTrainings.scss\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport { dayMonthYearWithSeparator } from \"utils/dateFunctions\";\r\ntype Trainings = Array<training>;\r\ninterface training {\r\n  id: string;\r\n  date: string;\r\n  workoutName: string;\r\n}\r\nexport interface Props {}\r\nconst TodayTrainings: React.FC<Props> = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [trainings, setTrainings] = useState<Trainings>();\r\n  const date = new Date();\r\n  const modifiedDate = dayMonthYearWithSeparator(date, \"-\", \"yes\");\r\n  const uploadTrainings = function (snapshot: any) {\r\n    const trainingArray: Trainings = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const childData = childSnapshot.val();\r\n      trainingArray.push(childData);\r\n    });\r\n    setTrainings(trainingArray);\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/trainings\")\r\n        .orderByChild(\"date\")\r\n        .startAt(modifiedDate);\r\n      ref.on(\"value\", uploadTrainings);\r\n      return () => {\r\n        ref.off(\"value\", uploadTrainings);\r\n      };\r\n    }\r\n  }, [currentUser, modifiedDate]);\r\n  return (\r\n    <div className=\"today-trainings\">\r\n      <span className=\"today-trainings__title\">Treningi</span>\r\n      {trainings && trainings.length !== 0 ? (\r\n        trainings.map((training) => {\r\n          return (\r\n            <Link\r\n              key={training.id}\r\n              to={`trainings/${training.id}`}\r\n              className=\"today-trainings__link\"\r\n            >\r\n              {training.workoutName}\r\n            </Link>\r\n          );\r\n        })\r\n      ) : (\r\n        <div className=\"today-trainings__unset\">\r\n          <Link className=\"today-trainings__a\" to=\"trainings\">\r\n            Brak ustawionych treningów\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodayTrainings;\r\n","import React from \"react\";\r\nimport { EatenCalories, TodayTrainings } from \"./components\";\r\nimport \"./activities.scss\";\r\ninterface ingredients {\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n}\r\nexport interface Props {\r\n  ingredients: ingredients;\r\n}\r\n\r\nconst Activities: React.FC<Props> = ({ ingredients }) => {\r\n  return (\r\n    <article className=\"activities\">\r\n      <span className=\"activities__title\">Dzisiaj</span>\r\n      <EatenCalories ingredients={ingredients} />\r\n      <TodayTrainings />\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Activities;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"./tableResults.scss\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\ninterface users {\r\n  name: string;\r\n  surname: string;\r\n  numberOfTrainings: number;\r\n}\r\nexport interface Props {}\r\n\r\nconst TableResults: React.FC<Props> = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [statistics, setStatistics] = useState<Array<users>>();\r\n  const handleStatistics = function (snapshot: any) {\r\n    const usersStatistics: Array<users> = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const name = childSnapshot.child(\"settings/user/name\").val();\r\n      const surname = childSnapshot.child(\"settings/user/surname\").val();\r\n      if (name && surname) {\r\n        const numberOfTrainings = childSnapshot\r\n          .child(\"trainings\")\r\n          .numChildren();\r\n        usersStatistics.push({ name, surname, numberOfTrainings });\r\n      }\r\n    });\r\n    usersStatistics.sort((a, b) => b.numberOfTrainings - a.numberOfTrainings);\r\n    setStatistics(usersStatistics.slice(0, 10));\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase.database().ref(\"users\");\r\n      ref.on(\"value\", handleStatistics);\r\n      return () => {\r\n        ref.off(\"value\", handleStatistics);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n  return (\r\n    <section className=\"table-results\">\r\n      <h2 className=\"table-results__h2\">Statystyki</h2>\r\n      <table className=\"table-results__table\">\r\n        <thead>\r\n          <tr className=\"table-results__tr\">\r\n            <th className=\"table-results__th\">Miejsce</th>\r\n            <th className=\"table-results__th\">Imię</th>\r\n            <th className=\"table-results__th\">Nazwisko</th>\r\n            <th className=\"table-results__th\">Liczba treningów</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {statistics &&\r\n            statistics.map((item, index) => {\r\n              return (\r\n                <tr\r\n                  className=\"table-results__tr\"\r\n                  key={`${item.name}/${item.surname}/${item.numberOfTrainings}`}\r\n                >\r\n                  <td className=\"table-results__td\">{index + 1}</td>\r\n                  <td className=\"table-results__td\">{item.name}</td>\r\n                  <td className=\"table-results__td\">{item.surname}</td>\r\n                  <td className=\"table-results__td\">\r\n                    {item.numberOfTrainings}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n      <span className=\"table-results__span\"></span>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TableResults;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport { Greetings, MyProfile, Activities, TableResults } from \"./components\";\r\nimport firebase from \"firebase/app\";\r\nimport \"./loggedHome.scss\";\r\nimport { LoadingIndicator } from \"components\";\r\ninterface ingredients {\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n}\r\ninterface user {\r\n  name: string;\r\n  surname: string;\r\n  ingredients: ingredients;\r\n}\r\nexport interface Props {}\r\nconst Home: React.FC<Props> = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [user, setUser] = useState<user>();\r\n  const uploadUser = function (snapshot: any) {\r\n    setUser({\r\n      name: snapshot.child(\"user/name\").val(),\r\n      surname: snapshot.child(\"user/surname\").val(),\r\n      ingredients: {\r\n        carbs: snapshot.child(\"diet/carbs\").val(),\r\n        fats: snapshot.child(\"diet/fats\").val(),\r\n        proteins: snapshot.child(\"diet/proteins\").val(),\r\n        calories: snapshot.child(\"diet/calories\").val(),\r\n      },\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/settings\");\r\n      ref.on(\"value\", uploadUser);\r\n      return () => {\r\n        ref.off(\"value\", uploadUser);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n  return (\r\n    <>\r\n      {currentUser && user ? (\r\n        <main className=\"logged-home\">\r\n          <Greetings name={user.name} />\r\n          <section className=\"logged-home__profile\">\r\n            <MyProfile\r\n              name={user.name}\r\n              surname={user.surname}\r\n              currentUser={currentUser}\r\n            />\r\n            <Activities ingredients={user.ingredients} />\r\n          </section>\r\n\r\n          <TableResults />\r\n        </main>\r\n      ) : (\r\n        <LoadingIndicator />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./backgroundImage.scss\";\r\nimport { Button } from \"components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport interface Props {}\r\n\r\nconst BackgroundImage: React.FC<Props> = () => {\r\n  const history = useHistory();\r\n  const handleRegister = () => {\r\n    history.push(`/login`);\r\n  };\r\n  return (\r\n    <section className=\"background-image\">\r\n      <div className=\"background-image__div\">\r\n        <h1 className=\"background-image__h1\">To do workout</h1>\r\n        <p className=\"background-image__p\">\r\n          Wejdź na wyższy poziom trenowania!\r\n        </p>\r\n        <Button onClick={handleRegister}>Zarejestruj się</Button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BackgroundImage;\r\n","import React from \"react\";\r\nimport \"./feature.scss\";\r\nexport interface Props {\r\n  icon: any;\r\n  title: string;\r\n  text: string;\r\n}\r\n\r\nconst Feature: React.FC<Props> = ({ icon, title, text }) => {\r\n  return (\r\n    <div className=\"feature\">\r\n      <div className=\"feature__div\">{icon}</div>\r\n      <h3 className=\"feature__title\">{title}</h3>\r\n      <p className=\"feature__p\">{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feature;\r\n","import React from \"react\";\r\nimport \"./features.scss\";\r\nimport { Feature } from \"./components\";\r\nimport { BsCardText } from \"react-icons/bs\";\r\nimport { GiMeal } from \"react-icons/gi\";\r\nimport { RiRunLine } from \"react-icons/ri\";\r\nimport { AiOutlineBarChart } from \"react-icons/ai\";\r\nexport interface Props {}\r\n\r\nconst Features: React.FC<Props> = () => {\r\n  return (\r\n    <section className=\"features\">\r\n      <h2 className=\"features__title\">Możliwości</h2>\r\n      <Feature\r\n        icon={<BsCardText />}\r\n        title=\"Plan treningowy\"\r\n        text=\"Zaprojektuj zestaw ćwiczeń do swojej aktualnej formy i pozwoli osiągnąć\r\n        wymarzoną sylwetkę oraz zadbać o zdrowie.\"\r\n      />\r\n      <Feature\r\n        icon={<GiMeal />}\r\n        title=\"Zaplanuj diete\"\r\n        text=\"Prawidłowa dieta jest kluczowa dla zdrowia, kondycji i świetnego samopoczucia.\"\r\n      />\r\n      <Feature\r\n        icon={<RiRunLine />}\r\n        title=\"Motywacja\"\r\n        text=\"W osiągnięciu sukcesu najważniejsze jest to, co dzieje się w głowie. Trenuj regularnie i patrz jak rośnie Twoja pozycja w rankingu.\"\r\n      />\r\n      <Feature\r\n        icon={<AiOutlineBarChart />}\r\n        title=\"Monitorowanie rozwoju ciala\"\r\n        text=\"Wykresy to najlepszy przyjaciel sportowca. Dzięki aplikacji możesz śledź\r\n        przyrost swojej siły!\"\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Features;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./feedback.scss\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport firebase from \"firebase/app\";\r\n\r\nexport interface Props {}\r\n\r\nconst Feedback: React.FC<Props> = () => {\r\n  const [opinions, setOpinions] = useState<Array<string>>([]);\r\n  const numberOfOpinions = opinions.length;\r\n  const [indexOfActiveFeedback, setIndexOfActiveFeedback] = useState(0);\r\n  useEffect(() => {\r\n    if (numberOfOpinions > 1) {\r\n      const indexActiveFeedback = setInterval(() => {\r\n        setIndexOfActiveFeedback((prevState) => {\r\n          if (prevState === numberOfOpinions - 1) return 0;\r\n          return prevState + 1;\r\n        });\r\n      }, 10000);\r\n      return () => clearInterval(indexActiveFeedback);\r\n    }\r\n  }, [indexOfActiveFeedback, numberOfOpinions]);\r\n\r\n  const handleActiveFeedback = (direction: string) => {\r\n    if (numberOfOpinions > 1) {\r\n      if (direction === \"left\") {\r\n        setIndexOfActiveFeedback((prevState) => {\r\n          if (prevState === 0) return numberOfOpinions - 1;\r\n          return prevState - 1;\r\n        });\r\n      } else if (direction === \"right\") {\r\n        setIndexOfActiveFeedback((prevState) => {\r\n          if (prevState === numberOfOpinions - 1) return 0;\r\n          return prevState + 1;\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const uploadOpinions = function (snapshot: any) {\r\n    const opinionArray: Array<string> = [];\r\n\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      opinionArray.push(childSnapshot.child(\"opinion\").val());\r\n    });\r\n    setOpinions(opinionArray);\r\n  };\r\n  useEffect(() => {\r\n    const ref = firebase.database().ref(\"app/data/form\").limitToLast(3);\r\n    ref.on(\"value\", uploadOpinions);\r\n    return () => {\r\n      ref.off(\"value\", uploadOpinions);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"feedback\">\r\n      <h2 className=\"feedback__title\">Najświeższe opinie</h2>\r\n      <div className=\"feedback__opinions\">\r\n        <span\r\n          onClick={() => handleActiveFeedback(\"left\")}\r\n          className=\"feedback__left\"\r\n        >\r\n          <IoIosArrowBack />\r\n        </span>\r\n        <p className=\"feedback__p\">\r\n          {numberOfOpinions > 0 ? opinions[indexOfActiveFeedback] : \"Brak\"}\r\n        </p>\r\n        <span\r\n          onClick={() => handleActiveFeedback(\"right\")}\r\n          className=\"feedback__right\"\r\n        >\r\n          <IoIosArrowBack />\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Feedback;\r\n","import React, { useState } from \"react\";\r\nimport \"./sendMessage.scss\";\r\nimport { FormTemplate } from \"components\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport {\r\n  dayMonthYearWithSeparator,\r\n  hoursMinutesWithSeparator,\r\n} from \"utils/dateFunctions\";\r\nimport { minValue, maxValue } from \"utils/validation\";\r\nimport firebase from \"firebase/app\";\r\ninterface values {\r\n  name: string;\r\n  surname: string;\r\n  opinion: string;\r\n}\r\nexport interface Props {}\r\n\r\nconst SendMessage: React.FC<Props> = () => {\r\n  const [isSendForm, setIsSendForm] = useCookies([\"sendForm\"]);\r\n  const [isSameSession, setIsSameSession] = useState(false);\r\n\r\n  const formFields = {\r\n    fields: [\r\n      {\r\n        name: \"name\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Twoje imię\",\r\n        placeholder: \"Twoje imię\",\r\n        type: \"text\",\r\n      },\r\n      {\r\n        name: \"surname\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Twoje nazwisko\",\r\n        placeholder: \"Twoje nazwisko\",\r\n        type: \"text\",\r\n      },\r\n      {\r\n        name: \"opinion\",\r\n        validate: composeValidators(\r\n          required(\"To pole jest wymagane!\"),\r\n          minValue(10, \"Tekst musi mieć conajmniej 10 znaków\"),\r\n          maxValue(400, \"Tekst nie może być dłuższy niż 400 znaków\")\r\n        ),\r\n        initialValue: undefined,\r\n        text: \"Twoja opinia\",\r\n        placeholder: \"Twoja opinia...\",\r\n        component: \"textarea\",\r\n        type: \"text\",\r\n      },\r\n    ],\r\n    button: {\r\n      type: \"submit\",\r\n      text: \"Wyślij\",\r\n    },\r\n  };\r\n  const handleSubmitOpinion = (values: values) => {\r\n    const date = new Date();\r\n    const year = new Date(date).getFullYear();\r\n    const month = new Date(date).getMonth();\r\n    const dayOfMonth = date.getDate();\r\n    const newDate = new Date(year, month, dayOfMonth + 14);\r\n    const modifiedDate =\r\n      dayMonthYearWithSeparator(new Date(date), \"-\", \"yes\") +\r\n      \"T\" +\r\n      hoursMinutesWithSeparator(new Date(date), \":\");\r\n    firebase.database().ref(\"app/data/form\").push().set({\r\n      name: values.name,\r\n      surname: values.surname,\r\n      opinion: values.opinion,\r\n      date: modifiedDate,\r\n    });\r\n    setIsSendForm(\"sendForm\", \"formularz wysłany\", {\r\n      expires: newDate,\r\n    });\r\n    setIsSameSession(true);\r\n  };\r\n\r\n  return (\r\n    <section className=\"send-message\">\r\n      {isSendForm.sendForm === \"formularz wysłany\" ? (\r\n        <p className=\"send-message__sent\">\r\n          {isSendForm.sendForm === \"formularz wysłany\" && isSameSession\r\n            ? \"Dzięki za opinię!\"\r\n            : \"Formularz został już wysłany!\"}\r\n        </p>\r\n      ) : (\r\n        <FormTemplate\r\n          formFields={formFields}\r\n          handleSubmit={handleSubmitOpinion}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SendMessage;\r\n","import React from \"react\";\r\nimport \"./footer.scss\";\r\nexport interface Props {}\r\n\r\nconst Footer: React.FC<Props> = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer__info\">\r\n        <h2 className=\"footer__h2\">To do workout</h2>\r\n        <p className=\"footer__text\">\r\n          Aplikacji umożliwiający łatwiejsze zarządzanie swoimi treningami,\r\n          projekt w ciągłym rozwoju.\r\n        </p>\r\n      </div>\r\n      <p className=\"footer__rights\">© 2020 All Rights Reserved</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./home.scss\";\r\nimport {\r\n  BackgroundImage,\r\n  Features,\r\n  Feedback,\r\n  SendMessage,\r\n  Footer,\r\n} from \"./components\";\r\nexport interface Props {}\r\n\r\nconst Home: React.FC<Props> = () => {\r\n  return (\r\n    <main className=\"home\">\r\n      <BackgroundImage />\r\n      <Features />\r\n      <Feedback />\r\n      <SendMessage />\r\n      <Footer />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport { LoggedHome, Home } from \"./components\";\r\n\r\nexport interface Props {}\r\n\r\nconst Root: React.FC<Props> = () => {\r\n  const { currentUser }: any | undefined = useContext(AuthContext);\r\n  return <>{currentUser ? <LoggedHome /> : <Home />}</>;\r\n};\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { dayMonthYearWithSeparator } from \"utils/dateFunctions\";\r\nimport \"./listItems.scss\";\r\ninterface exercise {\r\n  workoutName: string;\r\n  series: Array<string>;\r\n}\r\ninterface training {\r\n  id: string;\r\n  date: string;\r\n  workoutName: string;\r\n  exercises?: exercise;\r\n}\r\nexport interface Props {\r\n  trainings: Array<training>;\r\n}\r\nconst Table: React.FC<Props> = ({ trainings }) => {\r\n  const history = useHistory();\r\n  const handleTraining = (training: training) => {\r\n    history.push(`/trainings/${training.id}`);\r\n  };\r\n\r\n  return (\r\n    <ul className=\"list-items\">\r\n      {trainings\r\n        .map((training: training) => {\r\n          const date = new Date(training.date);\r\n          const modifiedDate = `${dayMonthYearWithSeparator(date, \"/\")}`;\r\n          let exercisesCount = 0;\r\n          if (training.exercises) {\r\n            exercisesCount = Object.keys(training.exercises).length;\r\n          }\r\n          return (\r\n            <li\r\n              onClick={() => handleTraining(training)}\r\n              key={training.id}\r\n              className=\"list-items__li\"\r\n            >\r\n              <span className=\"list-items__name\">{training.workoutName}</span>\r\n              <span className=\"list-items__date\">{modifiedDate}</span>\r\n              <span className=\"list-items__count\">{exercisesCount}</span>\r\n            </li>\r\n          );\r\n        })\r\n        .reverse()}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./trainingsList.scss\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport { ListItems } from \"./components\";\r\nimport { LoadingIndicator } from \"components\";\r\ntype Trainings = Array<training>;\r\ninterface training {\r\n  id: string;\r\n  date: string;\r\n  workoutName: string;\r\n}\r\nexport interface Props {}\r\nconst TrainingsList: React.FC<Props> = () => {\r\n  const [trainings, setTrainings] = useState<Trainings>([]);\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const uploadTrainings = function (snapshot: any) {\r\n    const trainingArray: any = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const childData = childSnapshot.val();\r\n      trainingArray.push(childData);\r\n    });\r\n    setTrainings(trainingArray);\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/trainings\")\r\n        .orderByChild(\"date\");\r\n      ref.on(\"value\", uploadTrainings);\r\n      return () => {\r\n        ref.off(\"value\", uploadTrainings);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <section className=\"trainings__list\">\r\n      <h2 className=\"trainings__h2\">Treningi</h2>\r\n      {isLoaded ? <ListItems trainings={trainings} /> : <LoadingIndicator />}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TrainingsList;\r\n","import React, { useContext } from \"react\";\r\nimport { FormTemplate } from \"components\";\r\nimport { required, composeValidators, maxValue } from \"utils/validation\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport {\r\n  dayMonthYearWithSeparator,\r\n  hoursMinutesWithSeparator,\r\n} from \"utils/dateFunctions\";\r\nexport interface Props {}\r\n\r\nconst AddTraining: React.FC<Props> = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const date = new Date();\r\n  const datePattern = `${dayMonthYearWithSeparator(\r\n    date,\r\n    \"-\",\r\n    \"yes\"\r\n  )}T${hoursMinutesWithSeparator(date, \":\")}`;\r\n  const formFields = {\r\n    fields: [\r\n      {\r\n        name: \"date\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: datePattern,\r\n        text: \"Data treningu\",\r\n        placeholder: \"Data treningu\",\r\n        type: \"datetime-local\",\r\n        max: datePattern,\r\n      },\r\n      {\r\n        name: \"workoutName\",\r\n        validate: composeValidators(\r\n          required(\"To pole jest wymagane!\"),\r\n          maxValue(40, \"Nazwa treningu maksymalnie może mieć 40 znaków\")\r\n        ),\r\n        initialValue: undefined,\r\n        text: \"Nazwa treningu\",\r\n        placeholder: \"Nazwa treningu\",\r\n      },\r\n    ],\r\n    button: {\r\n      type: \"submit\",\r\n      text: \"Dodaj trening\",\r\n    },\r\n  };\r\n  const saveNewTraining = (\r\n    userId: string,\r\n    id: string,\r\n    date: string,\r\n    workoutName: string\r\n  ) => {\r\n    firebase\r\n      .database()\r\n      .ref(\"users/\" + userId + \"/trainings/\" + id)\r\n      .set({ id, date, workoutName });\r\n  };\r\n  const handleSubmit = (values: any) => {\r\n    const date = values.date\r\n      .replace(/-/g, \"\")\r\n      .replace(/T/g, \"\")\r\n      .replace(/:/g, \"\");\r\n\r\n    if (currentUser) {\r\n      saveNewTraining(currentUser.uid, date, values.date, values.workoutName);\r\n      history.push(`/trainings/${date}`);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"add-training\">\r\n      <FormTemplate formFields={formFields} handleSubmit={handleSubmit} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddTraining;\r\n","import React from \"react\";\r\nimport { AddTraining, TrainingsList } from \"./components\";\r\nimport \"./trainings.scss\";\r\nexport interface Props {}\r\nconst Trainings: React.FC<Props> = () => {\r\n  return (\r\n    <main className=\"trainings\">\r\n      <AddTraining />\r\n\r\n      <TrainingsList />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Trainings;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./trainingExerciseList.scss\";\r\ninterface exerciseItem {\r\n  workoutName: string;\r\n  series?: Array<string>;\r\n  key: string;\r\n}\r\nexport interface Props {\r\n  exercises: Array<exerciseItem>;\r\n  id: string;\r\n}\r\nconst TrainingExerciseList: React.FC<Props> = ({ exercises, id }) => {\r\n  const history = useHistory();\r\n  const handleTrainingExercise = (\r\n    exerciseKey: string,\r\n    exerciseName: string\r\n  ) => {\r\n    history.push({\r\n      pathname: `/trainings/${id}/${exerciseKey}`,\r\n      state: { exerciseName },\r\n    });\r\n  };\r\n  return (\r\n    <ul className=\"training-exercise-list__ul\">\r\n      {exercises.map((exerciseName: exerciseItem) => {\r\n        return (\r\n          <li\r\n            key={exerciseName.key}\r\n            onClick={() =>\r\n              handleTrainingExercise(exerciseName.key, exerciseName.workoutName)\r\n            }\r\n            className=\"training-exercise-list__exercise\"\r\n          >\r\n            <span className=\"training-exercise-list__workout-name\">\r\n              {exerciseName.workoutName}\r\n            </span>\r\n            <div className=\"training-exercise-list__series-div\">\r\n              {exerciseName.series?.map((strinNumber, inx) => {\r\n                if (inx % 2 === 0 && exerciseName.series) {\r\n                  const seriesString = `${exerciseName.series[inx]}:${\r\n                    exerciseName.series[inx + 1]\r\n                  }`;\r\n                  return (\r\n                    <span key={inx} className=\"training-exercise-list__series\">\r\n                      {seriesString}\r\n                    </span>\r\n                  );\r\n                }\r\n              })}\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TrainingExerciseList;\r\n","import fire from \"fire\";\r\nimport React, { useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport \"./dragAndDropList.scss\";\r\nconst reorder = (list: any, startIndex: any, endIndex: any) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n  return result;\r\n};\r\nexport interface Props {\r\n  exercises: any;\r\n  id: string;\r\n  refUrl: string;\r\n}\r\nconst DragAndDropList: React.FC<Props> = ({ exercises, id, refUrl }) => {\r\n  const [listItems, setListItems] = useState(\r\n    exercises.map((exercise: any, index: number) => {\r\n      return {\r\n        id: `${index + 1}`,\r\n        content: exercise.workoutName,\r\n        key: exercise.key,\r\n      };\r\n    })\r\n  );\r\n  const onDragEnd = (result: any) => {\r\n    if (!result.destination) return;\r\n    const items: any = reorder(\r\n      listItems,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    setListItems(items);\r\n    fire.database().ref(refUrl).set({});\r\n    items.forEach((item: any) => {\r\n      fire.database().ref(refUrl).push().set({ workoutName: item.content });\r\n    });\r\n  };\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <Droppable droppableId=\"droppable\">\r\n        {(provided, snapshot) => (\r\n          <div\r\n            className=\"list\"\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {listItems.map((item: any, index: number) => (\r\n              <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    className=\"list__item\"\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    {item.content}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\nexport default DragAndDropList;\r\n","import React, { useContext } from \"react\";\r\nimport { TrainingExerciseList } from \"./..\";\r\nimport { FormTemplate } from \"components\";\r\nimport { required, composeValidators, maxValue } from \"utils/validation\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\ninterface Exercise {\r\n  workoutName: string;\r\n}\r\nexport interface Props {\r\n  exercises: any | undefined;\r\n  id: string;\r\n}\r\n\r\nconst TrainingItem: React.FC<Props> = ({ exercises, id }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const formFields = {\r\n    fields: [\r\n      {\r\n        name: \"workoutName\",\r\n        validate: composeValidators(\r\n          required(\"To pole jest wymagane!\"),\r\n          maxValue(60, \"Nazwa treningu maksymalnie może mieć 60 znaków\")\r\n        ),\r\n        initialValue: undefined,\r\n        text: \"Nowe ćwiczenie\",\r\n        placeholder: \"Nowe ćwiczenie\",\r\n      },\r\n    ],\r\n    button: {\r\n      type: \"submit\",\r\n      text: \"Dodaj ćwiczenie\",\r\n    },\r\n  };\r\n  const handleSubmit = (values: Exercise) => {\r\n    if (currentUser) {\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/trainings/${id}`)\r\n        .child(\"exercises\")\r\n        .push()\r\n        .set({ workoutName: values.workoutName });\r\n      values.workoutName = \"\";\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <FormTemplate formFields={formFields} handleSubmit={handleSubmit} />\r\n      <TrainingExerciseList exercises={exercises} id={id} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingItem;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport fire from \"fire\";\r\nimport { DragAndDropList, TrainingItem } from \"./components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { EditTitle, GoBackDelete } from \"components\";\r\nimport \"./training.scss\";\r\n\r\ninterface Id {\r\n  id: string;\r\n}\r\ntype MatchParams = {\r\n  params: Id;\r\n};\r\nexport interface Props {\r\n  match: MatchParams;\r\n}\r\nconst Training: React.FC<Props> = ({ match }) => {\r\n  const history = useHistory();\r\n  const { id } = match.params;\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [isActiveEditing, setIsActiveEditing] = useState(false);\r\n\r\n  const handleDeleteTraining = () => {\r\n    if (currentUser) {\r\n      fire.database().ref(`users/${currentUser.uid}/trainings/${id}`).remove();\r\n      history.goBack();\r\n    }\r\n  };\r\n\r\n  const [exercises, setExercises] = useState();\r\n  const loadTrainings = function (snapshot: any) {\r\n    const exerciseArray: any = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const { series, workoutName } = childSnapshot.val();\r\n      const key = childSnapshot.key;\r\n      exerciseArray.push({ workoutName, key, series });\r\n    });\r\n    setExercises(exerciseArray);\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = fire\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/trainings/${id}`);\r\n      ref.child(`exercises`).on(\"value\", loadTrainings);\r\n      return () => {\r\n        ref.child(`exercises`).off(\"value\", loadTrainings);\r\n      };\r\n    }\r\n  }, [currentUser, id]);\r\n\r\n  return (\r\n    <main className=\"training\">\r\n      <GoBackDelete\r\n        handleEdit={handleDeleteTraining}\r\n        editTitle=\"Usuń trening\"\r\n      />\r\n\r\n      <section className=\"training__add-exercise\">\r\n        {currentUser && (\r\n          <EditTitle\r\n            labelText=\"Nazwa treningu\"\r\n            editDate={true}\r\n            refUrl={`users/${currentUser.uid}/trainings/${id}`}\r\n            isActiveEditing={isActiveEditing}\r\n            setIsActiveEditing={setIsActiveEditing}\r\n          />\r\n        )}\r\n        {isActiveEditing && currentUser ? (\r\n          <DragAndDropList\r\n            exercises={exercises}\r\n            id={id}\r\n            refUrl={`users/${currentUser.uid}/trainings/${id}/exercises`}\r\n          />\r\n        ) : (\r\n          exercises && <TrainingItem exercises={exercises} id={id} />\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Training;\r\n","const generateRandomString = () => {\r\n  return (\r\n    Math.random().toString(36).substr(2, 9) +\r\n    Math.random().toString(36).substr(2, 9) +\r\n    Math.random().toString(36).substr(2, 9)\r\n  );\r\n};\r\nexport default generateRandomString;\r\n","import React from \"react\";\r\nimport \"./line.scss\";\r\nimport generateRandomString from \"utils/generateRandomString\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\ninterface Fields {\r\n  name: string;\r\n  validate: (value: any) => void;\r\n  initialValue: string | undefined;\r\n  text: string;\r\n  placeholder: string;\r\n}\r\ninterface Button {\r\n  text: string;\r\n}\r\nexport interface Props {\r\n  fields: Fields[];\r\n  button: Button;\r\n  setFormFields: (cos: any) => void;\r\n}\r\n\r\nconst Line: React.FC<Props> = ({ fields, button, setFormFields }) => {\r\n  const handleAddSeries = () => {\r\n    fields.push(\r\n      {\r\n        name: `exerciseWeight${generateRandomString()}`,\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Ciężar (kg)\",\r\n        placeholder: \"Ciężar (kg)\",\r\n      },\r\n      {\r\n        name: `exerciseRepeat${generateRandomString()}`,\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Liczba powtórzeń\",\r\n        placeholder: \"Liczba powtórzeń\",\r\n      }\r\n    );\r\n    setFormFields({\r\n      fields,\r\n      button,\r\n    });\r\n  };\r\n  return (\r\n    <div onClick={handleAddSeries} className=\"exercise__line\">\r\n      <div className=\"exercise__check\">+</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Line;\r\n","import React from \"react\";\r\nimport \"./removeSeries.scss\";\r\nexport interface Props {\r\n  index: number;\r\n  handleRemoveSeries: (index: number) => void;\r\n}\r\n\r\nconst RemoveSeries: React.FC<Props> = ({ index, handleRemoveSeries }) => {\r\n  return (\r\n    <div className=\"remove-series\">\r\n      <button\r\n        onClick={() => handleRemoveSeries(index)}\r\n        type=\"button\"\r\n        className=\"remove-series__button\"\r\n      >\r\n        Usuń serię\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemoveSeries;\r\n","import React from \"react\";\r\nimport \"./seriesNumber.scss\";\r\nexport interface Props {\r\n  index: number;\r\n}\r\n\r\nconst SeriesNumber: React.FC<Props> = ({ index }) => {\r\n  return (\r\n    <>\r\n      {index % 2 === 0 && <p className=\"seriesNumber\">Seria {index / 2 + 1}</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SeriesNumber;\r\n","import React, { useContext } from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport \"./formInput.scss\";\r\nimport { Line, RemoveSeries, SeriesNumber } from \"./components\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\ninterface Fields {\r\n  name: string;\r\n  validate: (value: any) => void;\r\n  initialValue: string | undefined;\r\n  text: string;\r\n  placeholder: string;\r\n}\r\ninterface Button {\r\n  type: string;\r\n  text: string;\r\n}\r\ninterface FormFields {\r\n  fields: Fields[];\r\n  button: Button;\r\n}\r\ninterface Props {\r\n  formFields: FormFields;\r\n  setFormFields: React.Dispatch<React.SetStateAction<FormFields>>;\r\n  id: string;\r\n  paramId: string;\r\n}\r\n\r\nconst FormInput: React.FC<Props> = ({\r\n  formFields: { fields, button },\r\n  setFormFields,\r\n  id,\r\n  paramId,\r\n}) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const handleSubmit = (values: any) => {\r\n    const newArray: any = [];\r\n    fields.forEach((field) => {\r\n      newArray.push(values[field.name]);\r\n    });\r\n    if (currentUser) {\r\n      const url = `users/${currentUser.uid}/trainings/${id}/exercises/${paramId}`;\r\n      firebase.database().ref(url).child(\"series\").set(newArray);\r\n    }\r\n  };\r\n\r\n  const handleRemoveSeries = (number: number) => {\r\n    fields.splice(number - 1, 2);\r\n    setFormFields({\r\n      fields,\r\n      button,\r\n    });\r\n  };\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      {(props) => (\r\n        <form onSubmit={props.handleSubmit} className=\"form\">\r\n          {fields.map((formField: any, index: number) => {\r\n            return (\r\n              <Field\r\n                key={formField.name}\r\n                name={formField.name}\r\n                validate={formField.validate}\r\n                defaultValue={formField.initialValue}\r\n                parse={formField.parse}\r\n              >\r\n                {({ input, meta }) => (\r\n                  <>\r\n                    <SeriesNumber index={index} />\r\n                    <div className=\"form__wrapper\">\r\n                      <label>{formField.text}</label>\r\n                      <input\r\n                        className=\"form__input\"\r\n                        {...input}\r\n                        type=\"number\"\r\n                        step=\"1\"\r\n                        min=\"0\"\r\n                        placeholder={formField.placeholder}\r\n                      />\r\n                      {meta.error && meta.touched && (\r\n                        <span className=\"form__span\">{meta.error}</span>\r\n                      )}\r\n                    </div>\r\n                    {index % 2 === 1 && (\r\n                      <RemoveSeries\r\n                        index={index}\r\n                        handleRemoveSeries={handleRemoveSeries}\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Field>\r\n            );\r\n          })}\r\n          <Line fields={fields} button={button} setFormFields={setFormFields} />\r\n          <button className=\"form__button\">{button.text}</button>\r\n        </form>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport { FormInput } from \"./components\";\r\nimport { EditTitle, GoBackDelete } from \"components\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\nimport generateRandomString from \"utils/generateRandomString\";\r\nimport fire from \"./../../fire\";\r\nimport \"./exercise.scss\";\r\ninterface Id {\r\n  id: string;\r\n}\r\ninterface Params {\r\n  params: Id;\r\n  path: string;\r\n  url: string;\r\n}\r\ninterface Field {\r\n  name: string;\r\n  validate: (value: any) => void;\r\n  initialValue: string | undefined;\r\n  text: string;\r\n  placeholder: string;\r\n}\r\ninterface Button {\r\n  type: string;\r\n  text: string;\r\n}\r\ninterface FormFields {\r\n  fields: Field[];\r\n  button: Button;\r\n}\r\nexport interface Props {\r\n  match: Params;\r\n}\r\nconst Exercise: React.FC<Props> = (props) => {\r\n  let history = useHistory();\r\n  const { currentUser } = useContext(AuthContext);\r\n  const url = props.match.url.replace(\"/trainings/\", \"\");\r\n  const id = url.replace(\"/\" + props.match.params.id, \"\");\r\n  const [isActiveEditing, setIsActiveEditing] = useState(false);\r\n  const [formFields, setFormFields] = useState<FormFields>({\r\n    fields: [\r\n      {\r\n        name: \"exerciseWeight\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Ciężar (kg)\",\r\n        placeholder: \"Ciężar (kg)\",\r\n      },\r\n      {\r\n        name: \"exerciseRepeat\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Liczba powtórzeń\",\r\n        placeholder: \"Liczba powtórzeń\",\r\n      },\r\n    ],\r\n    button: {\r\n      type: \"submit\",\r\n      text: \"Zapisz\",\r\n    },\r\n  });\r\n  const handleSaveExercise = () => {\r\n    if (currentUser) {\r\n      fire\r\n        .database()\r\n        .ref(\r\n          `users/${currentUser.uid}/trainings/${id}/exercises/${props.match.params.id}`\r\n        )\r\n        .remove();\r\n      history.goBack();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      fire\r\n        .database()\r\n        .ref(\r\n          `users/${currentUser.uid}/trainings/${id}/exercises/${props.match.params.id}/series`\r\n        )\r\n        .on(\"value\", function (snapshot) {\r\n          if (snapshot) {\r\n            const fields: Field[] = [];\r\n            const button = {\r\n              type: \"submit\",\r\n              text: \"Zapisz\",\r\n            };\r\n            snapshot.forEach(function (childSnapshot) {\r\n              const text =\r\n                fields.length % 2 === 0 ? \"Ciężar (kg)\" : \"Liczba powtórzeń\";\r\n\r\n              fields.push({\r\n                name: `${\r\n                  fields.length % 2 === 0 ? \"exerciseWeight\" : \"exerciseRepeat\"\r\n                }${generateRandomString()}`,\r\n                validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n                initialValue: childSnapshot.val(),\r\n                text: text,\r\n                placeholder: text,\r\n              });\r\n            });\r\n            if (fields.length > 0) {\r\n              setFormFields({\r\n                fields,\r\n                button,\r\n              });\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }, [currentUser, id, props.match.params.id]);\r\n  return (\r\n    <main className=\"exercise\">\r\n      <GoBackDelete\r\n        handleEdit={handleSaveExercise}\r\n        editTitle=\"Usuń ćwiczenie\"\r\n      />\r\n      <section className=\"exercise__add-series\">\r\n        {currentUser && (\r\n          <EditTitle\r\n            labelText=\"Nazwa ćwiczenia\"\r\n            editDate={false}\r\n            refUrl={`users/${currentUser.uid}/trainings/${id}/exercises/${props.match.params.id}`}\r\n            isActiveEditing={isActiveEditing}\r\n            setIsActiveEditing={setIsActiveEditing}\r\n          />\r\n        )}\r\n        {!isActiveEditing && (\r\n          <FormInput\r\n            formFields={formFields}\r\n            setFormFields={setFormFields}\r\n            id={id}\r\n            paramId={props.match.params.id}\r\n          />\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Exercise;\r\n","import React from \"react\";\r\nimport { Chart } from \"components\";\r\ninterface training {\r\n  date: string;\r\n  id: string;\r\n  workoutName: string;\r\n  exercises?: object;\r\n}\r\nexport interface Props {\r\n  trainings: Array<training>;\r\n}\r\n\r\nconst TrainingsPerMonth: React.FC<Props> = ({ trainings }) => {\r\n  const weekNames = [\r\n    \"Styczeń\",\r\n    \"Luty\",\r\n    \"Marzec\",\r\n    \"Kwiecień\",\r\n    \"Maj\",\r\n    \"Czerwiec\",\r\n    \"Lipiec\",\r\n    \"Sierpień\",\r\n    \"Wrzesień\",\r\n    \"Październik\",\r\n    \"Listopad\",\r\n    \"Grudzień\",\r\n  ];\r\n  const trainingsPerMonth: Array<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n  trainings.forEach((training: training) => {\r\n    trainingsPerMonth[new Date(training.date).getMonth()] += 1;\r\n  });\r\n  const specification = {\r\n    type: \"bar\",\r\n    data: {\r\n      labels: weekNames,\r\n      datasets: [\r\n        {\r\n          data: trainingsPerMonth,\r\n          backgroundColor: function (context: any) {\r\n            const index = context.dataIndex;\r\n            return index % 2\r\n              ? \"rgba(255, 165, 0, 0.5)\"\r\n              : \"rgba(235, 118, 98, 0.8)\";\r\n          },\r\n\r\n          borderColor: function (context: any) {\r\n            const index = context.dataIndex;\r\n            return index % 2\r\n              ? \"rgba(255, 165, 0, 0.5)\"\r\n              : \"rgba(235, 118, 98, 1)\";\r\n          },\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: [],\r\n          hoverBorderColor: [],\r\n          hoverBorderWidth: 3,\r\n          weight: 1,\r\n        },\r\n      ],\r\n    },\r\n\r\n    options: {\r\n      title: {\r\n        display: true,\r\n        text: \"Liczba treningów w roku\",\r\n      },\r\n      legend: {\r\n        display: false,\r\n        labels: {},\r\n        position: \"right\",\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              lineHeight: 2,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  return <>{<Chart specification={specification}> </Chart>}</>;\r\n};\r\n\r\nexport default TrainingsPerMonth;\r\n","import React from \"react\";\r\nimport { Chart } from \"components\";\r\ninterface trainingsPerTrainingNameItem {\r\n  name: Array<string>;\r\n  amount: Array<number>;\r\n}\r\ninterface training {\r\n  date: string;\r\n  id: string;\r\n  workoutName: string;\r\n  exercises?: object;\r\n}\r\nexport interface Props {\r\n  trainings: Array<training>;\r\n}\r\n\r\nconst TrainingsPerTrainingName: React.FC<Props> = ({ trainings }) => {\r\n  const trainingsPerTrainingName: trainingsPerTrainingNameItem = {\r\n    name: [],\r\n    amount: [],\r\n  };\r\n  trainings.forEach((training: training) => {\r\n    const index = trainingsPerTrainingName.name.findIndex(\r\n      (item) => item === training.workoutName\r\n    );\r\n    if (index !== -1) {\r\n      ++trainingsPerTrainingName.amount[index];\r\n    } else {\r\n      trainingsPerTrainingName.name.push(training.workoutName);\r\n      trainingsPerTrainingName.amount.push(1);\r\n    }\r\n  });\r\n\r\n  const specification = {\r\n    type: \"pie\",\r\n\r\n    data: {\r\n      labels: trainingsPerTrainingName.name,\r\n      datasets: [\r\n        {\r\n          data: trainingsPerTrainingName.amount,\r\n          backgroundColor: [\r\n            \"rgba(230, 25, 75, 0.2)\",\r\n            \"rgba(245, 130, 48, 0.2)\",\r\n            \"rgba(255, 225, 25, 0.2)\",\r\n            \"rgba(210, 245,60, 0.2)\",\r\n            \"rgba(60, 180, 75, 0.2)\",\r\n            \"rgba(70, 240, 75, 0.2)\",\r\n            \"rgba(0, 130, 200, 0.2)\",\r\n            \"rgba(0, 0, 128, 0.2)\",\r\n            \"rgba(145, 30, 180, 0.2)\",\r\n            \"rgba(240, 30, 180, 0.2)\",\r\n            \"rgba(128, 128, 128, 0.2)\",\r\n            \"rgba(0, 0, 0, 0.2)\",\r\n          ],\r\n          borderColor: [\r\n            \"rgba(230, 25, 75, 0.8)\",\r\n            \"rgba(245, 130, 48, 0.8)\",\r\n            \"rgba(255, 225, 25, 0.8)\",\r\n            \"rgba(210, 245,60,0.8)\",\r\n            \"rgba(60, 180, 75, 0.8)\",\r\n            \"rgba(70, 240, 75,0.8)\",\r\n            \"rgba(0, 130, 200,0.8)\",\r\n            \"rgba(0, 0, 128, 0.8)\",\r\n            \"rgba(145, 30, 180, 0.8)\",\r\n            \"rgba(240, 30, 180, 0.8)\",\r\n            \"rgba(128, 128, 128, 0.8)\",\r\n            \"rgba(0, 0, 0, 0.8)\",\r\n          ],\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: [\r\n            \"rgba(230, 25, 75, 0.5)\",\r\n            \"rgba(245, 130, 48, 0.5)\",\r\n            \"rgba(255, 225, 25, 0.5)\",\r\n            \"rgba(210, 245,60, 0.5)\",\r\n            \"rgba(60, 180, 75, 0.5)\",\r\n            \"rgba(70, 240, 75, 0.5)\",\r\n            \"rgba(0, 130, 200, 0.5)\",\r\n            \"rgba(0, 0, 128, 0.5)\",\r\n            \"rgba(145, 30, 180, 0.5)\",\r\n            \"rgba(240, 30, 180, 0.5)\",\r\n            \"rgba(128, 128, 128, 0.5)\",\r\n            \"rgba(0, 0, 0, 0.5)\",\r\n          ],\r\n          hoverBorderColor: [\r\n            \"rgba(230, 25, 75, 1)\",\r\n            \"rgba(245, 130, 48, 1)\",\r\n            \"rgba(255, 225, 25, 1)\",\r\n            \"rgba(210, 245,60,1)\",\r\n            \"rgba(60, 180, 75, 1)\",\r\n            \"rgba(70, 240, 75,1)\",\r\n            \"rgba(0, 130, 200,1)\",\r\n            \"rgba(0, 0, 128, 1)\",\r\n            \"rgba(145, 30, 180, 1)\",\r\n            \"rgba(240, 30, 180, 1)\",\r\n            \"rgba(128, 128, 128, 1)\",\r\n            \"rgba(0, 0, 0, 1)\",\r\n          ],\r\n          hoverBorderWidth: 3,\r\n          weight: 1,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return <>{<Chart specification={specification}> </Chart>}</>;\r\n};\r\n\r\nexport default TrainingsPerTrainingName;\r\n","import React, { useState } from \"react\";\r\nimport { Chart } from \"components\";\r\nimport { dayMonthYearWithSeparator } from \"utils/dateFunctions\";\r\nimport \"./weightRaisedPerTrainingName.scss\";\r\ninterface trainingsPerTrainingNameItem {\r\n  date: Array<string>;\r\n  amount: Array<number>;\r\n}\r\ninterface training {\r\n  date: string;\r\n  id: string;\r\n  workoutName: string;\r\n  exercises?: object;\r\n}\r\nexport interface Props {\r\n  trainings: Array<training>;\r\n}\r\n\r\nconst WeightRaisedPerTrainingName: React.FC<Props> = ({ trainings }) => {\r\n  const options: Array<string> = [];\r\n  trainings.forEach((training: training) => {\r\n    if (!options.includes(training.workoutName)) {\r\n      options.push(training.workoutName);\r\n    }\r\n  });\r\n  const [selectChange, setSelectChange] = useState<string>(options[0]);\r\n  const data = trainings.filter((training: training) => {\r\n    return training.workoutName === selectChange;\r\n  });\r\n  const trainingsArray: trainingsPerTrainingNameItem = { date: [], amount: [] };\r\n  data.forEach((training) => {\r\n    let amount = 0;\r\n    if (training.exercises) {\r\n      for (const [, value] of Object.entries(training.exercises)) {\r\n        if (value.series) {\r\n          let seriesArray = [];\r\n\r\n          for (const [, series] of Object.entries(value.series)) {\r\n            seriesArray.push(series);\r\n          }\r\n          for (let i = 0; i < seriesArray.length; i += 2) {\r\n            amount += Number(seriesArray[i]) * Number(seriesArray[i + 1]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const date = new Date(training.date);\r\n    const formatedDate = `${dayMonthYearWithSeparator(date, \"/\")}`;\r\n    trainingsArray.date.push(formatedDate);\r\n    trainingsArray.amount.push(amount);\r\n  });\r\n\r\n  const specification = {\r\n    type: \"line\",\r\n    data: {\r\n      labels: trainingsArray.date,\r\n      datasets: [\r\n        {\r\n          data: trainingsArray.amount,\r\n          fill: \"false\",\r\n          borderColor: \"rgba(255, 165, 0, 1)\",\r\n        },\r\n      ],\r\n    },\r\n\r\n    options: {\r\n      title: {\r\n        display: true,\r\n        text: \"Liczba podniesionych kg\",\r\n      },\r\n      legend: {\r\n        display: false,\r\n        labels: {},\r\n        position: \"right\",\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              lineHeight: 2,\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n  const handleSelectChange = (e: any) => {\r\n    setSelectChange(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"weight-chart\">\r\n      <label className=\"weight-chart__label\">Wybierz nazwe treningu</label>\r\n      <select onChange={handleSelectChange} className=\"weight-chart__select\">\r\n        {options.map((item, index) => {\r\n          return (\r\n            <option key={index} value={item}>\r\n              {item}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n\r\n      {<Chart specification={specification}> </Chart>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeightRaisedPerTrainingName;\r\n","import React from \"react\";\r\nimport {\r\n  TrainingsPerMonth,\r\n  TrainingsPerTrainingName,\r\n  WeightRaisedPerTrainingName,\r\n} from \"./components\";\r\ninterface training {\r\n  date: string;\r\n  id: string;\r\n  workoutName: string;\r\n  exercises?: object;\r\n}\r\nexport interface Props {\r\n  trainings: Array<training>;\r\n}\r\nconst Charts: React.FC<Props> = ({ trainings }) => {\r\n  return (\r\n    <>\r\n      <TrainingsPerMonth trainings={trainings} />\r\n      <TrainingsPerTrainingName trainings={trainings} />\r\n      <WeightRaisedPerTrainingName trainings={trainings} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport fire from \"fire\";\r\nimport { Charts } from \"./components\";\r\nimport \"./statistics.scss\";\r\ntype exercise = {\r\n  workoutName: string;\r\n  series?: Array<string>;\r\n};\r\ninterface training {\r\n  date: string;\r\n  id: string;\r\n  workoutName: string;\r\n  exercises?: object;\r\n}\r\nexport interface Props {}\r\nconst Statistics: React.FC<Props> = () => {\r\n  const { currentUser }: any | undefined = useContext(AuthContext);\r\n  const [trainings, setTrainings] = useState<Array<training>>();\r\n  const uploadTrainings = function (snapshot: any) {\r\n    const trainingArray: Array<training> = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      trainingArray.push(childSnapshot.val());\r\n    });\r\n    setTrainings(trainingArray);\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = fire.database().ref(`users/${currentUser.uid}/trainings`);\r\n      ref.once(\"value\", uploadTrainings);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <main className=\"statistics\">\r\n      {trainings && <Charts trainings={trainings} />}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import * as React from \"react\";\r\nimport \"./dietNutrient.scss\";\r\nexport interface Props {\r\n  title: string;\r\n  nutrients: Array<number>;\r\n  index: number;\r\n}\r\n\r\nconst DietNutrient: React.FC<Props> = ({ title, nutrients, index }) => {\r\n  return (\r\n    <>\r\n      <div className=\"diet-nutrient\">\r\n        <p className=\"diet-nutrient__title\">{title}</p>\r\n        <p className=\"diet-nutrient__amount\">{nutrients[index]}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DietNutrient;\r\n","import React from \"react\";\r\nimport { DietNutrient } from \"./components\";\r\nimport \"./dietElement.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ingredientTitles } from \"utils/constants\";\r\nimport { slicedDayMonthYearWithSeparator } from \"utils/dateFunctions\";\r\nexport interface Props {\r\n  date: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n}\r\nconst DietElement: React.FC<Props> = ({\r\n  date,\r\n  carbs,\r\n  fats,\r\n  proteins,\r\n  calories,\r\n}) => {\r\n  const history = useHistory();\r\n  const titles: Array<string> = ingredientTitles;\r\n  const nutrients: Array<number> = [carbs, fats, proteins, calories];\r\n  const handleDietDay = (date: string) => {\r\n    history.push(`diet/${date}`);\r\n  };\r\n\r\n  const modifiedDate = slicedDayMonthYearWithSeparator(date, \"/\");\r\n  return (\r\n    <div\r\n      onClick={() => handleDietDay(date)}\r\n      className=\"diet-element\"\r\n      key={date}\r\n    >\r\n      <div className=\"diet-element__date\">{modifiedDate}</div>\r\n      <div className=\"diet-element__nutrients\">\r\n        {titles.map((title: string, index: number) => (\r\n          <DietNutrient\r\n            key={title}\r\n            title={title}\r\n            nutrients={nutrients}\r\n            index={index}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DietElement;\r\n","import React from \"react\";\r\nimport { DietElement } from \"./components\";\r\ninterface list {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<list>;\r\n}\r\ninterface diet {\r\n  date: string;\r\n  meal: Array<meal>;\r\n}\r\nexport interface Props {\r\n  diets: Array<diet>;\r\n}\r\n\r\nconst DietList: React.FC<Props> = ({ diets }) => {\r\n  return (\r\n    <>\r\n      {diets\r\n        .map((diet) => {\r\n          let [carbs, fats, proteins, calories] = [0, 0, 0, 0];\r\n          if (diet.meal) {\r\n            diet.meal.forEach((meal) => {\r\n              if (meal.list) {\r\n                meal.list.forEach((item) => {\r\n                  carbs += item.carbs;\r\n                  fats += item.fats;\r\n                  proteins += item.proteins;\r\n                  calories += item.calories;\r\n                });\r\n              }\r\n            });\r\n          }\r\n          return (\r\n            <DietElement\r\n              key={diet.date}\r\n              date={diet.date}\r\n              carbs={carbs}\r\n              fats={fats}\r\n              proteins={proteins}\r\n              calories={calories}\r\n            />\r\n          );\r\n        })\r\n        .reverse()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DietList;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { DietList } from \"./components\";\r\nimport \"./diet.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport { Button, LoadingIndicator } from \"components\";\r\nimport { dayMonthYearWithSeparator } from \"utils/dateFunctions\";\r\ninterface list {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<list>;\r\n}\r\ninterface diet {\r\n  date: string;\r\n  meal: Array<meal>;\r\n}\r\nexport interface Props {}\r\n\r\nconst Diet: React.FC<Props> = () => {\r\n  const history = useHistory();\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [diets, setDiets] = useState<Array<diet>>([]);\r\n  const [flag, setFlag] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const handleAddDiet = () => {\r\n    const today = new Date();\r\n    const todayDatePattern = dayMonthYearWithSeparator(today, \"\", \"yes\");\r\n    let flag = true;\r\n    diets.forEach((item) => {\r\n      if (todayDatePattern === item.date) {\r\n        flag = false;\r\n        setFlag(true);\r\n      }\r\n    });\r\n    if (flag) {\r\n      const saveNewDiet = (userId: string, date: string) => {\r\n        firebase\r\n          .database()\r\n          .ref(\"users/\" + userId + \"/diet/\" + date)\r\n          .set({ date });\r\n      };\r\n\r\n      if (currentUser) {\r\n        saveNewDiet(currentUser.uid, todayDatePattern);\r\n        history.push(`/diet/${todayDatePattern}`);\r\n      }\r\n    }\r\n  };\r\n  const uploadDiet = function (snapshot: any) {\r\n    const dietArray: Array<diet> = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const childData = childSnapshot.val();\r\n      dietArray.push(childData);\r\n    });\r\n    setDiets(dietArray);\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/diet\")\r\n        .orderByChild(\"date\");\r\n      ref.on(\"value\", uploadDiet);\r\n      return () => {\r\n        ref.off(\"value\", uploadDiet);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n  return (\r\n    <main className=\"diet\">\r\n      <div className=\"diet__div\">\r\n        <Button onClick={handleAddDiet}>Dodaj diete</Button>\r\n        {flag && (\r\n          <span className=\"diet__span\">Dzisiejsza dieta jest już dodana</span>\r\n        )}\r\n      </div>\r\n      {isLoaded ? <DietList diets={diets} /> : <LoadingIndicator />}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Diet;\r\n","import React, { useContext } from \"react\";\r\nimport { IoIosRemoveCircleOutline } from \"react-icons/io\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\ninterface mealItem {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n}\r\nexport interface Props {\r\n  meal: meal;\r\n  item: mealItem;\r\n  index: number;\r\n  indexList: number;\r\n  id: string;\r\n}\r\n\r\nconst IngredientItem: React.FC<Props> = ({\r\n  meal,\r\n  item,\r\n  index,\r\n  indexList,\r\n  id,\r\n}) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const handleRemoveMealItem = (index: number) => {\r\n    if (currentUser) {\r\n      const filteredList = meal.list.filter((item, ind) => ind !== index);\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/diet/${id}/meal/${indexList}/list`)\r\n        .set([...filteredList]);\r\n    }\r\n  };\r\n  return (\r\n    <tr>\r\n      <td className=\"meal-table__td\">{item.ingredient}</td>\r\n      <td className=\"meal-table__td\">{item.carbs}</td>\r\n      <td className=\"meal-table__td\">{item.fats}</td>\r\n      <td className=\"meal-table__td\">{item.proteins}</td>\r\n      <td className=\"meal-table__td\">{item.calories}</td>\r\n      <td className=\"meal-table__td\">\r\n        <IoIosRemoveCircleOutline\r\n          onClick={() => handleRemoveMealItem(index)}\r\n          className=\"meal-table__remove\"\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default IngredientItem;\r\n","import React from \"react\";\r\ninterface mealItem {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n}\r\nexport interface Props {\r\n  meal: meal;\r\n  titles: Array<string>;\r\n}\r\n\r\nconst SumNutrientsByType: React.FC<Props> = ({ meal, titles }) => {\r\n  const sumNutrientsByType = [0, 0, 0, 0];\r\n  if (meal.list) {\r\n    meal.list.forEach((item) => {\r\n      sumNutrientsByType[0] += item.carbs;\r\n      sumNutrientsByType[1] += item.fats;\r\n      sumNutrientsByType[2] += item.proteins;\r\n      sumNutrientsByType[3] += item.calories;\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      {sumNutrientsByType.map((item, index) => {\r\n        return (\r\n          <td key={titles[index]} className=\"meal-table__td\">\r\n            {item}\r\n          </td>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SumNutrientsByType;\r\n","import React from \"react\";\r\nimport { AiOutlineCheckCircle } from \"react-icons/ai\";\r\nimport { IoIosRemoveCircleOutline } from \"react-icons/io\";\r\nimport firebase from \"firebase/app\";\r\nimport { CustomHookInput } from \"components\";\r\ninterface mealItem {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n}\r\nexport interface Props {\r\n  setActiveMeal: (active: boolean) => void;\r\n  mealList: Array<mealItem>;\r\n  currentUserId: string;\r\n  id: string;\r\n  indexList: number;\r\n}\r\n\r\nconst AddIngredient: React.FC<Props> = ({\r\n  setActiveMeal,\r\n  mealList,\r\n  currentUserId,\r\n  id,\r\n  indexList,\r\n}) => {\r\n  const [ingredient, setIngredient] = CustomHookInput({ type: \"text\" });\r\n  const [carbs, setCarbs] = CustomHookInput({ type: \"number\" });\r\n  const [fats, setFats] = CustomHookInput({ type: \"number\" });\r\n  const [proteins, setProteins] = CustomHookInput({ type: \"number\" });\r\n  const [calories, setCalories] = CustomHookInput({ type: \"number\" });\r\n  let isNameTaken;\r\n  if (mealList) {\r\n    isNameTaken =\r\n      mealList.findIndex((item) => item.ingredient === String(ingredient)) !==\r\n      -1;\r\n  }\r\n  const maxNameLength =\r\n    typeof ingredient === \"string\" && ingredient.length >= 40;\r\n  const handleSaveMealItem = () => {\r\n    const mealItem = {\r\n      ingredient: String(ingredient),\r\n      carbs: Number(carbs),\r\n      fats: Number(fats),\r\n      proteins: Number(proteins),\r\n      calories: Number(calories),\r\n    };\r\n    if (currentUserId) {\r\n      let mealItems = [];\r\n      if (mealList) {\r\n        mealItems = [...mealList, mealItem];\r\n      } else {\r\n        mealItems = [mealItem];\r\n      }\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUserId}/diet/${id}/meal/${indexList}/list`)\r\n        .set(mealItems);\r\n      setActiveMeal(false);\r\n    }\r\n  };\r\n  return (\r\n    <tr className=\"meal-table__tr\">\r\n      <td className=\"meal-table__td\">\r\n        {setIngredient}\r\n        <span className=\"meal-table__span\">\r\n          {isNameTaken && \"Podana nazwa jest zajęta\"}{\" \"}\r\n          {maxNameLength && \"Maksymalna długość to 40 znaków\"}\r\n        </span>\r\n      </td>\r\n      <td className=\"meal-table__td\">{setCarbs}</td>\r\n      <td className=\"meal-table__td\">{setFats}</td>\r\n      <td className=\"meal-table__td\">{setProteins}</td>\r\n      <td className=\"meal-table__td\">{setCalories}</td>\r\n      <td className=\"meal-table__td\">\r\n        <span>\r\n          {ingredient !== \"\" &&\r\n          carbs !== \"\" &&\r\n          fats !== \"\" &&\r\n          proteins !== \"\" &&\r\n          calories !== \"\" &&\r\n          !isNameTaken &&\r\n          !maxNameLength ? (\r\n            <AiOutlineCheckCircle\r\n              className=\"meal-table__save\"\r\n              onClick={() => handleSaveMealItem()}\r\n            />\r\n          ) : (\r\n            <IoIosRemoveCircleOutline\r\n              onClick={() => setActiveMeal(false)}\r\n              className=\"meal-table__remove\"\r\n            />\r\n          )}\r\n        </span>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default AddIngredient;\r\n","import { Button } from \"components\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport {\r\n  IngredientItem,\r\n  SumNutrientsByType,\r\n  AddIngredient,\r\n} from \"./components\";\r\nimport \"./mealTable.scss\";\r\nimport { ingredientTitles } from \"utils/constants\";\r\ninterface mealItem {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n}\r\nexport interface Props {\r\n  meals: Array<meal>;\r\n  meal: meal;\r\n  indexList: number;\r\n  id: string;\r\n}\r\n\r\nconst MealTable: React.FC<Props> = ({ meals, meal, indexList, id }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [activeMeal, setActiveMeal] = useState(false);\r\n  const titles: Array<string> = ingredientTitles;\r\n\r\n  const handleAddMealElement = () => {\r\n    setActiveMeal(true);\r\n  };\r\n\r\n  const handleRemoveMeal = (mealName: string) => {\r\n    if (currentUser) {\r\n      const filteredMealList = meals.filter(\r\n        (item) => item.mealName !== mealName\r\n      );\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/diet/${id}/meal`)\r\n        .set([...filteredMealList]);\r\n    }\r\n  };\r\n  return (\r\n    <table key={meal.mealName} className=\"meal-table\">\r\n      <thead className=\"meal-table__thead\">\r\n        <tr className=\"meal-table__tr\">\r\n          <th className=\"meal-table__th\">{meal.mealName}</th>\r\n          {titles.map((title) => (\r\n            <th key={title} className=\"meal-table__th\">\r\n              {title}\r\n            </th>\r\n          ))}\r\n\r\n          <th className=\"meal-table__th\">\r\n            <AiFillDelete onClick={() => handleRemoveMeal(meal.mealName)} />\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"meal-table__tbody\">\r\n        {meal.list &&\r\n          meal.list.map((item, index) => {\r\n            return (\r\n              <IngredientItem\r\n                key={item.ingredient}\r\n                meal={meal}\r\n                item={item}\r\n                index={index}\r\n                indexList={indexList}\r\n                id={id}\r\n              />\r\n            );\r\n          })}\r\n        {activeMeal && currentUser && (\r\n          <AddIngredient\r\n            setActiveMeal={setActiveMeal}\r\n            mealList={meal.list}\r\n            currentUserId={currentUser.uid}\r\n            id={id}\r\n            indexList={indexList}\r\n          />\r\n        )}\r\n        <tr className=\"meal-table__tr\">\r\n          <td className=\"meal-table__td\">\r\n            <Button onClick={handleAddMealElement}>Dodaj</Button>\r\n          </td>\r\n          <SumNutrientsByType meal={meal} titles={titles} />\r\n          <td className=\"meal-table__td\"></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default MealTable;\r\n","import React from \"react\";\r\n\r\nimport { MealTable } from \"./components\";\r\ninterface mealItem {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n}\r\n\r\nexport interface Props {\r\n  meals: Array<meal>;\r\n  id: string;\r\n}\r\nconst MealList: React.FC<Props> = ({ meals, id }) => {\r\n  return (\r\n    <>\r\n      {meals &&\r\n        meals.map((meal, index) => {\r\n          return (\r\n            <MealTable\r\n              key={meal.mealName}\r\n              meals={meals}\r\n              meal={meal}\r\n              indexList={index}\r\n              id={id}\r\n            />\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MealList;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { AiFillDelete, AiOutlineCheckCircle } from \"react-icons/ai\";\r\nimport firebase from \"firebase/app\";\r\nimport { ingredientTitles } from \"utils/constants\";\r\n\r\ninterface mealItem {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n}\r\nexport interface Props {\r\n  meals: Array<meal>;\r\n  setActiveMeal: (arg1: boolean) => void;\r\n  currentUserId: string;\r\n  id: string;\r\n}\r\n\r\nconst AddMeal: React.FC<Props> = ({\r\n  meals,\r\n  setActiveMeal,\r\n  currentUserId,\r\n  id,\r\n}) => {\r\n  const inputNameRef = useRef<HTMLInputElement>(null);\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const titles: Array<string> = ingredientTitles;\r\n  const maxNameLength = inputName.length >= 20;\r\n  const handleAddMeal = () => {\r\n    if (currentUserId) {\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUserId}/diet/${id}/meal`)\r\n        .set([...meals, { mealName: inputName }]);\r\n      setActiveMeal(false);\r\n    }\r\n    setActiveMeal(false);\r\n  };\r\n  useEffect(() => {\r\n    if (inputNameRef.current) {\r\n      inputNameRef.current.focus();\r\n    }\r\n  }, []);\r\n  return (\r\n    <table key=\"add-meal\" className=\"meal-table\">\r\n      <thead className=\"meal-table__thead\">\r\n        <tr className=\"meal-table__tr\">\r\n          <th className=\"meal-table__th\">\r\n            <input\r\n              type=\"text\"\r\n              value={inputName}\r\n              placeholder=\"Nazwa\"\r\n              onChange={(e) => setInputName(e.target.value)}\r\n              ref={inputNameRef}\r\n            />\r\n            <span className=\"meal-table__error\">\r\n              {meals.findIndex((meal) => meal.mealName === inputName) !== -1 &&\r\n                \"Nazwa zajęta\"}{\" \"}\r\n              {maxNameLength && \"Maksymalna długość to 20 znaków\"}\r\n            </span>\r\n          </th>\r\n          {titles.map((title) => (\r\n            <th key={title} className=\"meal-table__th\">\r\n              {title}\r\n            </th>\r\n          ))}\r\n\r\n          <th className=\"meal-table__th\">\r\n            {meals &&\r\n            meals.findIndex((meal) => meal.mealName === inputName) === -1 &&\r\n            inputName !== \"\" &&\r\n            !maxNameLength ? (\r\n              <AiOutlineCheckCircle\r\n                className=\"meal-table__save-meal\"\r\n                onClick={() => handleAddMeal()}\r\n              />\r\n            ) : (\r\n              <AiFillDelete onClick={() => setActiveMeal(false)} />\r\n            )}\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"meal-table__tbody\"></tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default AddMeal;\r\n","import React from \"react\";\r\nexport interface Props {\r\n  sumNutrientsByType: Array<number>;\r\n  titles: Array<string>;\r\n}\r\n\r\nconst TrLine: React.FC<Props> = ({ sumNutrientsByType, titles }) => {\r\n  return (\r\n    <tr className=\"meal-summary__tr\">\r\n      <td className=\"meal-summary__td\">Razem</td>\r\n      {sumNutrientsByType.map((type, index) => {\r\n        return (\r\n          <td key={titles[index]} className=\"meal-summary__td\">\r\n            {type}\r\n          </td>\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TrLine;\r\n","import React from \"react\";\r\nexport interface Props {\r\n  titles: Array<string>;\r\n  diet: Array<number>;\r\n}\r\n\r\nconst DailyPlan: React.FC<Props> = ({ titles, diet }) => {\r\n  return (\r\n    <tr className=\"meal-summary__tr\">\r\n      <td className=\"meal-summary__td\">Dzienny plan</td>\r\n      {titles.map((title, index) => (\r\n        <td key={title} className=\"meal-summary__td\">\r\n          {diet[index] === undefined ? \"-\" : diet[index]}\r\n        </td>\r\n      ))}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default DailyPlan;\r\n","import React from \"react\";\r\nexport interface Props {\r\n  sumNutrientsByType: Array<number>;\r\n  diet: Array<number>;\r\n  titles: Array<string>;\r\n}\r\n\r\nconst MissingCalories: React.FC<Props> = ({\r\n  sumNutrientsByType,\r\n  diet,\r\n  titles,\r\n}) => {\r\n  return (\r\n    <>\r\n      <tr className=\"meal-summary__tr\">\r\n        <td className=\"meal-summary__td\">Brakujące</td>\r\n        {sumNutrientsByType.map((type, index) => {\r\n          const distinction =\r\n            diet[index] === undefined ? \"-\" : type - diet[index];\r\n          if (distinction >= 0) {\r\n            return (\r\n              <td\r\n                key={titles[index]}\r\n                className=\"meal-summary__td meal-summary__above-zero\"\r\n              >\r\n                {distinction}\r\n              </td>\r\n            );\r\n          } else if (distinction === \"-\") {\r\n            return (\r\n              <td key={titles[index]} className=\"meal-summary__td\">\r\n                {distinction}\r\n              </td>\r\n            );\r\n          } else {\r\n            return (\r\n              <td\r\n                key={titles[index]}\r\n                className=\"meal-summary__td meal-summary__below-zero\"\r\n              >\r\n                {distinction}\r\n              </td>\r\n            );\r\n          }\r\n        })}\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MissingCalories;\r\n","import React from \"react\";\r\nexport interface Props {\r\n  titles: Array<string>;\r\n}\r\n\r\nconst Tfoot: React.FC<Props> = ({ titles }) => {\r\n  return (\r\n    <tfoot className=\"meal-summary__tfoot\">\r\n      <tr className=\"meal-summary__tr\">\r\n        <th className=\"meal-summary__th\"></th>\r\n        {titles.map((title) => (\r\n          <th key={title} className=\"meal-summary__th\">\r\n            {title}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </tfoot>\r\n  );\r\n};\r\n\r\nexport default Tfoot;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./mealSummary.scss\";\r\nimport firebase from \"firebase/app\";\r\nimport { ingredientTitles } from \"utils/constants\";\r\nimport {\r\n  SumOfEatenIngredients,\r\n  DailyPlan,\r\n  MissingCalories,\r\n  Tfoot,\r\n} from \"./components\";\r\ninterface mealItem {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n}\r\nexport interface Props {\r\n  meals: Array<meal>;\r\n  currentUserId: string;\r\n}\r\nconst MealSummary: React.FC<Props> = ({ meals, currentUserId }) => {\r\n  const sumNutrientsByType: Array<number> = [0, 0, 0, 0];\r\n  const titles: Array<string> = ingredientTitles;\r\n  const [diet, setDiet] = useState<Array<number>>([0, 0, 0, 0]);\r\n  const [flag, setFlag] = useState(false);\r\n  meals.forEach((meal) => {\r\n    if (meal.list) {\r\n      meal.list.forEach((item) => {\r\n        sumNutrientsByType[0] += item.carbs;\r\n        sumNutrientsByType[1] += item.fats;\r\n        sumNutrientsByType[2] += item.proteins;\r\n        sumNutrientsByType[3] += item.calories;\r\n      });\r\n    }\r\n  });\r\n  const uploadDiet = (snapshot: any) => {\r\n    if (snapshot.val()) {\r\n      const { carbs, fats, proteins, calories } = snapshot.val();\r\n      setDiet([carbs, fats, proteins, calories]);\r\n      setFlag(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (currentUserId) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUserId + \"/settings/diet\");\r\n      ref.on(\"value\", uploadDiet);\r\n      return () => {\r\n        ref.off(\"value\", uploadDiet);\r\n      };\r\n    }\r\n  }, [currentUserId]);\r\n  return (\r\n    <>\r\n      {flag && (\r\n        <table className=\"meal-summary\">\r\n          <tbody className=\"meal-summary__tbody\">\r\n            <SumOfEatenIngredients\r\n              sumNutrientsByType={sumNutrientsByType}\r\n              titles={titles}\r\n            />\r\n            <DailyPlan diet={diet} titles={titles} />\r\n            <MissingCalories\r\n              sumNutrientsByType={sumNutrientsByType}\r\n              diet={diet}\r\n              titles={titles}\r\n            />\r\n          </tbody>\r\n          <Tfoot titles={titles} />\r\n        </table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MealSummary;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport \"./dietDay.scss\";\r\nimport { GoBackDelete, Button } from \"components\";\r\nimport { MealList, AddMeal, MealSummary } from \"./components\";\r\n\r\ninterface params {\r\n  id: string;\r\n}\r\ninterface mealItem {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n}\r\ninterface meal {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n}\r\nexport interface Props {}\r\nconst DietDay: React.FC<Props> = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const params: params = useParams();\r\n  const history = useHistory();\r\n  const [meals, setMeals] = useState<Array<meal>>([]);\r\n\r\n  const uploadDietDay = function (snapshot: any) {\r\n    const dietDayArray: Array<meal> = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const childData = childSnapshot.val();\r\n      dietDayArray.push(childData);\r\n    });\r\n    setMeals(dietDayArray);\r\n  };\r\n  const [activeMeal, setActiveMeal] = useState(false);\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/diet/\" + params.id + \"/meal\");\r\n      ref.on(\"value\", uploadDietDay);\r\n      return () => {\r\n        ref.off(\"value\", uploadDietDay);\r\n      };\r\n    }\r\n  }, [currentUser, params.id]);\r\n\r\n  const handleRemoveDietDay = () => {\r\n    if (currentUser) {\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/diet/${params.id}`)\r\n        .remove();\r\n      history.goBack();\r\n    }\r\n  };\r\n  return (\r\n    <main className=\"diet-day\">\r\n      <GoBackDelete handleEdit={handleRemoveDietDay} editTitle=\"Usuń diete\" />\r\n      <section className=\"diet-day__section\">\r\n        <Button onClick={() => setActiveMeal(true)}>Dodaj posiłek</Button>\r\n        <MealList meals={meals} id={params.id} />\r\n        {activeMeal && currentUser && (\r\n          <AddMeal\r\n            meals={meals}\r\n            setActiveMeal={setActiveMeal}\r\n            currentUserId={currentUser.uid}\r\n            id={params.id}\r\n          />\r\n        )}\r\n        {meals.length !== 0 && currentUser && (\r\n          <MealSummary meals={meals} currentUserId={currentUser.uid} />\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default DietDay;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FormTemplate, LoadingIndicator } from \"components\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\nimport firebase from \"firebase/app\";\r\nimport \"./user.scss\";\r\ninterface Fields {\r\n  name: string;\r\n  validate: (value: any) => void;\r\n  initialValue: string;\r\n  text: string;\r\n  placeholder: string;\r\n}\r\ninterface Button {\r\n  text: string;\r\n  type: string;\r\n}\r\ninterface FormFields {\r\n  fields: Fields[];\r\n  button: Button;\r\n}\r\ninterface user {\r\n  name: string;\r\n  surname: string;\r\n}\r\ninterface currentUser {\r\n  uid: string;\r\n}\r\nexport interface Props {\r\n  currentUser: currentUser;\r\n}\r\n\r\nconst User: React.FC<Props> = ({ currentUser }) => {\r\n  const [settings, setSettings] = useState<FormFields>();\r\n  const uploadUserInfo = function (snapshot: any) {\r\n    setSettings({\r\n      fields: [\r\n        {\r\n          name: \"name\",\r\n          validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n          initialValue: snapshot.child(\"name\").val(),\r\n          text: \"Imię\",\r\n          placeholder: \"Imię\",\r\n        },\r\n        {\r\n          name: \"surname\",\r\n          validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n          initialValue: snapshot.child(\"surname\").val(),\r\n          text: \"Nazwisko\",\r\n          placeholder: \"Nazwisko\",\r\n        },\r\n      ],\r\n      button: {\r\n        type: \"submit\",\r\n        text: \"Aktualizuj\",\r\n      },\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/settings/user\");\r\n      ref.once(\"value\", uploadUserInfo);\r\n      return () => {\r\n        ref.off(\"value\", uploadUserInfo);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n  const handleSubmit = (values: user) => {\r\n    if (currentUser) {\r\n      firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/settings/user\")\r\n        .set(values);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"user\">\r\n      <h1 className=\"user__h1\">Dane</h1>\r\n      {settings ? (\r\n        <FormTemplate formFields={settings} handleSubmit={handleSubmit} />\r\n      ) : (\r\n        <LoadingIndicator />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FormTemplate, LoadingIndicator } from \"components\";\r\nimport firebase from \"firebase/app\";\r\nimport \"./diet.scss\";\r\ninterface Fields {\r\n  name: string;\r\n  initialValue: string;\r\n  text: string;\r\n  placeholder: string;\r\n  type: string;\r\n  step: string;\r\n  min: string;\r\n}\r\ninterface Button {\r\n  text: string;\r\n  type: string;\r\n}\r\ninterface FormFields {\r\n  fields: Fields[];\r\n  button: Button;\r\n}\r\ninterface currentUser {\r\n  uid: string;\r\n}\r\nexport interface Props {\r\n  currentUser: currentUser;\r\n}\r\nconst Diet: React.FC<Props> = ({ currentUser }) => {\r\n  const [diet, setDiet] = useState<FormFields>();\r\n  const uploadDiet = function (snapshot: any) {\r\n    setDiet({\r\n      fields: [\r\n        {\r\n          name: \"carbs\",\r\n          initialValue: snapshot.child(\"carbs\").val(),\r\n          text: \"Węglowodany\",\r\n          placeholder: \"Węglowodany\",\r\n          type: \"number\",\r\n          step: \"1\",\r\n          min: \"0\",\r\n        },\r\n        {\r\n          name: \"fats\",\r\n          initialValue: snapshot.child(\"fats\").val(),\r\n          text: \"Tłuszcze\",\r\n          placeholder: \"Tłuszcze\",\r\n          type: \"number\",\r\n          step: \"1\",\r\n          min: \"0\",\r\n        },\r\n        {\r\n          name: \"proteins\",\r\n          initialValue: snapshot.child(\"proteins\").val(),\r\n          text: \"Białko\",\r\n          placeholder: \"Białko\",\r\n          type: \"number\",\r\n          step: \"1\",\r\n          min: \"0\",\r\n        },\r\n        {\r\n          name: \"calories\",\r\n          initialValue: snapshot.child(\"calories\").val(),\r\n          text: \"Kalorie\",\r\n          placeholder: \"Kalorie\",\r\n          type: \"number\",\r\n          step: \"1\",\r\n          min: \"0\",\r\n        },\r\n      ],\r\n      button: {\r\n        type: \"submit\",\r\n        text: \"Aktualizuj\",\r\n      },\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/settings/diet\");\r\n      ref.once(\"value\", uploadDiet);\r\n      return () => {\r\n        ref.off(\"value\", uploadDiet);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n  const handleSubmit = (values: any) => {\r\n    for (var propName in values) {\r\n      if (values[propName] === null || values[propName] === undefined) {\r\n        delete values[propName];\r\n      } else {\r\n        values[propName] = Number(values[propName]);\r\n      }\r\n    }\r\n    if (currentUser) {\r\n      firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/settings/diet\")\r\n        .set(values);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"diet\">\r\n      <h1 className=\"diet__h2\">Dieta</h1>\r\n      {diet ? (\r\n        <FormTemplate formFields={diet} handleSubmit={handleSubmit} />\r\n      ) : (\r\n        <LoadingIndicator />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Diet;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport { User, Diet } from \"./components\";\r\nimport \"./settings.scss\";\r\nexport interface Props {}\r\nconst Settings: React.FC<Props> = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n    <main className=\"settings\">\r\n      {currentUser && (\r\n        <>\r\n          <User currentUser={currentUser} />\r\n          <Diet currentUser={currentUser} />\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport \"./notFound.scss\";\r\nimport { Button } from \"components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport interface Props {}\r\n\r\nconst NotFound: React.FC<Props> = () => {\r\n  const history = useHistory();\r\n  const handleBackToHomePage = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <main className=\"not-found\">\r\n      <div className=\"not-found__div\">\r\n        <h1 className=\"not-found__p\">404 - strona nie istnieje</h1>\r\n        <Button onClick={handleBackToHomePage}>\r\n          Przejdź do strony głównej\r\n        </Button>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport \"reset-css\";\nimport \"./App.scss\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport {\n  Login,\n  Root,\n  Trainings,\n  Training,\n  Exercise,\n  Statistics,\n  Measurement,\n  Diet,\n  DietDay,\n  Settings,\n  NotFound,\n} from \"pages\";\n\nimport {\n  LoadingIndicator,\n  Header,\n  AuthProvider,\n  PrivateRoute,\n} from \"components\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { CookiesProvider } from \"react-cookie\";\nconst App = () => {\n  return (\n    <CookiesProvider>\n      <React.Suspense fallback={<LoadingIndicator />}>\n        <AuthProvider>\n          <Router basename={process.env.PUBLIC_URL}>\n            <Header />\n            <Switch>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <PrivateRoute\n                path=\"/trainings\"\n                component={Trainings}\n                exact={true}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/trainings/:id\"\n                component={Training}\n                exact={true}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/trainings/:id/:id\"\n                component={Exercise}\n                exact={true}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/statistics\"\n                exact={true}\n                component={Statistics}\n              ></PrivateRoute>\n              {/* <PrivateRoute\n                path=\"/measurement\"\n                exact={false}\n                component={Measurement}\n              ></PrivateRoute> */}\n              <PrivateRoute\n                path=\"/diet\"\n                exact={true}\n                component={Diet}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/diet/:id\"\n                exact={true}\n                component={DietDay}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/settings\"\n                exact={true}\n                component={Settings}\n              ></PrivateRoute>\n              <Route path=\"/\" exact={true}>\n                <Root />\n              </Route>\n              <Route component={NotFound}></Route>\n            </Switch>\n          </Router>\n        </AuthProvider>\n      </React.Suspense>\n    </CookiesProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}