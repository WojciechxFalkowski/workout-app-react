{"version":3,"sources":["pages/Login/Login.tsx","components/LoadingIndicator/LoadingIndicator.tsx","components/Hamburger/Hamburger.tsx","components/Header/components/Navigation.tsx","components/Header/Header.tsx","components/FormTemplate/FormTemplate.tsx","components/Button/Button.tsx","components/Arrow/Arrow.tsx","utils/validation.ts","components/EditTitle/EditTitle.tsx","components/GoBackDelete/GoBackDelete.tsx","components/Chart/Chart.tsx","components/PrivateRoute/PrivateRoute.tsx","components/AuthProvider/AuthProvider.tsx","utils/constants/constant.ts","pages/Root/components/LoggedHome/components/Greetings/Greetings.tsx","pages/Root/components/LoggedHome/components/MyProfile/components/MyProfileName/MyProfileName.tsx","pages/Root/components/LoggedHome/components/MyProfile/components/MyProfileRank/MyProfileRank.tsx","pages/Root/components/LoggedHome/components/MyProfile/components/Ranks/Ranks.tsx","pages/Root/components/LoggedHome/components/MyProfile/MyProfile.tsx","pages/Root/components/LoggedHome/components/Activities/components/EatenCalories/EatenCalories.tsx","utils/dateFunctions/index.ts","pages/Root/components/LoggedHome/components/Activities/components/TodayTrainings/TodayTrainings.tsx","pages/Root/components/LoggedHome/components/Activities/Activities.tsx","pages/Root/components/LoggedHome/components/TableResults/TableResults.tsx","pages/Root/components/LoggedHome/LoggedHome.tsx","pages/Root/components/Home/components/BackgroundImage/BackgroundImage.tsx","pages/Root/components/Home/components/Features/components/Feature/Feature.tsx","pages/Root/components/Home/components/Features/Features.tsx","pages/Root/components/Home/components/Feedback/Feedback.tsx","pages/Root/components/Home/components/SendMessage/SendMessage.tsx","pages/Root/components/Home/components/Footer/Footer.tsx","pages/Root/components/Home/Home.tsx","pages/Root/Root.tsx","pages/Trainings/components/TrainingsList/components/ListItems/ListItems.tsx","pages/Trainings/components/TrainingsList/TrainingsList.tsx","pages/Trainings/components/AddTraining/formFields.ts","pages/Trainings/components/AddTraining/AddTraining.tsx","pages/Trainings/Trainings.tsx","fire.jsx","pages/Training/components/TrainingExerciseList/TrainingExerciseList.tsx","pages/Training/components/DragAndDropList/DragAndDropList.tsx","pages/Training/components/TrainingItem/TrainingItem.tsx","pages/Training/Training.tsx","utils/generateRandomString/index.js","pages/Exercise/components/FormInput/components/Line/Line.tsx","pages/Exercise/components/FormInput/components/RemoveSeries/RemoveSeries.tsx","pages/Exercise/components/FormInput/components/SeriesNumber/SeriesNumber.tsx","pages/Exercise/components/FormInput/FormInput.tsx","pages/Exercise/Exercise.tsx","pages/Statistics/components/Charts/components/TrainingsPerMonth/TrainingsPerMonth.tsx","pages/Statistics/components/Charts/components/TrainingsPerTrainingName/TrainingsPerTrainingName.tsx","pages/Statistics/components/Charts/components/WeightRaisedPerTrainingName/WeightRaisedPerTrainingName.tsx","pages/Statistics/components/Charts/Charts.tsx","pages/Statistics/Statistics.tsx","utils/customHooks/Input/Input.tsx","pages/Diet/components/DietList/components/DietElement/components/DietNutrient/DietNutrient.tsx","pages/Diet/components/DietList/components/DietElement/DietElement.tsx","pages/Diet/components/DietList/DietList.tsx","pages/Diet/Diet.tsx","pages/DietDay/components/MealList/components/MealTable/components/IngredientItem/IngredientItem.tsx","pages/DietDay/components/MealList/components/MealTable/components/SumNutrientsByType/SumNutrientsByType.tsx","pages/DietDay/components/MealList/components/MealTable/components/AddIngredient/AddIngredient.tsx","pages/DietDay/components/MealList/components/MealTable/MealTable.tsx","pages/DietDay/components/MealList/MealList.tsx","pages/DietDay/components/AddMeal/AddMeal.tsx","pages/DietDay/components/MealSummary/components/SumOfEatenIngredients/SumOfEatenIngredients.tsx","pages/DietDay/components/MealSummary/components/DailyPlan/DailyPlan.tsx","pages/DietDay/components/MealSummary/components/MissingCalories/MissingCalories.tsx","pages/DietDay/components/MealSummary/components/Tfoot/Tfoot.tsx","pages/DietDay/components/MealSummary/MealSummary.tsx","pages/DietDay/DietDay.tsx","pages/Settings/components/User/User.tsx","pages/Settings/components/Diet/Diet.tsx","pages/Settings/components/DeleteAccount/DeleteAccount.tsx","pages/Settings/Settings.tsx","pages/NotFound/NotFound.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LoginPage","useState","isSignedIn","setIsSignedIn","uiConfig","signInFlow","signInOptions","provider","firebase","auth","GoogleAuthProvider","PROVIDER_ID","fullLabel","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","className","to","firebaseAuth","LoadingIndicator","Hamburger","onClick","hamburgerActive","ref","Navigation","handleHamburger","currentUser","useContext","AuthContext","activeClassName","signOut","then","error","href","Header","header","useRef","exact","current","classList","toggle","remove","FormTemplate","formFields","handleSubmit","fields","button","onSubmit","props","map","formField","key","name","validate","defaultValue","initialValue","parse","input","meta","htmlFor","placeholder","replace","toLowerCase","text","component","id","type","step","undefined","min","max","touched","Button","children","Arrow","history","useHistory","goBack","required","value","maxValue","isNaN","length","composeValidators","validators","reduce","validator","EditTitle","labelText","editDate","refUrl","isActiveEditing","setIsActiveEditing","workoutName","setWorkoutName","editTimeDate","setEditTimeDate","editName","setEditName","isLoaded","setIsLoaded","unshift","handleClickIcon","loadTrainingName","snapshot","val","date","useEffect","newRef","database","once","off","values","update","saveEditedTraining","GoBackDelete","handleEdit","editTitle","Chart","specification","canvasRef","ctx","getContext","chart","ChartJS","destroy","PrivateRoute","RouteComponent","rest","render","routeProps","createContext","AuthProvider","setCurrentUser","pending","setPending","onAuthStateChanged","user","child","uid","displayName","split","surname","slice","join","userId","email","set","writeUserData","Provider","ingredientTitles","namesOfDaysOfWeekArray","namesOfTheMonths","monthsNames","trainingList","Greetings","Date","monthOfYear","today","getDay","getDate","getMonth","getFullYear","MyProfileName","toUpperCase","MyProfileRank","handleFlipCard","numberOfTrainings","setNumberOfTrainings","uploadTrainingsAmount","numChildren","trainingName","Ranks","trainingItem","MyProfile","refFlipper","EatenCalories","ingredients","carbs","fats","proteins","calories","dayMonthYearWithSeparator","dateToModifie","separator","reverse","dayOfMonth","month","year","modifiedDate","hoursMinutesWithSeparator","hours","getHours","minutes","getMinutes","TodayTrainings","trainings","setTrainings","uploadTrainings","trainingArray","forEach","childSnapshot","childData","push","orderByChild","startAt","on","training","Activities","TableResults","statistics","setStatistics","handleStatistics","usersStatistics","sort","a","b","item","index","Home","setUser","uploadUser","BackgroundImage","Feature","icon","title","Features","Feedback","opinions","setOpinions","numberOfOpinions","indexOfActiveFeedback","setIndexOfActiveFeedback","indexActiveFeedback","setInterval","prevState","clearInterval","handleActiveFeedback","direction","uploadOpinions","opinionArray","limitToLast","SendMessage","useCookies","isSendForm","setIsSendForm","isSameSession","setIsSameSession","sendForm","newDate","opinion","expires","Footer","Root","LoggedHome","Table","exercisesCount","exercises","Object","keys","handleTraining","TrainingsList","ListItems","datePattern","AddTraining","saveNewTraining","Trainings","fire","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","TrainingExerciseList","exerciseName","exerciseKey","pathname","state","handleTrainingExercise","series","strinNumber","inx","seriesString","DragAndDropList","exercise","content","listItems","setListItems","onDragEnd","result","destination","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","droppableId","provided","droppableProps","innerRef","draggableId","draggableProps","dragHandleProps","TrainingItem","Training","match","params","setExercises","loadTrainings","exerciseArray","generateRandomString","Math","random","toString","substr","Line","setFormFields","RemoveSeries","handleRemoveSeries","SeriesNumber","FormInput","paramId","number","newArray","field","url","toast","Exercise","uploadExercise","TrainingsPerMonth","weekNames","trainingsPerMonth","data","labels","datasets","minBarLength","backgroundColor","context","dataIndex","options","display","legend","position","scales","yAxes","ticks","lineHeight","beginAtZero","callback","Number","isInteger","TrainingsPerTrainingName","trainingsPerTrainingName","amount","findIndex","borderColor","hoverBackgroundColor","hoverBorderWidth","WeightRaisedPerTrainingName","includes","selectChange","setSelectChange","filter","trainingsArray","entries","seriesArray","i","formatedDate","fill","onChange","e","target","Charts","Statistics","Input","setValue","DietNutrient","nutrients","DietElement","titles","stringDate","slicedDayMonthYearWithSeparator","handleDietDay","DietList","diets","diet","meal","Diet","setDiets","flag","setFlag","uploadDiet","dietArray","todayDatePattern","IngredientItem","indexList","ingredient","filteredList","ind","handleRemoveMealItem","SumNutrientsByType","sumNutrientsByType","AddIngredient","isNameTaken","setActiveMeal","mealList","currentUserId","setIngredient","setCarbs","setFats","setProteins","setCalories","String","maxNameLength","mealItem","mealItems","handleSaveMealItem","MealTable","meals","activeMeal","mealName","filteredMealList","handleRemoveMeal","MealList","AddMeal","inputNameRef","inputName","setInputName","focus","TrLine","DailyPlan","MissingCalories","distinction","Tfoot","MealSummary","setDiet","SumOfEatenIngredients","DietDay","useParams","setMeals","uploadDietDay","dietDayArray","User","settings","setSettings","uploadUserInfo","propName","DeleteAccount","isActiveForm","setIsActiveForm","isErrorMessage","setIsErrorMessage","password","setPassword","credential","reauthenticateWithCredential","delete","catch","Settings","NotFound","App","CookiesProvider","Suspense","fallback","basename","path","Login","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"yzCAmDeA,G,MArCG,WAAO,IAAD,EACcC,oBAAS,GADvB,mBACfC,EADe,KACHC,EADG,KAEhBC,EAAiB,CACrBC,WAAY,QACZC,cAAe,CACb,CACEC,SAAUC,IAASC,KAAKC,mBAAmBC,YAC3CC,UAAW,mCAEb,CACEL,SAAUC,IAASC,KAAKI,kBAAkBF,YAC1CC,UAAW,mCAGfE,UAAW,CACTC,4BAA6B,WAE3B,OADAZ,GAAc,IACP,KAIb,OACE,0BAAMa,UAAU,SACd,yBAAKA,UAAU,cACZd,EACC,kBAAC,IAAD,CAAUe,GAAG,MAEb,kBAAC,IAAD,CACEb,SAAUA,EACVc,aAAcV,IAASC,aCjCpBU,G,MARU,WACvB,OACE,yBAAKH,UAAU,QACb,yBAAKA,UAAU,iBCeNI,G,MAbG,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,gBAC5B,OACE,4BAAQN,UAAU,YAAYK,QAASA,GACrC,yBAAKL,UAAU,kBACb,yBAAKO,IAAKD,EAAiBN,UAAU,0BACnC,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,sB,eC2FVQ,G,MA/FI,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,gBACZC,EAAgBC,qBAAWC,GAA3BF,YAYR,OACE,yBAAKV,UAAU,cACb,wBAAIA,UAAU,kBACXU,EACC,oCACE,wBAAIV,UAAU,kBACZ,kBAAC,IAAD,CACEa,gBAAgB,qBAChBR,QAASI,EACTR,GAAG,aACHD,UAAU,iBAJZ,aASF,wBAAIA,UAAU,kBACZ,kBAAC,IAAD,CACEa,gBAAgB,qBAChBR,QAASI,EACTR,GAAG,cACHD,UAAU,iBAJZ,eAmBF,wBAAIA,UAAU,kBACZ,kBAAC,IAAD,CACEa,gBAAgB,qBAChBR,QAASI,EACTR,GAAG,QACHD,UAAU,iBAJZ,UASF,wBAAIA,UAAU,kBACZ,kBAAC,IAAD,CACEa,gBAAgB,qBAChBR,QAASI,EACTR,GAAG,YACHD,UAAU,iBAJZ,eASF,wBAAIA,UAAU,qCACZ,uBACEK,QAnEQ,WACpBI,IACAjB,IACGC,OACAqB,UACAC,MACC,eACA,SAAUC,QA6DFC,KAAK,qBACLjB,UAAU,iBAHZ,aAUJ,wBAAIA,UAAU,oCACZ,kBAAC,IAAD,CACEa,gBAAgB,qBAChBR,QAASI,EACTT,UAAU,gBACVC,GAAG,UAJL,gCChDGiB,EApCA,WACb,IAAMC,EAASC,iBAAoB,MAC7Bd,EAAkBc,iBAAuB,MAU/C,OACE,oCACE,4BAAQb,IAAKY,EAAQnB,UAAU,UAC7B,wBAAIA,UAAU,gBACZ,kBAAC,IAAD,CACEC,GAAG,IACHoB,OAAK,EACLR,gBAAgB,qBAChBb,UAAU,gBAJZ,kBASF,yBAAKA,UAAU,qBACb,kBAAC,EAAD,CAAWK,QAtBH,WAAO,IAAD,IACpB,UAAAC,EAAgBgB,eAAhB,SAAyBC,UAAUC,OAAO,uBAC1C,UAAAL,EAAOG,eAAP,SAAgBC,UAAUC,OAAO,mBAoBElB,gBAAiBA,KAEhD,yBAAKN,UAAU,iBACb,kBAAC,EAAD,CAAYS,gBArBI,WAAO,IAAD,IAC5B,UAAAH,EAAgBgB,eAAhB,SAAyBC,UAAUE,OAAO,uBAC1C,UAAAN,EAAOG,eAAP,SAAgBC,UAAUE,OAAO,yB,QC6EtBC,G,MA/DM,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,aAC1BC,EAAmBF,EAAnBE,OAAQC,EAAWH,EAAXG,OAChB,OACE,kBAAC,IAAD,CAAMC,SAAUH,IACb,SAACI,GAAD,OACC,0BAAMD,SAAUC,EAAMJ,aAAc5B,UAAU,QAC3C6B,EAAOI,KAAI,SAACC,GACX,OACE,kBAAC,IAAD,CACEC,IAAKD,EAAUE,KACfA,KAAMF,EAAUE,KAChBC,SAAUH,EAAUG,SACpBC,aAAcJ,EAAUK,aACxBC,MAAON,EAAUM,QAEhB,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,yBAAK1C,UAAU,iBACb,2BACEA,UAAU,cACV2C,QAAST,EAAUU,YAChBC,QAAQ,MAAO,IACfC,eAEFZ,EAAUa,MAEY,aAAxBb,EAAUc,UACT,8CACMP,EADN,CAEEzC,UAAU,iBACV4C,YAAa,UAGf,2CACMH,EADN,CAEEQ,GAAIf,EAAUU,YACXC,QAAQ,MAAO,IACfC,cACH9C,UAAU,cACVkD,KAAMhB,EAAUgB,KAChBC,KAAMjB,EAAUiB,KAAOjB,EAAUiB,UAAOC,EACxCC,IAAKnB,EAAUmB,IAAMnB,EAAUmB,SAAMD,EACrCE,IAAKpB,EAAUoB,IAAMpB,EAAUoB,SAAMF,EACrCR,YAAaV,EAAUU,eAG1BF,EAAK1B,OAAS0B,EAAKa,SAClB,0BAAMvD,UAAU,cAAc0C,EAAK1B,cAQ/C,4BAAQkC,KAAMpB,EAAOoB,KAAMlD,UAAU,gBAClC8B,EAAOiB,YCrELS,G,MARA,SAAC,GAAkC,IAAhCnD,EAA+B,EAA/BA,QAASoD,EAAsB,EAAtBA,SACzB,OACE,4BAAQpD,QAASA,EAASL,UAAU,UACjCyD,K,gBCUQC,EAdD,WACZ,IAAMC,EAAUC,cAIhB,OACE,yBAAK5D,UAAU,SACb,kBAAC,EAAD,CAAQK,QALa,WACvBsD,EAAQE,WAKJ,kBAAC,IAAD,S,QCdKC,EAAW,SAACf,GAAD,OAAkB,SACxCgB,GADwC,OAEhBA,OAAQX,EAAYL,IAUjCiB,EAAW,SAACV,EAAaP,GAAd,OAA+B,SAACgB,GAAD,OACrDE,MAAMF,EAAMG,SAAWH,EAAMG,QAAUZ,OAAMF,EAAYL,IAM9CoB,EAAoB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAwB,SAACL,GAAD,OACvDK,EAAWC,QACT,SAACrD,EAAYsD,GAAb,OAAgCtD,GAASsD,EAAUP,UACnDX,KCmFWmB,G,MA1FG,SAAC,GAML,IALZC,EAKW,EALXA,UACAC,EAIW,EAJXA,SACAC,EAGW,EAHXA,OACAC,EAEW,EAFXA,gBACAC,EACW,EADXA,mBACW,EAC2B3F,qBAD3B,mBACJ4F,EADI,KACSC,EADT,OAE6B7F,qBAF7B,mBAEJ8F,EAFI,KAEUC,EAFV,OAGqB/F,oBAAS,GAH9B,mBAGJgG,EAHI,KAGMC,EAHN,OAIqBjG,oBAAS,GAJ9B,mBAIJkG,EAJI,KAIMC,EAJN,KAKLzD,EAAa,CACjBE,OAAQ,CACN,CACEO,KAAM,cACNC,SAAU8B,EAAkBL,EAAS,2BACrCvB,aAAcsC,EACd9B,KAAMyB,EACN5B,YAAa,iBACbM,KAAM,SAGVpB,OAAQ,CACNiB,KAAM,0BAGN0B,GACF9C,EAAWE,OAAOwD,QAAQ,CACxBjD,KAAM,OACNC,SAAU8B,EAAkBL,EAAS,2BACrCvB,aAAcwC,EACdhC,KAAMyB,EACN5B,YAAa,gBACbM,KAAM,mBAGV,IAAMoC,EAAkB,WACtBJ,GAAaD,GACbL,GAAoBD,IAkBhBY,EAAmB,SAAUC,GACjCV,EAAeU,EAASC,MAAMZ,aAC9BG,EAAgBQ,EAASC,MAAMC,MAC/BN,GAAY,IAUd,OARAO,qBAAU,WACR,IAAMC,EAASpG,IAASqG,WAAWtF,IAAImE,GAGvC,OAFAkB,EAAOE,KAAK,SAAS/E,KAAKwE,GAEnB,WACLK,EAAOG,IAAI,QAASR,MAErB,CAACb,IAEF,oCACGO,EACC,kBAAC,EAAD,CAActD,WAAYA,EAAYC,aAzBvB,SAACoE,IAPK,SAACnB,EAAqBa,GAC3CA,EACFlG,IAASqG,WAAWtF,IAAImE,GAAQuB,OAAO,CAAEpB,cAAaa,SAEtDlG,IAASqG,WAAWtF,IAAImE,GAAQuB,OAAO,CAAEpB,gBAI3CqB,CAAmBF,EAAOnB,YAAamB,EAAON,MAC9CZ,EAAekB,EAAOnB,aAClBJ,GACFO,EAAgBgB,EAAON,MAGzBJ,OAmBMH,EACF,yBAAKnF,UAAU,mBACb,wBAAIA,UAAU,kBAAkB6E,GAChC,yBAAK7E,UAAU,wBACb,kBAAC,IAAD,CACEK,QAASiF,EACTtF,UAAU,4BAKhB,kBAAC,EAAD,SClFOmG,G,MATM,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,UAClC,OACE,6BAASrG,UAAU,kBACjB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQK,QAAS+F,GAAaC,M,QCkBrBC,G,MAtBD,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,cAAe9C,EAAsB,EAAtBA,SACxB+C,EAAYpF,iBAA0B,MAa5C,OAZAuE,qBAAU,WACR,GAA0B,OAAtBa,EAAUlF,QAAkB,CAC9B,IAAMmF,EAAMD,EAAUlF,QAAQoF,WAAW,MACzC,GAAID,EAAK,CACP,IAAME,EAAQ,IAAIC,QAAQH,EAAKF,GAC/B,OAAO,WACLI,EAAME,gBAOZ,yBAAK7G,UAAU,SACZyD,EAAW,wBAAIzD,UAAU,aAAayD,GAAiB,KACxD,4BAAQzD,UAAU,gBAAgBO,IAAKiG,O,QCG9BM,EApBM,SAAC,GAIR,IAHDC,EAGA,EAHX/D,UAEGgE,EACQ,6BACHtG,EAAgBC,qBAAWC,GAA3BF,YACR,OACE,kBAAC,IAAD,iBACMsG,EADN,CAEEC,OAAQ,SAACC,GAAD,OACJxG,EACA,kBAACqG,EAAmBG,GAEpB,kBAAC,IAAD,CAAUjH,GAAI,WClBXW,EAAcuG,wBAAqC,IAuEjDC,EAzDM,SAAC,GAAyB,IAAvB3D,EAAsB,EAAtBA,SAAsB,EACNxE,mBAAS,MADH,mBACrCyB,EADqC,KACxB2G,EADwB,OAEdpI,oBAAS,GAFK,mBAErCqI,EAFqC,KAE5BC,EAF4B,KA2C5C,OAvCA5B,qBAAU,WAqBRnG,IAASC,OAAO+H,oBAAmB,SAACC,GAC9BA,GACYjI,IAASqG,WAAWtF,IAAI,UAC9BmH,MAAMD,EAAKE,KAAK7B,KAAK,SAAS,SAAUN,GAE9C,KADgC,OAAnBA,EAASC,OACT,CACX,IAAMrD,EAAOqF,EAAKG,YAAYC,MAAM,KAAK,GACnCC,EAAUL,EAAKG,YAAYC,MAAM,KAAKE,MAAM,GAAGC,KAAK,MA3B5C,SACpBC,EACAC,EACA9F,EACA0F,GAEAtI,IACGqG,WACAtF,IAAI,SAAW0H,GACfE,IAAI,CACHD,MAAOA,IAEX1I,IACGqG,WACAtF,IAAI,SAAW0H,EAAS,kBACxBE,IAAI,CACH/F,OACA0F,YAWEM,CAAcX,EAAKE,IAAKF,EAAKS,MAAO9F,EAAM0F,OAKhDT,EAAeI,GACfF,GAAW,QAEZ,IAECD,EACK,kBAAC,EAAD,MAIP,kBAAC1G,EAAYyH,SAAb,CACEtE,MAAO,CACLrD,gBAGD+C,ICtEM6E,G,MAAmB,CAC9B,mBACA,gBACA,cACA,YAEWC,EAAyB,CACpC,YACA,oBACA,SACA,aACA,WACA,cACA,UAEWC,EAAmB,CAC9B,WACA,SACA,QACA,WACA,OACA,UACA,QACA,WACA,gBACA,oBACA,YACA,WAEWC,EAAc,CACzB,eACA,OACA,SACA,gBACA,MACA,WACA,SACA,gBACA,gBACA,mBACA,WACA,iBAMWC,EAAoC,CAC/C,CAAEtG,KAAM,2BAAkBiB,IAAK,GAC/B,CAAEjB,KAAM,8BAA0BiB,IAAK,IACvC,CAAEjB,KAAM,eAAgBiB,IAAK,IAC7B,CAAEjB,KAAM,UAAWiB,IAAK,MCjBXsF,EA1BG,SAAC,GAAqB,IAAnBvG,EAAkB,EAAlBA,KACbsD,EAAO,IAAIkD,KAEXC,EAAcL,EACdM,EAAK,UAFOP,EAES7C,EAAKqD,UAArB,aAAmCrD,EAAKsD,UAAxC,YACTH,EAAYnD,EAAKuD,YADR,YAEPvD,EAAKwD,eACT,OACE,6BAASlJ,UAAU,aACjB,wBAAIA,UAAU,mBACX,mBACAoC,GAGC,kBAAC,IAAD,CAAMpC,UAAU,kBAAkBC,GAAG,YAArC,cAID,MAGH,0BAAMD,UAAU,mBAAmB8I,KCO1BK,G,MA5BO,SAAC,GAA8B,IAA5B/G,EAA2B,EAA3BA,KAAM0F,EAAqB,EAArBA,QAC7B,OACE,yBAAK9H,UAAU,mBACb,uBAAGA,UAAU,yBAAb,iBACA,yBAAKA,UAAU,iCACb,0BAAMA,UAAU,6BACboC,GAAQ0F,EAAR,UACI1F,EAAK,GAAGgH,eADZ,OAC4BtB,EAAQ,GAAGsB,eAEtC,kBAAC,IAAD,CAAMpJ,UAAU,wBAAwBC,GAAG,YAA3C,OAMN,0BAAMD,UAAU,yBACboC,GAAQ0F,EAAR,UACI1F,EADJ,YACY0F,GAEX,kBAAC,IAAD,CAAM9H,UAAU,wBAAwBC,GAAG,YAA3C,SCaKoJ,G,MA5BO,SAAC,GAA4C,IAA1C3I,EAAyC,EAAzCA,YAAa4I,EAA4B,EAA5BA,eAA4B,EACdrK,mBAAiB,GADH,mBACzDsK,EADyD,KACtCC,EADsC,KAG1DC,EAAwB,SAAUjE,GACtCgE,EAAqBhE,EAASkE,gBAE1BC,EACJJ,GAAqBb,EAAa,GAAGrF,IACjCqF,EAAa,GAAGtG,KAChBmH,GAAqBb,EAAa,GAAGrF,IACrCqF,EAAa,GAAGtG,KAChBmH,GAAqBb,EAAa,GAAGrF,IACrCqF,EAAa,GAAGtG,KAChBsG,EAAa,GAAGtG,KAQtB,OAPAuD,qBAAU,WACR,IAAIpF,EAAMf,IAASqG,WAAWtF,IAApB,gBAAiCG,EAAYiH,IAA7C,eAEV,OADApH,EAAIuF,KAAK,SAAS/E,KAAK0I,GAChB,WACLlJ,EAAIwF,IAAI,QAAS0D,MAElB,CAAC/I,EAAYiH,MAEd,0BAAMtH,QAASiJ,EAAgBtJ,UAAU,mBACtC2J,KCLQC,G,MArBD,SAAC,GAA+B,IAA7BN,EAA4B,EAA5BA,eACf,OACE,yBAAKtJ,UAAU,QACb,kBAAC,EAAD,CAAQK,QAASiJ,GACf,kBAAC,IAAD,OAEF,yBAAKtJ,UAAU,aACb,wBAAIA,UAAU,YAAd,uBACA,yBAAKA,UAAU,kBACZ0I,EAAazG,KAAI,SAAC4H,GAAD,OAChB,uBAAG1H,IAAK0H,EAAazH,KAAMpC,UAAU,WACnC,0BAAMA,UAAU,mBAAmB6J,EAAazH,MAChD,0BAAMpC,UAAU,kBAAkB6J,EAAaxG,cCiB9CyG,G,MAzBG,SAAC,GAA2C,IAAzC1H,EAAwC,EAAxCA,KAAM0F,EAAkC,EAAlCA,QAASpH,EAAyB,EAAzBA,YAC5BqJ,EAAa3I,iBAAuB,MACpCkI,EAAiB,WACjBS,EAAWzI,SACbyI,EAAWzI,QAAQC,UAAUC,OAAO,gBAGxC,OACE,6BAASxB,UAAU,cACjB,yBAAKO,IAAKwJ,EAAY/J,UAAU,sBAC9B,yBAAKA,UAAU,qBACb,kBAAC,EAAD,CAAeoC,KAAMA,EAAM0F,QAASA,IACpC,kBAAC,EAAD,CACEpH,YAAaA,EACb4I,eAAgBA,KAGpB,yBAAKtJ,UAAU,oBACb,kBAAC,EAAD,CAAOsJ,eAAgBA,SCmBlBU,G,MArCO,SAAC,GAET,IAAD,IADXC,YAAeC,EACJ,EADIA,MAAOC,EACX,EADWA,KAAMC,EACjB,EADiBA,SAAUC,EAC3B,EAD2BA,SAEtC,OACE,yBAAKrK,UAAU,kBACb,uBAAGA,UAAU,yBAAb,SACA,yBAAKA,UAAU,4BACZkK,GACC,kBAAC,IAAD,CAAMjK,GAAG,WAAWD,UAAU,qBAA9B,qBACgBkK,GAGjBC,GACC,kBAAC,IAAD,CAAMlK,GAAG,WAAWD,UAAU,qBAA9B,kBACamK,GAGdC,GACC,kBAAC,IAAD,CAAMnK,GAAG,WAAWD,UAAU,qBAA9B,gBACWoK,GAGZC,GACC,kBAAC,IAAD,CAAMpK,GAAG,WAAWD,UAAU,qBAA9B,YACYqK,IAGZH,IAAUC,IAASC,IAAaC,GAChC,kBAAC,IAAD,CAAMrK,UAAU,oBAAoBC,GAAG,YAAvC,6BCzCGqK,G,MAA4B,SACvCC,EACAC,GAEI,IADJC,EACG,uDADe,KAEZ/E,EAAO,IAAIkD,KAAK2B,GAChBG,EAAahF,EAAKsD,UAAY,EAAItD,EAAKsD,UAAY,IAAMtD,EAAKsD,UAC9D2B,EACJjF,EAAKuD,WAAa,EAAI,EAAIvD,EAAKuD,WAAa,EAAI,KAAOvD,EAAKuD,WAAa,GACrE2B,EAAOlF,EAAKwD,cACZ2B,EACQ,QAAZJ,EAAA,UACOG,GADP,OACcJ,GADd,OAC0BG,GAD1B,OACkCH,GADlC,OAC8CE,GAD9C,UAEOA,GAFP,OAEoBF,GAFpB,OAEgCG,GAFhC,OAEwCH,GAFxC,OAEoDI,GACtD,OAAOC,IAEIC,EAA4B,SACvCP,EACAC,GAEA,IAAM9E,EAAO,IAAIkD,KAAK2B,GAChBQ,EAAQrF,EAAKsF,WAAa,EAAItF,EAAKsF,WAAa,IAAMtF,EAAKsF,WAC3DC,EACJvF,EAAKwF,aAAe,EAAIxF,EAAKwF,aAAe,IAAMxF,EAAKwF,aACzD,MAAM,GAAN,OAAUH,GAAV,OAAkBP,GAAlB,OAA8BS,ICwCjBE,EApDQ,WAAO,IACpBzK,EAAgBC,qBAAWC,GAA3BF,YADmB,EAEOzB,qBAFP,mBAEpBmM,EAFoB,KAETC,EAFS,KAGrB3F,EAAO,IAAIkD,KACXiC,EAAeP,EAA0B5E,EAAM,IAAK,OACpD4F,EAAkB,SAAU9F,GAChC,IAAM+F,EAA2B,GACjC/F,EAASgG,SAAQ,SAAUC,GACzB,IAAMC,EAAYD,EAAchG,MAChC8F,EAAcI,KAAKD,MAErBL,EAAaE,IAef,OAbA5F,qBAAU,WACR,GAAIjF,EAAa,CACf,IAAMH,EAAMf,IACTqG,WACAtF,IAAI,SAAWG,EAAYiH,IAAM,cACjCiE,aAAa,QACbC,QAAQhB,GAEX,OADAtK,EAAIuL,GAAG,QAASR,GACT,WACL/K,EAAIwF,IAAI,QAASuF,OAGpB,CAAC5K,EAAamK,IAEf,yBAAK7K,UAAU,mBACb,uBAAGA,UAAU,0BAAb,YACCoL,GAAkC,IAArBA,EAAUlH,OACtBkH,EAAUnJ,KAAI,SAAC8J,GACb,OACE,kBAAC,IAAD,CACE5J,IAAK4J,EAAS9I,GACdhD,GAAE,oBAAe8L,EAAS9I,IAC1BjD,UAAU,yBAET+L,EAASlH,gBAKhB,yBAAK7E,UAAU,0BACb,kBAAC,IAAD,CAAMA,UAAU,qBAAqBC,GAAG,aAAxC,oCChCK+L,G,MAVI,SAAC,GAA4B,IAA1B/B,EAAyB,EAAzBA,YACpB,OACE,6BAASjK,UAAU,cACjB,uBAAGA,UAAU,qBAAb,WACA,kBAAC,EAAD,CAAeiK,YAAaA,IAC5B,kBAAC,EAAD,SCuDSgC,G,MA/DM,WAAO,IAClBvL,EAAgBC,qBAAWC,GAA3BF,YADiB,EAEWzB,qBAFX,mBAElBiN,EAFkB,KAENC,EAFM,KAGnBC,EAAmB,SAAU5G,GACjC,IAAM6G,EAAgC,GACtC7G,EAASgG,SAAQ,SAAUC,GACzB,IAAMrJ,EAAOqJ,EAAc/D,MAAM,sBAAsBjC,MACjDqC,EAAU2D,EAAc/D,MAAM,yBAAyBjC,MAC7D,GAAIrD,GAAQ0F,EAAS,CACnB,IAAMyB,EAAoBkC,EACvB/D,MAAM,aACNgC,cACH2C,EAAgBV,KAAK,CAAEvJ,OAAM0F,UAASyB,0BAG1C8C,EAAgBC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEjD,kBAAoBgD,EAAEhD,qBACvD4C,EAAcE,EAAgBtE,MAAM,EAAG,MAWzC,OATApC,qBAAU,WACR,GAAIjF,EAAa,CACf,IAAMH,EAAMf,IAASqG,WAAWtF,IAAI,SAEpC,OADAA,EAAIuL,GAAG,QAASM,GACT,WACL7L,EAAIwF,IAAI,QAASqG,OAGpB,CAAC1L,IAEF,6BAASV,UAAU,iBACjB,wBAAIA,UAAU,qBAAd,cACA,2BAAOA,UAAU,wBACf,+BACE,wBAAIA,UAAU,qBACZ,wBAAIA,UAAU,qBAAd,WACA,wBAAIA,UAAU,qBAAd,aACA,wBAAIA,UAAU,qBAAd,YACA,wBAAIA,UAAU,qBAAd,yBAGJ,+BACGkM,GACCA,EAAWjK,KAAI,SAACwK,EAAMC,GACpB,OACE,wBACE1M,UAAU,oBACVmC,IAAG,UAAKsK,EAAKrK,KAAV,YAAkBqK,EAAK3E,QAAvB,YAAkC2E,EAAKlD,oBAE1C,wBAAIvJ,UAAU,qBAAqB0M,EAAQ,GAC3C,wBAAI1M,UAAU,qBAAqByM,EAAKrK,MACxC,wBAAIpC,UAAU,qBAAqByM,EAAK3E,SACxC,wBAAI9H,UAAU,qBACXyM,EAAKlD,yBAOpB,0BAAMvJ,UAAU,2BCFP2M,G,MAjDF,WAAO,IACVjM,EAAgBC,qBAAWC,GAA3BF,YADS,EAEOzB,qBAFP,mBAEVwI,EAFU,KAEJmF,EAFI,KAGXC,EAAa,SAAUrH,GAC3BoH,EAAQ,CACNxK,KAAMoD,EAASkC,MAAM,aAAajC,MAClCqC,QAAStC,EAASkC,MAAM,gBAAgBjC,MACxCwE,YAAa,CACXC,MAAO1E,EAASkC,MAAM,cAAcjC,MACpC0E,KAAM3E,EAASkC,MAAM,aAAajC,MAClC2E,SAAU5E,EAASkC,MAAM,iBAAiBjC,MAC1C4E,SAAU7E,EAASkC,MAAM,iBAAiBjC,UAehD,OAXAE,qBAAU,WACR,GAAIjF,EAAa,CACf,IAAMH,EAAMf,IACTqG,WACAtF,IAAI,SAAWG,EAAYiH,IAAM,aAEpC,OADApH,EAAIuL,GAAG,QAASe,GACT,WACLtM,EAAIwF,IAAI,QAAS8G,OAGpB,CAACnM,IAEF,oCACGA,GAAe+G,EACd,0BAAMzH,UAAU,eACd,kBAAC,EAAD,CAAWoC,KAAMqF,EAAKrF,OACtB,6BAASpC,UAAU,wBACjB,kBAAC,EAAD,CACEoC,KAAMqF,EAAKrF,KACX0F,QAASL,EAAKK,QACdpH,YAAaA,IAEf,kBAAC,EAAD,CAAYuJ,YAAaxC,EAAKwC,eAGhC,kBAAC,EAAD,OAGF,kBAAC,EAAD,SCrCO6C,I,YAlBS,WACtB,IAAMnJ,EAAUC,cAIhB,OACE,6BAAS5D,UAAU,oBACjB,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,wBAAd,iBACA,uBAAGA,UAAU,uBAAb,gDAGA,kBAAC,EAAD,CAAQK,QAVS,WACrBsD,EAAQgI,KAAR,YASI,4BCCOoB,I,YAVC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,MAAOlK,EAAkB,EAAlBA,KAC9B,OACE,yBAAK/C,UAAU,WACb,yBAAKA,UAAU,gBAAgBgN,GAC/B,uBAAGhN,UAAU,kBAAkBiN,GAC/B,uBAAGjN,UAAU,cAAc+C,M,oCCyBlBmK,GA9BE,WACf,OACE,6BAASlN,UAAU,YACjB,wBAAIA,UAAU,mBAAd,wBACA,kBAAC,GAAD,CACEgN,KAAM,kBAAC,KAAD,MACNC,MAAM,kBACNlK,KAAK,gKAGP,kBAAC,GAAD,CACEiK,KAAM,kBAAC,KAAD,MACNC,MAAM,sBACNlK,KAAK,6FAEP,kBAAC,GAAD,CACEiK,KAAM,kBAAC,KAAD,MACNC,MAAM,YACNlK,KAAK,sKAEP,kBAAC,GAAD,CACEiK,KAAM,kBAAC,KAAD,MACNC,MAAM,8BACNlK,KAAK,gIC6CEoK,I,MAvEE,WAAO,IAAD,EACWlO,mBAAwB,IADnC,mBACdmO,EADc,KACJC,EADI,KAEfC,EAAmBF,EAASlJ,OAFb,EAGqCjF,mBAAS,GAH9C,mBAGdsO,EAHc,KAGSC,EAHT,KAIrB7H,qBAAU,WACR,GAAI2H,EAAmB,EAAG,CACxB,IAAMG,EAAsBC,aAAY,WACtCF,GAAyB,SAACG,GACxB,OAAIA,IAAcL,EAAmB,EAAU,EACxCK,EAAY,OAEpB,KACH,OAAO,kBAAMC,cAAcH,OAE5B,CAACF,EAAuBD,IAE3B,IAAMO,EAAuB,SAACC,GACxBR,EAAmB,IACH,SAAdQ,EACFN,GAAyB,SAACG,GACxB,OAAkB,IAAdA,EAAwBL,EAAmB,EACxCK,EAAY,KAEE,UAAdG,GACTN,GAAyB,SAACG,GACxB,OAAIA,IAAcL,EAAmB,EAAU,EACxCK,EAAY,OAKrBI,EAAiB,SAAUvI,GAC/B,IAAMwI,EAA8B,GAEpCxI,EAASgG,SAAQ,SAAUC,GACzBuC,EAAarC,KAAKF,EAAc/D,MAAM,WAAWjC,UAEnD4H,EAAYW,IAUd,OARArI,qBAAU,WACR,IAAMpF,EAAMf,IAASqG,WAAWtF,IAAI,iBAAiB0N,YAAY,GAEjE,OADA1N,EAAIuL,GAAG,QAASiC,GACT,WACLxN,EAAIwF,IAAI,QAASgI,MAElB,IAGD,6BAAS/N,UAAU,YACjB,wBAAIA,UAAU,mBAAd,gCACA,yBAAKA,UAAU,sBACb,0BACEK,QAAS,kBAAMwN,EAAqB,SACpC7N,UAAU,kBAEV,kBAAC,IAAD,OAEF,uBAAGA,UAAU,eACVsN,EAAmB,EAAIF,EAASG,GAAyB,QAE5D,0BACElN,QAAS,kBAAMwN,EAAqB,UACpC7N,UAAU,mBAEV,kBAAC,IAAD,W,mBC2BKkO,GAhFK,WAAO,ItBRF7K,EAAaN,EsBQZ,EACYoL,aAAW,CAAC,aADxB,mBACjBC,EADiB,KACLC,EADK,OAEkBpP,oBAAS,GAF3B,mBAEjBqP,EAFiB,KAEFC,EAFE,KAIlB5M,EAAa,CACjBE,OAAQ,CACN,CACEO,KAAM,OACNC,SAAU8B,EAAkBL,EAAS,2BACrCvB,kBAAca,EACdL,KAAM,YACNH,YAAa,YACbM,KAAM,QAER,CACEd,KAAM,UACNC,SAAU8B,EAAkBL,EAAS,2BACrCvB,kBAAca,EACdL,KAAM,WACNH,YAAa,WACbM,KAAM,QAER,CACEd,KAAM,UACNC,SAAU8B,EACRL,EAAS,2BtBjCMT,EsBkCN,GtBlCmBN,EsBkCf,+CtBlCgC,SAACgB,GAAD,OACrDE,MAAMF,EAAMG,SAAWH,EAAMG,QAAUb,OAAMD,EAAYL,IsBkCjDiB,EAAS,IAAK,0EAEhBzB,kBAAca,EACdL,KAAM,eACNH,YAAa,kBACbI,UAAW,WACXE,KAAM,SAGVpB,OAAQ,CACNiB,KAAM,gBAyBV,OACE,6BAAS/C,UAAU,gBACQ,2BAAxBoO,EAAWI,SACV,uBAAGxO,UAAU,sBACc,2BAAxBoO,EAAWI,UAAoCF,EAC5C,8BACA,gDAGN,kBAAC,EAAD,CACE3M,WAAYA,EACZC,aAjCoB,SAACoE,GAC3B,IAAMN,EAAO,IAAIkD,KACXgC,EAAO,IAAIhC,KAAKlD,GAAMwD,cACtByB,EAAQ,IAAI/B,KAAKlD,GAAMuD,WACvByB,EAAahF,EAAKsD,UAClByF,EAAU,IAAI7F,KAAKgC,EAAMD,EAAOD,EAAa,IAC7CG,EACJP,EAA0B,IAAI1B,KAAKlD,GAAO,IAAK,OAC/C,IACAoF,EAA0B,IAAIlC,KAAKlD,GAAO,KAC5ClG,IAASqG,WAAWtF,IAAI,iBAAiBoL,OAAOxD,IAAI,CAClD/F,KAAM4D,EAAO5D,KACb0F,QAAS9B,EAAO8B,QAChB4G,QAAS1I,EAAO0I,QAChBhJ,KAAMmF,IAERwD,EAAc,WAAY,yBAAqB,CAC7CM,QAASF,IAEXF,GAAiB,QCzDNK,I,OAfA,WACb,OACE,4BAAQ5O,UAAU,UAChB,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAd,iBACA,uBAAGA,UAAU,gBAAb,+HAKF,uBAAGA,UAAU,kBAAb,oCCSS2M,GAZF,WACX,OACE,0BAAM3M,UAAU,QACd,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,QCTS6O,GALF,WAAO,IACVnO,EAAiCC,qBAAWC,GAA5CF,YACR,OAAO,oCAAGA,EAAc,kBAACoO,EAAD,MAAiB,kBAAC,GAAD,QC6C5BC,I,cAjCD,SAAC,GAA0B,IAAxB3D,EAAuB,EAAvBA,UACTzH,EAAUC,cAKhB,OACE,wBAAI5D,UAAU,cACXoL,EACEnJ,KAAI,SAAC8J,GACJ,IAAMrG,EAAO,IAAIkD,KAAKmD,EAASrG,MACzBmF,EAAY,UAAMP,EAA0B5E,EAAM,MACpDsJ,EAAiB,EAIrB,OAHIjD,EAASkD,YACXD,EAAiBE,OAAOC,KAAKpD,EAASkD,WAAW/K,QAGjD,wBACE7D,QAAS,kBAhBE,SAAC0L,GACtBpI,EAAQgI,KAAR,qBAA2BI,EAAS9I,KAeXmM,CAAerD,IAC9B5J,IAAK4J,EAAS9I,GACdjD,UAAU,kBAEV,0BAAMA,UAAU,oBAAoB+L,EAASlH,aAC7C,0BAAM7E,UAAU,oBAAoB6K,GACpC,0BAAM7K,UAAU,qBAAqBgP,OAI1CvE,aCGM4E,GAnCO,WAAO,IAAD,EACQpQ,mBAAoB,IAD5B,mBACnBmM,EADmB,KACRC,EADQ,KAElB3K,EAAgBC,qBAAWC,GAA3BF,YAFkB,EAGMzB,oBAAS,GAHf,mBAGnBkG,EAHmB,KAGTC,EAHS,KAIpBkG,EAAkB,SAAU9F,GAChC,IAAM+F,EAAqB,GAC3B/F,EAASgG,SAAQ,SAAUC,GACzB,IAAMC,EAAYD,EAAchG,MAChC8F,EAAcI,KAAKD,MAErBL,EAAaE,GACbnG,GAAY,IAgBd,OAbAO,qBAAU,WACR,GAAIjF,EAAa,CACf,IAAMH,EAAMf,IACTqG,WACAtF,IAAI,SAAWG,EAAYiH,IAAM,cACjCiE,aAAa,QAEhB,OADArL,EAAIuL,GAAG,QAASR,GACT,WACL/K,EAAIwF,IAAI,QAASuF,OAGpB,CAAC5K,IAGF,6BAASV,UAAU,mBACjB,wBAAIA,UAAU,iBAAd,YACCmF,EAAW,kBAACmK,GAAD,CAAWlE,UAAWA,IAAgB,kBAAC,EAAD,QCtClD1F,GAAO,IAAIkD,KACX2G,GAAW,UAAMjF,EACrB5E,GACA,IACA,OAHe,YAIZoF,EAA0BpF,GAAM,MACtB,IACb7D,OAAQ,CACN,CACEO,KAAM,OACNC,SAAU8B,EAAkBL,EAAS,2BACrCvB,aAAcgN,GACdxM,KAAM,gBACNH,YAAa,gBACbM,KAAM,iBACNI,IAAKiM,IAEP,CACEnN,KAAM,cACNC,SAAU8B,EACRL,EAAS,0BACTE,EAAS,GAAI,gEAEfzB,kBAAca,EACdL,KAAM,iBACNH,YAAa,mBAGjBd,OAAQ,CACNiB,KAAM,kBCMKyM,GAjCK,WAAO,IACjB9O,EAAgBC,qBAAWC,GAA3BF,YACFiD,EAAUC,cAwBhB,OACE,6BAAS5D,UAAU,gBACjB,kBAAC,EAAD,CAAc2B,WAAYA,GAAYC,aAbrB,SAACoE,GACpB,IAAMN,EAAOM,EAAON,KACjB7C,QAAQ,KAAM,IACdA,QAAQ,KAAM,IACdA,QAAQ,KAAM,IAEbnC,KAjBkB,SACtBuH,EACAhF,EACAyC,EACAb,GAEArF,IACGqG,WACAtF,IAAI,SAAW0H,EAAS,cAAgBhF,GACxCkF,IAAI,CAAElF,KAAIyC,OAAMb,gBASjB4K,CAAgB/O,EAAYiH,IAAKjC,EAAMM,EAAON,KAAMM,EAAOnB,aAC3DlB,EAAQgI,KAAR,qBAA2BjG,UCjBlBgK,I,OATG,WAChB,OACE,0BAAM1P,UAAU,aACd,kBAAC,GAAD,MACA,kBAAC,GAAD,SCKS2P,GADFnQ,IAASoQ,cAXQ,CAC5BC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCiDFC,I,OA9Cc,SAAC,GAA8B,IAA5BpB,EAA2B,EAA3BA,UAAWhM,EAAgB,EAAhBA,GACnCU,EAAUC,cAUhB,OACE,wBAAI5D,UAAU,8BACXiP,EAAUhN,KAAI,SAACqO,GAAgC,IAAD,EAC7C,OACE,wBACEnO,IAAKmO,EAAanO,IAClB9B,QAAS,kBAfY,SAC7BkQ,EACAD,GAEA3M,EAAQgI,KAAK,CACX6E,SAAS,cAAD,OAAgBvN,EAAhB,YAAsBsN,GAC9BE,MAAO,CAAEH,kBAUDI,CAAuBJ,EAAanO,IAAKmO,EAAazL,cAExD7E,UAAU,oCAEV,0BAAMA,UAAU,wCACbsQ,EAAazL,aAEhB,yBAAK7E,UAAU,sCAAf,UACGsQ,EAAaK,cADhB,aACG,EAAqB1O,KAAI,SAAC2O,EAAaC,GACtC,GAAIA,EAAM,IAAM,GAAKP,EAAaK,OAAQ,CACxC,IAAMG,EAAY,UAAMR,EAAaK,OAAOE,GAA1B,YAChBP,EAAaK,OAAOE,EAAM,IAE5B,OACE,0BAAM1O,IAAK0O,EAAK7Q,UAAU,kCACvB8Q,e,SCuBRC,I,OArDS,SAAC,GAAsC,IAApC9B,EAAmC,EAAnCA,UAAevK,GAAoB,EAAxBzB,GAAwB,EAApByB,QAAoB,EAC1BzF,mBAChCgQ,EAAUhN,KAAI,SAAC+O,EAAetE,GAC5B,MAAO,CACLzJ,GAAG,GAAD,OAAKyJ,EAAQ,GACfuE,QAASD,EAASnM,YAClB1C,IAAK6O,EAAS7O,SANwC,mBACrD+O,EADqD,KAC1CC,EAD0C,KAuB5D,OACE,kBAAC,KAAD,CAAiBC,UAdD,SAACC,GACjB,GAAKA,EAAOC,YAAZ,CACA,IAAMC,EAvBM,SAACC,EAAWC,EAAiBC,GAC3C,IAAML,EAASM,MAAMC,KAAKJ,GADmC,EAE3CH,EAAOQ,OAAOJ,EAAY,GAArCK,EAFsD,oBAI7D,OADAT,EAAOQ,OAAOH,EAAU,EAAGI,GACpBT,EAmBcU,CACjBb,EACAG,EAAOW,OAAOtF,MACd2E,EAAOC,YAAY5E,OAErByE,EAAaI,GACb/R,IAASqG,WAAWtF,IAAImE,GAAQyD,IAAI,IACpCoJ,EAAM/F,SAAQ,SAACiB,GACbjN,IAASqG,WAAWtF,IAAImE,GAAQiH,OAAOxD,IAAI,CAAEtD,YAAa4H,EAAKwE,gBAK/D,kBAAC,KAAD,CAAWgB,YAAY,cACpB,SAACC,EAAU1M,GAAX,OACC,uCACExF,UAAU,QACNkS,EAASC,eAFf,CAGE5R,IAAK2R,EAASE,WAEblB,EAAUjP,KAAI,SAACwK,EAAWC,GAAZ,OACb,kBAAC,KAAD,CAAWvK,IAAKsK,EAAKxJ,GAAIoP,YAAa5F,EAAKxJ,GAAIyJ,MAAOA,IACnD,SAACwF,EAAU1M,GAAX,OACC,uCACExF,UAAU,aACVO,IAAK2R,EAASE,UACVF,EAASI,eACTJ,EAASK,iBAEZ9F,EAAKwE,eAKbiB,EAAStP,mBCTP4P,GAtCM,SAAC,GAA8B,IAA5BvD,EAA2B,EAA3BA,UAAWhM,EAAgB,EAAhBA,GACzBvC,EAAgBC,qBAAWC,GAA3BF,YACFiB,EAAa,CACjBE,OAAQ,CACN,CACEO,KAAM,cACNC,SAAU8B,EACRL,EAAS,0BACTE,EAAS,GAAI,gEAEfzB,kBAAca,EACdL,KAAM,sBACNH,YAAa,wBAGjBd,OAAQ,CACNiB,KAAM,yBAcV,OACE,oCACE,kBAAC,EAAD,CAAcpB,WAAYA,EAAYC,aAbrB,SAACoE,GAChBtF,IACFlB,IACGqG,WACAtF,IAFH,gBAEgBG,EAAYiH,IAF5B,sBAE6C1E,IAC1CyE,MAAM,aACNiE,OACAxD,IAAI,CAAEtD,YAAamB,EAAOnB,cAC7BmB,EAAOnB,YAAc,OAMrB,kBAAC,GAAD,CAAsBoK,UAAWA,EAAWhM,GAAIA,MCwCvCwP,I,OArEE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MACZ/O,EAAUC,cACRX,EAAOyP,EAAMC,OAAb1P,GACAvC,EAAgBC,qBAAWC,GAA3BF,YAH6B,EAISzB,oBAAS,GAJlB,mBAI9B0F,EAJ8B,KAIbC,EAJa,OAgBH3F,qBAhBG,mBAgB9BgQ,EAhB8B,KAgBnB2D,EAhBmB,KAiB/BC,EAAgB,SAAUrN,GAC9B,IAAMsN,EAAqB,GAC3BtN,EAASgG,SAAQ,SAAUC,GAAqB,IAAD,EACbA,EAAchG,MAAtCkL,EADqC,EACrCA,OAAQ9L,EAD6B,EAC7BA,YACV1C,EAAMsJ,EAActJ,IAC1B2Q,EAAcnH,KAAK,CAAE9G,cAAa1C,MAAKwO,cAEzCiC,EAAaE,IAcf,OAZAnN,qBAAU,WACR,GAAIjF,EAAa,CACf,IAAMH,EAAMoP,GACT9J,WACAtF,IAFS,gBAEIG,EAAYiH,IAFhB,sBAEiC1E,IAE7C,OADA1C,EAAImH,MAAJ,aAAuBoE,GAAG,QAAS+G,GAC5B,WACLtS,EAAImH,MAAJ,aAAuB3B,IAAI,QAAS8M,OAGvC,CAACnS,EAAauC,IAGf,0BAAMjD,UAAU,YACd,kBAAC,EAAD,CACEoG,WAnCuB,WACvB1F,IACFlB,IACGqG,WACAtF,IAFH,gBAEgBG,EAAYiH,IAF5B,sBAE6C1E,IAC1CxB,SACHkC,EAAQE,WA8BNwC,UAAU,sBAGZ,6BAASrG,UAAU,0BAChBU,GACC,kBAAC,EAAD,CACE8D,UAAU,iBACVC,UAAU,EACVC,OAAM,gBAAWhE,EAAYiH,IAAvB,sBAAwC1E,GAC9C0B,gBAAiBA,EACjBC,mBAAoBA,IAGvBD,GAAmBjE,EAClB,kBAAC,GAAD,CACEuO,UAAWA,EACXhM,GAAIA,EACJyB,OAAM,gBAAWhE,EAAYiH,IAAvB,sBAAwC1E,EAAxC,gBAGRgM,GAAa,kBAAC,GAAD,CAAcA,UAAWA,EAAWhM,GAAIA,QCzEhD8P,I,cAPc,WAC3B,OACEC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GACrCH,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GACrCH,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,KC8C1BC,GA9BF,SAAC,GAA8C,IAA5CvR,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,OAAQuR,EAA2B,EAA3BA,cAuB9B,OACE,yBAAKhT,QAvBiB,WACtBwB,EAAO8J,KACL,CACEvJ,KAAK,iBAAD,OAAmB2Q,MACvB1Q,SAAU8B,EAAkBL,EAAS,2BACrCvB,kBAAca,EACdL,KAAM,wBACNH,YAAa,yBAEf,CACER,KAAK,iBAAD,OAAmB2Q,MACvB1Q,SAAU8B,EAAkBL,EAAS,2BACrCvB,kBAAca,EACdL,KAAM,2BACNH,YAAa,6BAGjByQ,EAAc,CACZxR,SACAC,YAI6B9B,UAAU,kBACvC,yBAAKA,UAAU,mBAAf,OCxBSsT,I,OAdM,SAAC,GAA0C,IAAxC5G,EAAuC,EAAvCA,MAAO6G,EAAgC,EAAhCA,mBAC7B,OACE,yBAAKvT,UAAU,iBACb,4BACEK,QAAS,kBAAMkT,EAAmB7G,IAClCxJ,KAAK,SACLlD,UAAU,yBAHZ,2BCMSwT,I,OAVM,SAAC,GAAsB,IAApB9G,EAAmB,EAAnBA,MACtB,OACE,oCACGA,EAAQ,IAAM,GACb,uBAAG1M,UAAU,iBAAb,SAAoC0M,EAAQ,EAAI,MC6FzC+G,GA1EG,SAAC,GAKL,IAAD,IAJX9R,WAAcE,EAIH,EAJGA,OAAQC,EAIX,EAJWA,OACtBuR,EAGW,EAHXA,cACApQ,EAEW,EAFXA,GACAyQ,EACW,EADXA,QAEQhT,EAAgBC,qBAAWC,GAA3BF,YAaF6S,EAAqB,SAACI,GAC1B9R,EAAOgQ,OAAO8B,EAAS,EAAG,GAC1BN,EAAc,CACZxR,SACAC,YAGJ,OACE,kBAAC,IAAD,CAAMC,SApBa,SAACiE,GACpB,IAAM4N,EAAgB,GAItB,GAHA/R,EAAO2J,SAAQ,SAACqI,GACdD,EAASjI,KAAK3F,EAAO6N,EAAMzR,UAEzB1B,EAAa,CACf,IAAMoT,EAAG,gBAAYpT,EAAYiH,IAAxB,sBAAyC1E,EAAzC,sBAAyDyQ,GAClElU,IAASqG,WAAWtF,IAAIuT,GAAKpM,MAAM,UAAUS,IAAIyL,GACjDG,YAAM,qCAaL,SAAC/R,GAAD,OACC,0BAAMD,SAAUC,EAAMJ,aAAc5B,UAAU,QAC3C6B,EAAOI,KAAI,SAACC,EAAgBwK,GAC3B,OACE,kBAAC,IAAD,CACEvK,IAAKD,EAAUE,KACfA,KAAMF,EAAUE,KAChBC,SAAUH,EAAUG,SACpBC,aAAcJ,EAAUK,aACxBC,MAAON,EAAUM,QAEhB,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,oCACE,kBAAC,GAAD,CAAcgK,MAAOA,IACrB,yBAAK1M,UAAU,iBACb,2BAAOA,UAAU,eAAekC,EAAUa,MAC1C,yCACE/C,UAAU,eACNyC,EAFN,CAGES,KAAK,SACLC,KAAK,IACLE,IAAI,IACJT,YAAaV,EAAUU,eAExBF,EAAK1B,OAAS0B,EAAKa,SAClB,0BAAMvD,UAAU,cAAc0C,EAAK1B,QAGtC0L,EAAQ,IAAM,GACb,kBAAC,GAAD,CACEA,MAAOA,EACP6G,mBAAoBA,WAQlC,kBAAC,GAAD,CAAM1R,OAAQA,EAAQC,OAAQA,EAAQuR,cAAeA,IACrD,4BAAQrT,UAAU,gBAAgB8B,EAAOiB,WC8CpCiR,I,OA5GE,SAAC,GAAuC,IAAD,IAApCtB,MAASoB,EAA2B,EAA3BA,IAAKnB,EAAsB,EAAtBA,OAC1BhP,EAAUC,cACRlD,EAAgBC,qBAAWC,GAA3BF,YAEFuC,EADS6Q,EAAIjR,QAAQ,cAAe,IACxBA,QAAQ,IAAM8P,EAAO1P,GAAI,IAJW,EAKRhE,oBAAS,GALD,mBAK/C0F,EAL+C,KAK9BC,EAL8B,OAMlB3F,mBAAqB,CACvD4C,OAAQ,CACN,CACEO,KAAM,iBACNC,SAAU8B,EAAkBL,EAAS,2BACrCvB,kBAAca,EACdL,KAAM,wBACNH,YAAa,yBAEf,CACER,KAAM,iBACNC,SAAU8B,EAAkBL,EAAS,2BACrCvB,kBAAca,EACdL,KAAM,2BACNH,YAAa,6BAGjBd,OAAQ,CACNoB,KAAM,SACNH,KAAM,YAzB4C,mBAM/CpB,EAN+C,KAMnC0R,EANmC,KAqChDY,EAAiB,SAAUzO,GAC/B,GAAIA,EAAU,CACZ,IAAM3D,EAAkB,GAKxB2D,EAASgG,SAAQ,SAAUC,GACzB,IAAM1I,EACJlB,EAAOqC,OAAS,IAAM,EAAI,wBAAgB,2BAE5CrC,EAAO8J,KAAK,CACVvJ,KAAK,GAAD,OACFP,EAAOqC,OAAS,IAAM,EAAI,iBAAmB,kBAD3C,OAED6O,MACH1Q,SAAU8B,EAAkBL,EAAS,2BACrCvB,aAAckJ,EAAchG,MAC5B1C,KAAMA,EACNH,YAAaG,OAGblB,EAAOqC,OAAS,GAClBmP,EAAc,CACZxR,SACAC,OArBW,CACboB,KAAM,SACNH,KAAM,cAqCZ,OAbA4C,qBAAU,WACR,GAAIjF,EAAa,CACf,IAAMH,EAAMf,IACTqG,WACAtF,IAFS,gBAGCG,EAAYiH,IAHb,sBAG8B1E,EAH9B,sBAG8C0P,EAAO1P,GAHrD,YAMZ,OADA1C,EAAIuL,GAAG,QAASmI,GACT,WACL1T,EAAIwF,IAAI,QAASkO,OAGpB,CAACvT,EAAauC,EAAI0P,EAAO1P,KAE1B,0BAAMjD,UAAU,YACd,kBAAC,EAAD,CACEoG,WAtDqB,WACrB1F,IACFlB,IACGqG,WACAtF,IAFH,gBAEgBG,EAAYiH,IAF5B,sBAE6C1E,EAF7C,sBAE6D0P,EAAO1P,KACjExB,SACHkC,EAAQE,WAiDNwC,UAAU,6BAEZ,6BAASrG,UAAU,wBAChBU,GACC,kBAAC,EAAD,CACE8D,UAAU,uBACVC,UAAU,EACVC,OAAM,gBAAWhE,EAAYiH,IAAvB,sBAAwC1E,EAAxC,sBAAwD0P,EAAO1P,IACrE0B,gBAAiBA,EACjBC,mBAAoBA,KAGtBD,GACA,kBAAC,GAAD,CACEhD,WAAYA,EACZ0R,cAAeA,EACfpQ,GAAIA,EACJyQ,QAASf,EAAO1P,SCnEbiR,GAvDW,SAAC,GAA0B,IAAxB9I,EAAuB,EAAvBA,UACrB+I,EAAY1L,EACZ2L,EAAmC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3EhJ,EAAUI,SAAQ,SAACO,GACjBqI,EAAkB,IAAIxL,KAAKmD,EAASrG,MAAMuD,aAAe,KAE3D,IAAM1C,EAAgB,CACpBrD,KAAM,MACNmR,KAAM,CACJC,OAAQH,EACRI,SAAU,CACR,CACEC,aAAc,EACdH,KAAMD,EACNK,gBAAiB,SAAUC,GAEzB,OADcA,EAAQC,UACP,EACX,yBACA,6BAMZC,QAAS,CACP3H,MAAO,CACL4H,SAAS,EACT9R,KAAM,8BAER+R,OAAQ,CACND,SAAS,EACTP,OAAQ,GACRS,SAAU,SAEZC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,WAAY,EACZC,aAAa,EACbC,SAAU,SAAUtR,GAClB,GAAIuR,OAAOC,UAAUxR,GACnB,OAAOA,SAUvB,OAAO,oCAAG,kBAAC,EAAD,CAAOwC,cAAeA,GAAtB,OCiCGiP,GAlFkB,SAAC,GAA0B,IAAxBpK,EAAuB,EAAvBA,UAC5BqK,EAAyD,CAC7DrT,KAAM,GACNsT,OAAQ,IAEVtK,EAAUI,SAAQ,SAACO,GACjB,IAAMW,EAAQ+I,EAAyBrT,KAAKuT,WAC1C,SAAClJ,GAAD,OAAUA,IAASV,EAASlH,gBAEf,IAAX6H,IACA+I,EAAyBC,OAAOhJ,IAElC+I,EAAyBrT,KAAKuJ,KAAKI,EAASlH,aAC5C4Q,EAAyBC,OAAO/J,KAAK,OAIzC,IAAMpF,EAAgB,CACpBrD,KAAM,MAENmR,KAAM,CACJC,OAAQmB,EAAyBrT,KACjCmS,SAAU,CACR,CACEF,KAAMoB,EAAyBC,OAC/BjB,gBAAiB,CACf,yBACA,yBACA,uBACA,wBACA,wBACA,uBACA,uBACA,uBACA,uBACA,qBACA,wBACA,wBACA,yBACA,oBAEFmB,YAAa,CACX,2BACA,2BACA,yBACA,0BACA,0BACA,wBACA,yBACA,wBACA,wBACA,uBACA,0BACA,0BACA,2BACA,sBAEFC,qBAAsB,CACpB,2BACA,2BACA,yBACA,0BACA,0BACA,yBACA,yBACA,yBACA,yBACA,uBACA,0BACA,0BACA,2BACA,sBAEFC,iBAAkB,MAM1B,OAAO,oCAAG,kBAAC,EAAD,CAAOvP,cAAeA,GAAtB,OCcGwP,I,OA3FqB,SAAC,GAA0B,IAAxB3K,EAAuB,EAAvBA,UAC/BwJ,EAAyB,GAC/BxJ,EAAUI,SAAQ,SAACO,GACZ6I,EAAQoB,SAASjK,EAASlH,cAC7B+P,EAAQjJ,KAAKI,EAASlH,gBAJkC,MAOpB5F,mBAAiB2V,EAAQ,IAPL,mBAOrDqB,EAPqD,KAOvCC,EAPuC,KAQtD7B,EAAOjJ,EAAU+K,QAAO,SAACpK,GAC7B,OAAOA,EAASlH,cAAgBoR,KAE5BG,EAA+C,CAAE1Q,KAAM,GAAIgQ,OAAQ,IACzErB,EAAK7I,SAAQ,SAACO,GACZ,IAAI2J,EAAS,EACb,GAAI3J,EAASkD,UACX,cAAwBC,OAAOmH,QAAQtK,EAASkD,WAAhD,eAA4D,CAAC,IAA/ClL,EAA8C,uBAC1D,GAAIA,EAAM4M,OAAQ,CAGhB,IAFA,IAAI2F,EAAc,GAElB,MAAyBpH,OAAOmH,QAAQtS,EAAM4M,QAA9C,eAAuD,CAAC,IAA1CA,EAAyC,uBACrD2F,EAAY3K,KAAKgF,GAEnB,IAAK,IAAI4F,EAAI,EAAGA,EAAID,EAAYpS,OAAQqS,GAAK,EAC3Cb,GAAUJ,OAAOgB,EAAYC,IAAMjB,OAAOgB,EAAYC,EAAI,KAKlE,IAAM7Q,EAAO,IAAIkD,KAAKmD,EAASrG,MACzB8Q,EAAY,UAAMlM,EAA0B5E,EAAM,MACxD0Q,EAAe1Q,KAAKiG,KAAK6K,GACzBJ,EAAeV,OAAO/J,KAAK+J,MAG7B,IAAMnP,EAAgB,CACpBrD,KAAM,OACNmR,KAAM,CACJC,OAAQ8B,EAAe1Q,KACvB6O,SAAU,CACR,CACEF,KAAM+B,EAAeV,OACrBe,KAAM,QACNb,YAAa,yBACbnB,gBAAiB,4BAKvBG,QAAS,CACP3H,MAAO,CACL4H,SAAS,EACT9R,KAAM,2BAER+R,OAAQ,CACND,SAAS,EACTP,OAAQ,GACRS,SAAU,SAEZC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,WAAY,EACZC,aAAa,QAUzB,OACE,yBAAKpV,UAAU,gBACb,2BAAOA,UAAU,uBAAjB,0BACA,4BAAQ0W,SANe,SAACC,GAC1BT,EAAgBS,EAAEC,OAAO7S,QAKe/D,UAAU,wBAC7C4U,EAAQ3S,KAAI,SAACwK,EAAMC,GAClB,OACE,4BAAQvK,IAAKuK,EAAO3I,MAAO0I,GACxBA,OAMR,kBAAC,EAAD,CAAOlG,cAAeA,GAAtB,QC/EQsQ,GAVA,SAAC,GAA0B,IAAxBzL,EAAuB,EAAvBA,UAChB,OACE,oCACE,kBAAC,GAAD,CAAmBA,UAAWA,IAC9B,kBAAC,GAAD,CAA0BA,UAAWA,IACrC,kBAAC,GAAD,CAA6BA,UAAWA,MCwB/B0L,I,OA3BI,WAAO,IAChBpW,EAAiCC,qBAAWC,GAA5CF,YADe,EAEWzB,qBAFX,mBAEhBmM,EAFgB,KAELC,EAFK,KAGjBC,EAAkB,SAAU9F,GAChC,IAAM+F,EAAiC,GACvC/F,EAASgG,SAAQ,SAAUC,GACzBF,EAAcI,KAAKF,EAAchG,UAEnC4F,EAAaE,IAYf,OAVA5F,qBAAU,WACR,GAAIjF,EAAa,CACf,IAAMH,EAAMf,IAASqG,WAAWtF,IAApB,gBAAiCG,EAAYiH,IAA7C,eAEZ,OADApH,EAAIuF,KAAK,QAASwF,GACX,WACL/K,EAAIwF,IAAI,QAASuF,OAGpB,CAAC5K,IAGF,0BAAMV,UAAU,cACboL,EAAY,kBAAC,GAAD,CAAQA,UAAWA,IAAgB,kBAAC,EAAD,S,SCvBvC2L,I,OAbD,SAAC,GAAmB,IAAjB7T,EAAgB,EAAhBA,KAAgB,EACLjE,mBAAS,IADJ,mBACxB8E,EADwB,KACjBiT,EADiB,KAU/B,MAAO,CAACjT,EAPN,2BACEA,MAAOA,EACP2S,SAAU,SAACC,GAAD,OAAOK,EAASL,EAAEC,OAAO7S,QACnCb,KAAMA,EACNG,IAAK,OCSI4T,I,cAXM,SAAC,GAAwC,IAAtChK,EAAqC,EAArCA,MAAOiK,EAA8B,EAA9BA,UAAWxK,EAAmB,EAAnBA,MACxC,OACE,gCACE,uBAAK1M,UAAU,iBACb,qBAAGA,UAAU,wBAAwBiN,GACrC,qBAAGjN,UAAU,yBAAyBkX,EAAUxK,QC8BzCyK,I,OA9BK,SAAC,GAAsD,IAApDzR,EAAmD,EAAnDA,KAAMwE,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAC5C1G,EAAUC,cACVwT,EAAS9O,EACT4O,EAAY,CAAChN,EAAOC,EAAMC,EAAUC,GAKpCQ,EpCKuC,SAC7CwM,EACA7M,GAEI,IADJC,EACG,uDADe,KAEZC,EAAa2M,EAAWtP,MAAM,EAAG,GACjC4C,EAAQ0M,EAAWtP,MAAM,EAAG,GAC5B6C,EAAOyM,EAAWtP,MAAM,EAAG,GAC3B8C,EACQ,QAAZJ,EAAA,UACOG,GADP,OACcJ,GADd,OAC0BG,GAD1B,OACkCH,GADlC,OAC8CE,GAD9C,UAEOA,GAFP,OAEoBF,GAFpB,OAEgCG,GAFhC,OAEwCH,GAFxC,OAEoDI,GACtD,OAAOC,EoCjBcyM,CAAgC5R,EAAM,KAC3D,OACE,yBACErF,QAAS,kBAPS,SAACqF,GACrB/B,EAAQgI,KAAR,eAAqBjG,IAMJ6R,CAAc7R,IAC7B1F,UAAU,eACVmC,IAAKuD,GAEL,yBAAK1F,UAAU,sBAAsB6K,GACrC,yBAAK7K,UAAU,2BACZoX,EAAOnV,KAAI,SAACgL,EAAeP,GAAhB,OACV,kBAAC,GAAD,CACEvK,IAAK8K,EACLA,MAAOA,EACPiK,UAAWA,EACXxK,MAAOA,WCoBJ8K,GAlCE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAClB,OACE,oCACGA,EACExV,KAAI,SAACyV,GAAU,IACTxN,EAAoC,EAA7BC,EAAgC,EAA1BC,EAA6B,EAAnBC,EAAsB,EAalD,OAZIqN,EAAKC,MACPD,EAAKC,KAAKnM,SAAQ,SAACmM,GACbA,EAAKnG,MACPmG,EAAKnG,KAAKhG,SAAQ,SAACiB,GACjBvC,GAASuC,EAAKvC,MACdC,GAAQsC,EAAKtC,KACbC,GAAYqC,EAAKrC,SACjBC,GAAYoC,EAAKpC,eAMvB,kBAAC,GAAD,CACElI,IAAKuV,EAAKhS,KACVA,KAAMgS,EAAKhS,KACXwE,MAAOA,EACPC,KAAMA,EACNC,SAAUA,EACVC,SAAUA,OAIfI,YCsCMmN,I,OAjEF,WACX,IAAMjU,EAAUC,cACRlD,EAAgBC,qBAAWC,GAA3BF,YAFS,EAGSzB,mBAAsB,IAH/B,mBAGVwY,EAHU,KAGHI,EAHG,OAIO5Y,oBAAS,GAJhB,mBAIV6Y,EAJU,KAIJC,EAJI,OAKe9Y,oBAAS,GALxB,mBAKVkG,EALU,KAKAC,EALA,KA8BX4S,EAAa,SAAUxS,GAC3B,IAAMyS,EAAyB,GAC/BzS,EAASgG,SAAQ,SAAUC,GACzB,IAAMC,EAAYD,EAAchG,MAChCwS,EAAUtM,KAAKD,MAEjBmM,EAASI,GACT7S,GAAY,IAed,OAZAO,qBAAU,WACR,GAAIjF,EAAa,CACf,IAAMH,EAAMf,IACTqG,WACAtF,IAAI,SAAWG,EAAYiH,IAAM,SACjCiE,aAAa,QAEhB,OADArL,EAAIuL,GAAG,QAASkM,GACT,WACLzX,EAAIwF,IAAI,QAASiS,OAGpB,CAACtX,IAEF,0BAAMV,UAAU,QACd,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAQK,QAjDQ,WACpB,IAUuB4H,EAAgBvC,EAVjCoD,EAAQ,IAAIF,KACZsP,EAAmB5N,EAA0BxB,EAAO,GAAI,OAC1DgP,GAAO,EAOX,GANAL,EAAMjM,SAAQ,SAACiB,GACTyL,IAAqBzL,EAAK/G,OAC5BoS,GAAO,EACPC,GAAQ,OAGRD,EAAM,CAQJpX,IAPiBuH,EAQPvH,EAAYiH,IARWjC,EAQNwS,EAP7B1Y,IACGqG,WACAtF,IAAI,SAAW0H,EAAS,SAAWvC,GACnCyC,IAAI,CAAEzC,SAKT/B,EAAQgI,KAAR,gBAAsBuM,QA6BtB,oBACCJ,GACC,0BAAM9X,UAAU,cAAhB,0CAGHmF,EAAW,kBAAC,GAAD,CAAUsS,MAAOA,IAAY,kBAAC,EAAD,SChChCU,I,OA5BQ,SAAC,GAAiD,IAA/CR,EAA8C,EAA9CA,KAAMlL,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAO0L,EAA2B,EAA3BA,UAAWnV,EAAgB,EAAhBA,GAC9CvC,EAAgBC,qBAAWC,GAA3BF,YAUR,OACE,4BACE,wBAAIV,UAAU,kBAAkByM,EAAK4L,YACrC,wBAAIrY,UAAU,kBAAkByM,EAAKvC,OACrC,wBAAIlK,UAAU,kBAAkByM,EAAKtC,MACrC,wBAAInK,UAAU,kBAAkByM,EAAKrC,UACrC,wBAAIpK,UAAU,kBAAkByM,EAAKpC,UACrC,wBAAIrK,UAAU,kBACZ,kBAAC,IAAD,CACEK,QAAS,kBAlBY,SAACqM,GAC5B,GAAIhM,EAAa,CACf,IAAM4X,EAAeX,EAAKnG,KAAK2E,QAAO,SAAC1J,EAAM8L,GAAP,OAAeA,IAAQ7L,KAC7DlN,IACGqG,WACAtF,IAFH,gBAEgBG,EAAYiH,IAF5B,iBAEwC1E,EAFxC,iBAEmDmV,EAFnD,UAGGjQ,IAHH,aAGWmQ,KAYQE,CAAqB9L,IACpC1M,UAAU,2BCJLyY,GAvBY,SAAC,GAA6B,IAA3Bd,EAA0B,EAA1BA,KAAMP,EAAoB,EAApBA,OAC5BsB,EAAqB,CAAC,EAAG,EAAG,EAAG,GASrC,OARIf,EAAKnG,MACPmG,EAAKnG,KAAKhG,SAAQ,SAACiB,GACjBiM,EAAmB,IAAMjM,EAAKvC,MAC9BwO,EAAmB,IAAMjM,EAAKtC,KAC9BuO,EAAmB,IAAMjM,EAAKrC,SAC9BsO,EAAmB,IAAMjM,EAAKpC,YAIhC,oCACGqO,EAAmBzW,KAAI,SAACwK,EAAMC,GAC7B,OACE,wBAAIvK,IAAKiV,EAAO1K,GAAQ1M,UAAU,kBAC/ByM,QCoEEkM,GAhFO,SAAC,GAMT,IAMRC,EAXJC,EAKW,EALXA,cACAC,EAIW,EAJXA,SACAC,EAGW,EAHXA,cACA9V,EAEW,EAFXA,GACAmV,EACW,EADXA,UACW,EACyBrB,GAAM,CAAE7T,KAAM,SADvC,mBACJmV,EADI,KACQW,EADR,OAEejC,GAAM,CAAE7T,KAAM,WAF7B,mBAEJgH,EAFI,KAEG+O,EAFH,OAGalC,GAAM,CAAE7T,KAAM,WAH3B,mBAGJiH,EAHI,KAGE+O,EAHF,OAIqBnC,GAAM,CAAE7T,KAAM,WAJnC,mBAIJkH,EAJI,KAIM+O,EAJN,OAKqBpC,GAAM,CAAE7T,KAAM,WALnC,mBAKJmH,EALI,KAKM+O,EALN,KAOPN,IACFF,GAEG,IADDE,EAASnD,WAAU,SAAClJ,GAAD,OAAUA,EAAK4L,aAAegB,OAAOhB,OAG5D,IAAMiB,EACkB,kBAAfjB,GAA2BA,EAAWnU,QAAU,GAuBzD,OACE,wBAAIlE,UAAU,kBACZ,wBAAIA,UAAU,kBACXgZ,EACD,0BAAMhZ,UAAU,oBACb4Y,GAAe,gCAA4B,IAC3CU,GAAiB,sDAGtB,wBAAItZ,UAAU,kBAAkBiZ,GAChC,wBAAIjZ,UAAU,kBAAkBkZ,GAChC,wBAAIlZ,UAAU,kBAAkBmZ,GAChC,wBAAInZ,UAAU,kBAAkBoZ,GAChC,wBAAIpZ,UAAU,kBACZ,8BACkB,KAAfqY,GACS,KAAVnO,GACS,KAATC,GACa,KAAbC,GACa,KAAbC,GACCuO,GACAU,EAMC,kBAAC,IAAD,CACEjZ,QAAS,kBAAMwY,GAAc,IAC7B7Y,UAAU,uBAPZ,kBAAC,KAAD,CACEA,UAAU,mBACVK,QAAS,kBA9CM,WACzB,IAAMkZ,EAAW,CACflB,WAAYgB,OAAOhB,GACnBnO,MAAOoL,OAAOpL,GACdC,KAAMmL,OAAOnL,GACbC,SAAUkL,OAAOlL,GACjBC,SAAUiL,OAAOjL,IAEnB,GAAI0O,EAAe,CACjB,IAAIS,EAAY,GAEdA,EADEV,EACO,uBAAOA,GAAP,CAAiBS,IAEd,CAACA,GAEf/Z,IACGqG,WACAtF,IAFH,gBAEgBwY,EAFhB,iBAEsC9V,EAFtC,iBAEiDmV,EAFjD,UAGGjQ,IAAIqR,GACPX,GAAc,IA2BSY,UCedC,I,OAvEG,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,MAAOhC,EAAiC,EAAjCA,KAAMS,EAA2B,EAA3BA,UAAWnV,EAAgB,EAAhBA,GACnCvC,EAAgBC,qBAAWC,GAA3BF,YADmD,EAEvBzB,oBAAS,GAFc,mBAEpD2a,EAFoD,KAExCf,EAFwC,KAGrDzB,EAAS9O,EAiBf,OACE,2BAAOnG,IAAKwV,EAAKkC,SAAU7Z,UAAU,cACnC,2BAAOA,UAAU,qBACf,wBAAIA,UAAU,kBACZ,wBAAIA,UAAU,kBAAkB2X,EAAKkC,UACpCzC,EAAOnV,KAAI,SAACgL,GAAD,OACV,wBAAI9K,IAAK8K,EAAOjN,UAAU,kBACvBiN,MAIL,wBAAIjN,UAAU,kBACZ,kBAAC,KAAD,CAAcK,QAAS,kBAvBR,SAACwZ,GACxB,GAAInZ,EAAa,CACf,IAAMoZ,EAAmBH,EAAMxD,QAC7B,SAAC1J,GAAD,OAAUA,EAAKoN,WAAaA,KAE9Bra,IACGqG,WACAtF,IAFH,gBAEgBG,EAAYiH,IAF5B,iBAEwC1E,EAFxC,UAGGkF,IAHH,aAGW2R,KAewBC,CAAiBpC,EAAKkC,gBAIzD,2BAAO7Z,UAAU,qBACd2X,EAAKnG,MACJmG,EAAKnG,KAAKvP,KAAI,SAACwK,EAAMC,GACnB,OACE,kBAAC,GAAD,CACEvK,IAAKsK,EAAK4L,WACVV,KAAMA,EACNlL,KAAMA,EACNC,MAAOA,EACP0L,UAAWA,EACXnV,GAAIA,OAIX2W,GAAclZ,GACb,kBAAC,GAAD,CACEmY,cAAeA,EACfC,SAAUnB,EAAKnG,KACfuH,cAAerY,EAAYiH,IAC3B1E,GAAIA,EACJmV,UAAWA,IAGf,wBAAIpY,UAAU,kBACZ,wBAAIA,UAAU,kBACZ,kBAAC,EAAD,CAAQK,QAxDW,WAC3BwY,GAAc,KAuDN,UAEF,kBAAC,GAAD,CAAoBlB,KAAMA,EAAMP,OAAQA,IACxC,wBAAIpX,UAAU,wBCxDTga,GAnBE,SAAC,GAA0B,IAAxBL,EAAuB,EAAvBA,MAAO1W,EAAgB,EAAhBA,GACzB,OACE,oCACG0W,GACCA,EAAM1X,KAAI,SAAC0V,EAAMjL,GACf,OACE,kBAAC,GAAD,CACEvK,IAAKwV,EAAKkC,SACVF,MAAOA,EACPhC,KAAMA,EACNS,UAAW1L,EACXzJ,GAAIA,SCyDHgX,GAhEC,SAAC,GAAwD,IAAtDN,EAAqD,EAArDA,MAAOd,EAA8C,EAA9CA,cAAeE,EAA+B,EAA/BA,cAAe9V,EAAgB,EAAhBA,GAChDiX,EAAe9Y,iBAAyB,MADwB,EAEpCnC,mBAAS,IAF2B,mBAE/Dkb,EAF+D,KAEpDC,EAFoD,KAGhEhD,EAAS9O,EACTgR,EAAgBa,EAAUjW,QAAU,GAgB1C,OALAyB,qBAAU,WACJuU,EAAa5Y,SACf4Y,EAAa5Y,QAAQ+Y,UAEtB,IAED,2BAAOlY,IAAI,WAAWnC,UAAU,cAC9B,2BAAOA,UAAU,qBACf,wBAAIA,UAAU,kBACZ,wBAAIA,UAAU,kBACZ,2BACEkD,KAAK,OACLa,MAAOoW,EACPvX,YAAY,QACZ8T,SAAU,SAACC,GAAD,OAAOyD,EAAazD,EAAEC,OAAO7S,QACvCxD,IAAK2Z,IAEP,0BAAMla,UAAU,sBAC+C,IAA5D2Z,EAAMhE,WAAU,SAACgC,GAAD,OAAUA,EAAKkC,WAAaM,MAC3C,oBAAgB,IACjBb,GAAiB,sDAGrBlC,EAAOnV,KAAI,SAACgL,GAAD,OACV,wBAAI9K,IAAK8K,EAAOjN,UAAU,kBACvBiN,MAIL,wBAAIjN,UAAU,kBACX2Z,IAC2D,IAA5DA,EAAMhE,WAAU,SAACgC,GAAD,OAAUA,EAAKkC,WAAaM,MAC9B,KAAdA,IACCb,EACC,kBAAC,KAAD,CACEtZ,UAAU,wBACVK,QAAS,kBA7CjB0Y,IACFvZ,IACGqG,WACAtF,IAFH,gBAEgBwY,EAFhB,iBAEsC9V,EAFtC,UAGGkF,IAHH,uBAGWwR,GAHX,CAGkB,CAAEE,SAAUM,MAC9BtB,GAAc,SAEhBA,GAAc,MAyCJ,kBAAC,KAAD,CAAcxY,QAAS,kBAAMwY,GAAc,SAKnD,2BAAO7Y,UAAU,wBC7DRsa,I,OAfA,SAAC,GAA2C,IAAzC5B,EAAwC,EAAxCA,mBAAoBtB,EAAoB,EAApBA,OACpC,OACE,wBAAIpX,UAAU,oBACZ,wBAAIA,UAAU,oBAAd,SACC0Y,EAAmBzW,KAAI,SAACiB,EAAMwJ,GAC7B,OACE,wBAAIvK,IAAKiV,EAAO1K,GAAQ1M,UAAU,oBAC/BkD,SCMEqX,GAbG,SAAC,GAA6B,IAA3BnD,EAA0B,EAA1BA,OAAQM,EAAkB,EAAlBA,KAC3B,OACE,wBAAI1X,UAAU,oBACZ,wBAAIA,UAAU,oBAAd,gBACCoX,EAAOnV,KAAI,SAACgL,EAAOP,GAAR,OACV,wBAAIvK,IAAK8K,EAAOjN,UAAU,yBACPoD,IAAhBsU,EAAKhL,GAAuB,IAAMgL,EAAKhL,SCkCnC8N,GAvCS,SAAC,GAAiD,IAA/C9B,EAA8C,EAA9CA,mBAAoBhB,EAA0B,EAA1BA,KAAMN,EAAoB,EAApBA,OACnD,OACE,oCACE,wBAAIpX,UAAU,oBACZ,wBAAIA,UAAU,oBAAd,kBACC0Y,EAAmBzW,KAAI,SAACiB,EAAMwJ,GAC7B,IAAM+N,OACYrX,IAAhBsU,EAAKhL,GAAuB,IAAMxJ,EAAOwU,EAAKhL,GAChD,OAAI+N,GAAe,EAEf,wBACEtY,IAAKiV,EAAO1K,GACZ1M,UAAU,6CAETya,GAGoB,MAAhBA,EAEP,wBAAItY,IAAKiV,EAAO1K,GAAQ1M,UAAU,oBAC/Bya,GAKH,wBACEtY,IAAKiV,EAAO1K,GACZ1M,UAAU,6CAETya,SChBFC,GAfD,SAAC,GAAuB,IAArBtD,EAAoB,EAApBA,OACf,OACE,2BAAOpX,UAAU,uBACf,wBAAIA,UAAU,oBACZ,wBAAIA,UAAU,qBACboX,EAAOnV,KAAI,SAACgL,GAAD,OACV,wBAAI9K,IAAK8K,EAAOjN,UAAU,oBACvBiN,SCqEE0N,GAxDK,SAAC,GAAqC,IAAnChB,EAAkC,EAAlCA,MAAOZ,EAA2B,EAA3BA,cACtBL,EAAqB,CAAC,EAAG,EAAG,EAAG,GAC/BtB,EAAS9O,EAFwC,EAG/BrJ,mBAAS,CAAC,EAAG,EAAG,EAAG,IAHY,mBAGhDyY,EAHgD,KAG1CkD,EAH0C,OAI/B3b,oBAAS,GAJsB,mBAIhD6Y,EAJgD,KAI1CC,EAJ0C,KAKvD4B,EAAMnO,SAAQ,SAACmM,GACTA,EAAKnG,MACPmG,EAAKnG,KAAKhG,SAAQ,SAACiB,GACjBiM,EAAmB,IAAMjM,EAAKvC,MAC9BwO,EAAmB,IAAMjM,EAAKtC,KAC9BuO,EAAmB,IAAMjM,EAAKrC,SAC9BsO,EAAmB,IAAMjM,EAAKpC,eAIpC,IAAM2N,EAAa,SAACxS,GAClB,GAAIA,EAASC,MAAO,CAAC,IAAD,EAC0BD,EAASC,MAA7CyE,EADU,EACVA,MAAOC,EADG,EACHA,KAAMC,EADH,EACGA,SAAUC,EADb,EACaA,SAC/BuQ,EAAQ,CAAC1Q,EAAOC,EAAMC,EAAUC,IAChC0N,GAAQ,KAcZ,OAXApS,qBAAU,WACR,GAAIoT,EAAe,CACjB,IAAMxY,EAAMf,IACTqG,WACAtF,IAAI,SAAWwY,EAAgB,kBAElC,OADAxY,EAAIuL,GAAG,QAASkM,GACT,WACLzX,EAAIwF,IAAI,QAASiS,OAGpB,CAACe,IAEF,oCACGjB,GACC,2BAAO9X,UAAU,gBACf,2BAAOA,UAAU,uBACf,kBAAC6a,GAAD,CACEnC,mBAAoBA,EACpBtB,OAAQA,IAEV,kBAAC,GAAD,CAAWM,KAAMA,EAAMN,OAAQA,IAC/B,kBAAC,GAAD,CACEsB,mBAAoBA,EACpBhB,KAAMA,EACNN,OAAQA,KAGZ,kBAAC,GAAD,CAAOA,OAAQA,OCWV0D,GA/DC,WAAO,IACbpa,EAAgBC,qBAAWC,GAA3BF,YACFiS,EAAiBoI,cACjBpX,EAAUC,cAHI,EAIM3E,mBAAsB,IAJ5B,mBAIb0a,EAJa,KAINqB,EAJM,OAKY/b,oBAAS,GALrB,mBAKbkG,EALa,KAKHC,EALG,KAMd6V,EAAgB,SAAUzV,GAC9B,IAAM0V,EAA4B,GAClC1V,EAASgG,SAAQ,SAAUC,GACzB,IAAMC,EAAYD,EAAchG,MAChCyV,EAAavP,KAAKD,MAEpBsP,EAASE,IAZS,EAcgBjc,oBAAS,GAdzB,mBAcb2a,EAda,KAcDf,EAdC,KAepBlT,qBAAU,WACR,GAAIjF,EAAa,CACf,IAAMH,EAAMf,IACTqG,WACAtF,IAAI,SAAWG,EAAYiH,IAAM,SAAWgL,EAAO1P,GAAK,SAG3D,OAFA1C,EAAIuL,GAAG,QAASmP,GAChB7V,GAAY,GACL,WACL7E,EAAIwF,IAAI,QAASkV,OAGpB,CAACva,EAAaiS,EAAO1P,KAWxB,OACE,0BAAMjD,UAAU,YACd,kBAAC,EAAD,CAAcoG,WAXU,WACtB1F,IACFlB,IACGqG,WACAtF,IAFH,gBAEgBG,EAAYiH,IAF5B,iBAEwCgL,EAAO1P,KAC5CxB,SACHkC,EAAQE,WAKuCwC,UAAU,yBACxDlB,EACC,6BAASnF,UAAU,qBACjB,kBAAC,EAAD,CAAQK,QAAS,kBAAMwY,GAAc,KAArC,sBACA,kBAAC,GAAD,CAAUc,MAAOA,EAAO1W,GAAI0P,EAAO1P,KAClC2W,GAAclZ,GACb,kBAAC,GAAD,CACEiZ,MAAOA,EACPd,cAAeA,EACfE,cAAerY,EAAYiH,IAC3B1E,GAAI0P,EAAO1P,KAGG,IAAjB0W,EAAMzV,QAAgBxD,GACrB,kBAAC,GAAD,CAAaiZ,MAAOA,EAAOZ,cAAerY,EAAYiH,OAI1D,kBAAC,EAAD,QCWOwT,I,aA1DF,SAAC,GAA4B,IAA1Bza,EAAyB,EAAzBA,YAAyB,EACPzB,qBADO,mBAChCmc,EADgC,KACtBC,EADsB,KAEjCC,EAAiB,SAAU9V,GAC/B6V,EAAY,CACVxZ,OAAQ,CACN,CACEO,KAAM,OACNC,SAAU8B,EAAkBL,EAAS,2BACrCvB,aAAciD,EAASkC,MAAM,QAAQjC,MACrC1C,KAAM,YACNH,YAAa,aAEf,CACER,KAAM,UACNC,SAAU8B,EAAkBL,EAAS,2BACrCvB,aAAciD,EAASkC,MAAM,WAAWjC,MACxC1C,KAAM,WACNH,YAAa,aAGjBd,OAAQ,CACNiB,KAAM,iBAIZ4C,qBAAU,WACR,GAAIjF,EAAa,CACf,IAAMH,EAAMf,IACTqG,WACAtF,IAAI,SAAWG,EAAYiH,IAAM,kBAEpC,OADApH,EAAIuF,KAAK,QAASwV,GACX,WACL/a,EAAIwF,IAAI,QAASuV,OAGpB,CAAC5a,IAWJ,OACE,yBAAKV,UAAU,QACb,wBAAIA,UAAU,YAAd,QACCob,EACC,kBAAC,EAAD,CAAczZ,WAAYyZ,EAAUxZ,aAdrB,SAACoE,GAChBtF,IACFlB,IACGqG,WACAtF,IAAI,SAAWG,EAAYiH,IAAM,kBACjCQ,IAAInC,GACP+N,YAAM,2BAUJ,kBAAC,EAAD,SC6BO6D,I,OAtFF,SAAC,GAA4B,IAA1BlX,EAAyB,EAAzBA,YAAyB,EACfzB,qBADe,mBAChCyY,EADgC,KAC1BkD,EAD0B,KAEjC5C,EAAa,SAAUxS,GAC3BoV,EAAQ,CACN/Y,OAAQ,CACN,CACEO,KAAM,QACNG,aAAciD,EAASkC,MAAM,SAASjC,MACtC1C,KAAM,mBACNH,YAAa,mBACbM,KAAM,SACNC,KAAM,IACNE,IAAK,KAEP,CACEjB,KAAM,OACNG,aAAciD,EAASkC,MAAM,QAAQjC,MACrC1C,KAAM,gBACNH,YAAa,gBACbM,KAAM,SACNC,KAAM,IACNE,IAAK,KAEP,CACEjB,KAAM,WACNG,aAAciD,EAASkC,MAAM,YAAYjC,MACzC1C,KAAM,cACNH,YAAa,cACbM,KAAM,SACNC,KAAM,IACNE,IAAK,KAEP,CACEjB,KAAM,WACNG,aAAciD,EAASkC,MAAM,YAAYjC,MACzC1C,KAAM,UACNH,YAAa,UACbM,KAAM,SACNC,KAAM,IACNE,IAAK,MAGTvB,OAAQ,CACNiB,KAAM,iBAIZ4C,qBAAU,WACR,GAAIjF,EAAa,CACf,IAAMH,EAAMf,IACTqG,WACAtF,IAAI,SAAWG,EAAYiH,IAAM,kBAEpC,OADApH,EAAIuF,KAAK,QAASkS,GACX,WACLzX,EAAIwF,IAAI,QAASiS,OAGpB,CAACtX,IAiBJ,OACE,yBAAKV,UAAU,QACb,wBAAIA,UAAU,YAAd,SACC0X,EACC,kBAAC,EAAD,CAAc/V,WAAY+V,EAAM9V,aApBjB,SAACoE,GACpB,IAAK,IAAIuV,KAAYvV,EACM,OAArBA,EAAOuV,SAA2CnY,IAArB4C,EAAOuV,UAC/BvV,EAAOuV,GAEdvV,EAAOuV,GAAYjG,OAAOtP,EAAOuV,IAGjC7a,IACFlB,IACGqG,WACAtF,IAAI,SAAWG,EAAYiH,IAAM,kBACjCQ,IAAInC,GACP+N,YAAM,iCASJ,kBAAC,EAAD,SChCOyH,I,OAxDO,SAAC,GAA4B,IAA1B9a,EAAyB,EAAzBA,YAAyB,EACRzB,oBAAS,GADD,mBACzCwc,EADyC,KAC3BC,EAD2B,OAEJzc,oBAAS,GAFL,mBAEzC0c,EAFyC,KAEzBC,EAFyB,OAGhB3c,mBAAiB,IAHD,mBAGzC4c,EAHyC,KAG/BC,EAH+B,KA0BhD,OACE,yBAAK9b,UAAU,mBACXyb,GACA,kBAAC,EAAD,CAAQpb,QAAS,kBAAMqb,GAAgB,KAAvC,mBAEDD,GACC,oCACE,wBAAIzb,UAAU,sBAAd,2CACA,yBAAKA,UAAU,2BACb,2BAAO2C,QAAQ,WAAW3C,UAAU,yBAApC,cAGA,2BACEkD,KAAK,OACLwT,SAAU,SAACC,GAAD,OAAOmF,EAAYnF,EAAEC,OAAO7S,QACtCA,MAAO8X,EACP7b,UAAU,wBACViD,GAAG,aAEJ0Y,GACC,uBAAG3b,UAAU,iCAAb,0BAEF,kBAAC,EAAD,CAAQK,QA5CG,WACnB,GAAIK,EAAa,CACf,IAAMqb,EAAavc,IAASC,KAAKI,kBAAkBkc,WACjDrb,EAAYwH,MACZ2T,GAEFnb,EACGsb,6BAA6BD,GAC7Bhb,MAAK,WACJL,EAAYub,SAASlb,MAAK,WACxBvB,IACGqG,WACAtF,IAAI,SAAWG,EAAYiH,KAC3BlG,eAGNya,OAAM,WACLN,GAAkB,SA2BhB,YC5CGO,I,OAlBE,WAAO,IACdzb,EAAgBC,qBAAWC,GAA3BF,YAER,OACE,0BAAMV,UAAU,YACbU,EACC,oCACE,kBAAC,GAAD,CAAMA,YAAaA,IACnB,kBAAC,GAAD,CAAMA,YAAaA,IACnB,kBAAC,GAAD,CAAeA,YAAaA,KAG9B,kBAAC,EAAD,SCIO0b,I,OAjBE,WACf,IAAMzY,EAAUC,cAIhB,OACE,0BAAM5D,UAAU,aACd,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,gBAAd,6BACA,kBAAC,EAAD,CAAQK,QAPe,WAC3BsD,EAAQgI,KAAK,OAMT,8C,UC8EO0Q,GAhEH,WACV,OACE,kBAACC,GAAA,EAAD,KACE,kBAAC,IAAMC,SAAP,CAAgBC,SAAU,kBAAC,EAAD,OACxB,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAQC,SAAS,sBACf,kBAAC,IAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UACV,kBAACC,EAAD,OAEF,kBAAC,EAAD,CACED,KAAK,aACL1Z,UAAW0M,GACXrO,OAAO,IAET,kBAAC,EAAD,CACEqb,KAAK,iBACL1Z,UAAWyP,GACXpR,OAAO,IAET,kBAAC,EAAD,CACEqb,KAAK,qBACL1Z,UAAWgR,GACX3S,OAAO,IAET,kBAAC,EAAD,CACEqb,KAAK,cACLrb,OAAO,EACP2B,UAAW8T,KAOb,kBAAC,EAAD,CACE4F,KAAK,QACLrb,OAAO,EACP2B,UAAW4U,KAEb,kBAAC,EAAD,CACE8E,KAAK,YACLrb,OAAO,EACP2B,UAAW8X,KAEb,kBAAC,EAAD,CACE4B,KAAK,YACLrb,OAAO,EACP2B,UAAWmZ,KAEb,kBAAC,IAAD,CAAOO,KAAK,KACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAO1Z,UAAWoZ,WCtEZQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrK,MACvB,2DCbNsK,IAAS/V,OACP,kBAAC,IAAMgW,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDkIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvc,MAAK,SAAAwc,GACJA,EAAaC,gBAEdtB,OAAM,SAAAlb,GACLyc,QAAQzc,MAAMA,EAAM0c,e","file":"static/js/main.8f760822.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./login.scss\";\r\ntype options = {\r\n  provider: any;\r\n  fullLabel: string;\r\n};\r\nexport type Test = {\r\n  signInFlow: string;\r\n  signInOptions: Array<options>;\r\n  callbacks: any;\r\n};\r\nconst LoginPage = () => {\r\n  const [isSignedIn, setIsSignedIn] = useState(false);\r\n  const uiConfig: Test = {\r\n    signInFlow: \"popup\",\r\n    signInOptions: [\r\n      {\r\n        provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n        fullLabel: \"Logowanie za pomocą google\",\r\n      },\r\n      {\r\n        provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n        fullLabel: \"Logowanie za pomocą email\",\r\n      },\r\n    ],\r\n    callbacks: {\r\n      signInSuccessWithAuthResult: () => {\r\n        setIsSignedIn(true);\r\n        return false;\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <main className=\"login\">\r\n      <div className=\"login__div\">\r\n        {isSignedIn ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <StyledFirebaseAuth\r\n            uiConfig={uiConfig}\r\n            firebaseAuth={firebase.auth()}\r\n          />\r\n        )}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport \"./LoadingIndicator.scss\";\r\nconst LoadingIndicator = () => {\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"root__div\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingIndicator;\r\n","import React from \"react\";\r\nimport \"./Hamburger.scss\";\r\n\r\nexport type props<T> = {\r\n  onClick: () => void;\r\n  hamburgerActive: T;\r\n};\r\nconst Hamburger = ({ onClick, hamburgerActive }: props<any>) => {\r\n  return (\r\n    <button className=\"hamburger\" onClick={onClick}>\r\n      <div className=\"hamburger__box\">\r\n        <div ref={hamburgerActive} className=\"hamburger__inner inner\">\r\n          <div className=\"inner__before\"></div>\r\n          <div className=\"inner__after\"></div>\r\n        </div>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Hamburger;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"./navigation.scss\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nexport type props = {\r\n  handleHamburger: () => void;\r\n};\r\n\r\nconst Navigation = ({ handleHamburger }: props) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const handleSignOut = () => {\r\n    handleHamburger();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(\r\n        function () {},\r\n        function (error) {}\r\n      );\r\n  };\r\n  return (\r\n    <nav className=\"navigation\">\r\n      <ul className=\"navigation__ul\">\r\n        {currentUser ? (\r\n          <>\r\n            <li className=\"navigation__li\">\r\n              <NavLink\r\n                activeClassName=\"navigation--active\"\r\n                onClick={handleHamburger}\r\n                to=\"/trainings\"\r\n                className=\"navigation__a\"\r\n              >\r\n                Treningi\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navigation__li\">\r\n              <NavLink\r\n                activeClassName=\"navigation--active\"\r\n                onClick={handleHamburger}\r\n                to=\"/statistics\"\r\n                className=\"navigation__a\"\r\n              >\r\n                Statystyki\r\n              </NavLink>\r\n            </li>\r\n            {/* <li className=\"navigation__li\">\r\n                <NavLink\r\n                  activeClassName=\"navigation--active\"\r\n                  onClick={handleHamburger}\r\n                  to=\"/measurement\"\r\n                  className=\"navigation__a\"\r\n                >\r\n                  Pomiary\r\n                </NavLink>\r\n              </li> */}\r\n            <li className=\"navigation__li\">\r\n              <NavLink\r\n                activeClassName=\"navigation--active\"\r\n                onClick={handleHamburger}\r\n                to=\"/diet\"\r\n                className=\"navigation__a\"\r\n              >\r\n                Dieta\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navigation__li\">\r\n              <NavLink\r\n                activeClassName=\"navigation--active\"\r\n                onClick={handleHamburger}\r\n                to=\"/settings\"\r\n                className=\"navigation__a\"\r\n              >\r\n                Ustawienia\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"navigation__li navigation__logout\">\r\n              <a\r\n                onClick={handleSignOut}\r\n                href=\"/workout-app-react\"\r\n                className=\"navigation__a\"\r\n              >\r\n                Wyloguj\r\n              </a>\r\n            </li>\r\n          </>\r\n        ) : (\r\n          <li className=\"navigation__li navigation__login\">\r\n            <NavLink\r\n              activeClassName=\"navigation--active\"\r\n              onClick={handleHamburger}\r\n              className=\"navigation__a\"\r\n              to=\"/login\"\r\n            >\r\n              Logowanie / Rejestracja\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useRef } from \"react\";\r\nimport \"./header.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Navigation from \"./components\";\r\nimport { Hamburger } from \"components\";\r\nconst Header = () => {\r\n  const header = useRef<HTMLElement>(null);\r\n  const hamburgerActive = useRef<HTMLDivElement>(null);\r\n\r\n  const onClick = () => {\r\n    hamburgerActive.current?.classList.toggle(\"is-active-hamburger\");\r\n    header.current?.classList.toggle(\"header--active\");\r\n  };\r\n  const handleHamburger = () => {\r\n    hamburgerActive.current?.classList.remove(\"is-active-hamburger\");\r\n    header.current?.classList.remove(\"header--active\");\r\n  };\r\n  return (\r\n    <>\r\n      <header ref={header} className=\"header\">\r\n        <h1 className=\"header__logo\">\r\n          <NavLink\r\n            to=\"/\"\r\n            exact\r\n            activeClassName=\"navigation--active\"\r\n            className=\"header__link\"\r\n          >\r\n            TO DO WORKOUT\r\n          </NavLink>\r\n        </h1>\r\n        <div className=\"header__hamburger\">\r\n          <Hamburger onClick={onClick} hamburgerActive={hamburgerActive} />\r\n        </div>\r\n        <div className=\"header__links\">\r\n          <Navigation handleHamburger={handleHamburger} />\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport \"./FormTemplate.scss\";\r\ntype Fields = {\r\n  name: string;\r\n  validate?: (fn: () => void) => void;\r\n  initialValue: any;\r\n  placeholder: string;\r\n  text: string;\r\n  type?: string;\r\n  parse?: ((value: any, name: string) => () => void) | undefined;\r\n  component?: string;\r\n  min?: string;\r\n  max?: string;\r\n  step?: string;\r\n};\r\ntype Button = {\r\n  type?: \"submit\";\r\n  text: string;\r\n};\r\ntype formFields = {\r\n  fields: Array<Fields>;\r\n  button: Button;\r\n};\r\n\r\nexport type props = {\r\n  formFields: formFields;\r\n  handleSubmit: (values: any) => void;\r\n};\r\nconst FormTemplate = ({ formFields, handleSubmit }: props) => {\r\n  const { fields, button } = formFields;\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      {(props) => (\r\n        <form onSubmit={props.handleSubmit} className=\"form\">\r\n          {fields.map((formField: any) => {\r\n            return (\r\n              <Field\r\n                key={formField.name}\r\n                name={formField.name}\r\n                validate={formField.validate}\r\n                defaultValue={formField.initialValue}\r\n                parse={formField.parse}\r\n              >\r\n                {({ input, meta }) => (\r\n                  <div className=\"form__wrapper\">\r\n                    <label\r\n                      className=\"form__label\"\r\n                      htmlFor={formField.placeholder\r\n                        .replace(/\\s/g, \"\")\r\n                        .toLowerCase()}\r\n                    >\r\n                      {formField.text}\r\n                    </label>\r\n                    {formField.component === \"textarea\" ? (\r\n                      <textarea\r\n                        {...input}\r\n                        className=\"form__textarea\"\r\n                        placeholder={\"Opis\"}\r\n                      />\r\n                    ) : (\r\n                      <input\r\n                        {...input}\r\n                        id={formField.placeholder\r\n                          .replace(/\\s/g, \"\")\r\n                          .toLowerCase()}\r\n                        className=\"form__input\"\r\n                        type={formField.type}\r\n                        step={formField.step ? formField.step : undefined}\r\n                        min={formField.min ? formField.min : undefined}\r\n                        max={formField.max ? formField.max : undefined}\r\n                        placeholder={formField.placeholder}\r\n                      />\r\n                    )}\r\n                    {meta.error && meta.touched && (\r\n                      <span className=\"form__span\">{meta.error}</span>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            );\r\n          })}\r\n\r\n          <button type={button.type} className=\"form__button\">\r\n            {button.text}\r\n          </button>\r\n        </form>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormTemplate;\r\n","import React from \"react\";\r\nimport \"./button.scss\";\r\ntype props = {\r\n  onClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n  children: any;\r\n};\r\n\r\nconst Button = ({ onClick, children }: props) => {\r\n  return (\r\n    <button onClick={onClick} className=\"button\">\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import \"./arrow.scss\";\r\nimport React from \"react\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from \"components\";\r\n\r\nconst Arrow = () => {\r\n  const history = useHistory();\r\n  const handleArrowClick = () => {\r\n    history.goBack();\r\n  };\r\n  return (\r\n    <div className=\"arrow\">\r\n      <Button onClick={handleArrowClick}>\r\n        <IoIosArrowBack />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","export const required = (text: string) => (\r\n  value: string | number\r\n): undefined | string => (value ? undefined : text);\r\nexport const checkAtSign = (text: string) => (value: string) =>\r\n  value.includes(\"@\") ? undefined : text;\r\nexport const mustBeNumber = (text: string) => (\r\n  value: number\r\n): string | undefined => (isNaN(value) ? text : undefined);\r\nexport const minValue = (min: number, text: string) => (value: string) =>\r\n  isNaN(value.length) || value.length >= min ? undefined : text;\r\nexport const mustBeAmount = (text: string) => (value: string) =>\r\n  value.length === Number(value).toString().length ? undefined : text;\r\nexport const maxValue = (max: number, text: string) => (value: string) =>\r\n  isNaN(value.length) || value.length <= max ? undefined : text;\r\nexport const uniqueMealName = (items: any, text: string) => (value: string) =>\r\n  items.find((item: any) => item.mealName === value) === undefined\r\n    ? undefined\r\n    : text;\r\n\r\nexport const composeValidators = (...validators: any) => (value: any) =>\r\n  validators.reduce(\r\n    (error: any, validator: any) => error || validator(value),\r\n    undefined\r\n  );\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\nimport { FormTemplate } from \"components\";\r\nimport firebase from \"firebase/app\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\nimport \"./editTitle.scss\";\r\nimport LoadingIndicator from \"components/LoadingIndicator\";\r\nexport type props = {\r\n  labelText: string;\r\n  editDate: boolean;\r\n  refUrl: string;\r\n  isActiveEditing: boolean;\r\n  setIsActiveEditing: (value: boolean) => void;\r\n};\r\n\r\nconst EditTitle = ({\r\n  labelText,\r\n  editDate,\r\n  refUrl,\r\n  isActiveEditing,\r\n  setIsActiveEditing,\r\n}: props) => {\r\n  const [workoutName, setWorkoutName] = useState();\r\n  const [editTimeDate, setEditTimeDate] = useState();\r\n  const [editName, setEditName] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const formFields = {\r\n    fields: [\r\n      {\r\n        name: \"workoutName\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: workoutName,\r\n        text: labelText,\r\n        placeholder: \"Nazwa treningu\",\r\n        type: \"text\",\r\n      },\r\n    ],\r\n    button: {\r\n      text: \"Potwierdź zmiany\",\r\n    },\r\n  };\r\n  if (editDate) {\r\n    formFields.fields.unshift({\r\n      name: \"date\",\r\n      validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n      initialValue: editTimeDate,\r\n      text: labelText,\r\n      placeholder: \"Data treningu\",\r\n      type: \"datetime-local\",\r\n    });\r\n  }\r\n  const handleClickIcon = () => {\r\n    setEditName(!editName);\r\n    setIsActiveEditing(!isActiveEditing);\r\n  };\r\n  const saveEditedTraining = (workoutName: string, date?: string) => {\r\n    if (date) {\r\n      firebase.database().ref(refUrl).update({ workoutName, date });\r\n    } else {\r\n      firebase.database().ref(refUrl).update({ workoutName });\r\n    }\r\n  };\r\n  const handleSubmit = (values: any) => {\r\n    saveEditedTraining(values.workoutName, values.date);\r\n    setWorkoutName(values.workoutName);\r\n    if (editDate) {\r\n      setEditTimeDate(values.date);\r\n    }\r\n\r\n    handleClickIcon();\r\n  };\r\n  const loadTrainingName = function (snapshot: any) {\r\n    setWorkoutName(snapshot.val().workoutName);\r\n    setEditTimeDate(snapshot.val().date);\r\n    setIsLoaded(true);\r\n  };\r\n  useEffect(() => {\r\n    const newRef = firebase.database().ref(refUrl);\r\n    newRef.once(\"value\").then(loadTrainingName);\r\n\r\n    return () => {\r\n      newRef.off(\"value\", loadTrainingName);\r\n    };\r\n  }, [refUrl]);\r\n  return (\r\n    <>\r\n      {editName ? (\r\n        <FormTemplate formFields={formFields} handleSubmit={handleSubmit} />\r\n      ) : isLoaded ? (\r\n        <div className=\"edit-title__div\">\r\n          <h2 className=\"edit-title__h2\">{workoutName}</h2>\r\n          <div className=\"edit-title__div-icon\">\r\n            <BiEditAlt\r\n              onClick={handleClickIcon}\r\n              className=\"edit-title__icon-edit\"\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <LoadingIndicator />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTitle;\r\n","import React from \"react\";\r\nimport { Button, Arrow } from \"components\";\r\nimport \"./goBackDelete.scss\";\r\nexport type props = {\r\n  handleEdit: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n  editTitle: string;\r\n};\r\n\r\nconst GoBackDelete = ({ handleEdit, editTitle }: props) => {\r\n  return (\r\n    <section className=\"go-back-delete\">\r\n      <Arrow />\r\n      <Button onClick={handleEdit}>{editTitle}</Button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default GoBackDelete;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Chart as ChartJS } from \"chart.js\";\r\nimport \"./chart.scss\";\r\n\r\nexport type props = {\r\n  specification: any;\r\n  children: any;\r\n};\r\nconst Chart = ({ specification, children }: props) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  useEffect(() => {\r\n    if (canvasRef.current !== null) {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      if (ctx) {\r\n        const chart = new ChartJS(ctx, specification);\r\n        return () => {\r\n          chart.destroy();\r\n        };\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {children ? <h1 className=\"chart__h1\">{children}</h1> : null}\r\n      <canvas className=\"chart__canvas\" ref={canvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nexport type props = {\r\n  component: any;\r\n  exact: boolean;\r\n  path: string;\r\n};\r\nconst PrivateRoute = ({\r\n  component: RouteComponent,\r\n\r\n  ...rest\r\n}: props) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect, useState, createContext } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { LoadingIndicator } from \"components\";\r\nexport const AuthContext = createContext<Partial<ContextProps>>({});\r\ntype ContextProps = { currentUser: user | null };\r\ntype user = {\r\n  uid: string;\r\n  displayName: string;\r\n  providerData: any;\r\n  updateEmail: any;\r\n  delete: any;\r\n  reauthenticateWithCredential: any;\r\n  email: string;\r\n};\r\ntype props = {\r\n  children: any;\r\n};\r\nconst AuthProvider = ({ children }: props) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const writeUserData = (\r\n      userId: string,\r\n      email: string,\r\n      name: string,\r\n      surname: string\r\n    ) => {\r\n      firebase\r\n        .database()\r\n        .ref(\"users/\" + userId)\r\n        .set({\r\n          email: email,\r\n        });\r\n      firebase\r\n        .database()\r\n        .ref(\"users/\" + userId + \"/settings/user\")\r\n        .set({\r\n          name,\r\n          surname,\r\n        });\r\n    };\r\n    firebase.auth().onAuthStateChanged((user: any) => {\r\n      if (user) {\r\n        let rootRef = firebase.database().ref(\"users/\");\r\n        rootRef.child(user.uid).once(\"value\", function (snapshot: any) {\r\n          let exists = snapshot.val() !== null;\r\n          if (!exists) {\r\n            const name = user.displayName.split(\" \")[0];\r\n            const surname = user.displayName.split(\" \").slice(1).join(\" \");\r\n            writeUserData(user.uid, user.email, name, surname);\r\n          } else {\r\n          }\r\n        });\r\n      }\r\n      setCurrentUser(user);\r\n      setPending(false);\r\n    });\r\n  }, []);\r\n\r\n  if (pending) {\r\n    return <LoadingIndicator />;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthProvider;\r\n","export const ingredientTitles = [\r\n  \"Węglowodany\",\r\n  \"Tłuszcze\",\r\n  \"Białko\",\r\n  \"Kalorie\",\r\n];\r\nexport const namesOfDaysOfWeekArray = [\r\n  \"Niedziela\",\r\n  \"Poniedziałek\",\r\n  \"Wtorek\",\r\n  \"Środa\",\r\n  \"Czwartek\",\r\n  \"Piątek\",\r\n  \"Sobota\",\r\n];\r\nexport const namesOfTheMonths = [\r\n  \"Stycznia\",\r\n  \"Lutego\",\r\n  \"Marca\",\r\n  \"Kwietnia\",\r\n  \"Maja\",\r\n  \"Czerwca\",\r\n  \"Lipca\",\r\n  \"Sierpnia\",\r\n  \"Września\",\r\n  \"Października\",\r\n  \"Listopada\",\r\n  \"Grudnia\",\r\n];\r\nexport const monthsNames = [\r\n  \"Styczeń\",\r\n  \"Luty\",\r\n  \"Marzec\",\r\n  \"Kwiecień\",\r\n  \"Maj\",\r\n  \"Czerwiec\",\r\n  \"Lipiec\",\r\n  \"Sierpień\",\r\n  \"Wrzesień\",\r\n  \"Październik\",\r\n  \"Listopad\",\r\n  \"Grudzień\",\r\n];\r\ntype trainingItem = {\r\n  name: string;\r\n  min: number;\r\n};\r\nexport const trainingList: Array<trainingItem> = [\r\n  { name: \"Początkujący/a\", min: 0 },\r\n  { name: \"Średnio zaawansowany/a\", min: 10 },\r\n  { name: \"Zaawansowany\", min: 50 },\r\n  { name: \"Ekspert\", min: 100 },\r\n];\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./greetings.scss\";\r\nimport { namesOfDaysOfWeekArray, namesOfTheMonths } from \"utils/constants\";\r\nexport type props = {\r\n  name: string;\r\n};\r\n\r\nconst Greetings = ({ name }: props) => {\r\n  const date = new Date();\r\n  const dayOfWeek = namesOfDaysOfWeekArray;\r\n  const monthOfYear = namesOfTheMonths;\r\n  const today = `${dayOfWeek[date.getDay()]}, ${date.getDate()} ${\r\n    monthOfYear[date.getMonth()]\r\n  } ${date.getFullYear()}`;\r\n  return (\r\n    <section className=\"greetings\">\r\n      <h2 className=\"greetings__name\">\r\n        {\"Cześć \"}\r\n        {name ? (\r\n          name\r\n        ) : (\r\n          <Link className=\"greetings__link\" to=\"settings\">\r\n            nieznajomy\r\n          </Link>\r\n        )}\r\n        {\" !\"}\r\n      </h2>\r\n\r\n      <span className=\"greetings__date\">{today}</span>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Greetings;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./myProfileName.scss\";\r\nexport type props = {\r\n  name: string;\r\n  surname: string;\r\n};\r\n\r\nconst MyProfileName = ({ name, surname }: props) => {\r\n  return (\r\n    <div className=\"my-profile-name\">\r\n      <p className=\"my-profile-name__text\">Mój profil</p>\r\n      <div className=\"my-profile-name__div-initials\">\r\n        <span className=\"my-profile-name__initials\">\r\n          {name && surname ? (\r\n            `${name[0].toUpperCase()}${surname[0].toUpperCase()}`\r\n          ) : (\r\n            <Link className=\"my-profile-name__link\" to=\"settings\">\r\n              ?\r\n            </Link>\r\n          )}\r\n        </span>\r\n      </div>\r\n      <span className=\"my-profile-name__name\">\r\n        {name && surname ? (\r\n          `${name} ${surname}`\r\n        ) : (\r\n          <Link className=\"my-profile-name__link\" to=\"settings\">\r\n            -\r\n          </Link>\r\n        )}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyProfileName;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { trainingList } from \"utils/constants\";\r\nimport \"./myProfileRank.scss\";\r\ntype currentUser = {\r\n  uid: string;\r\n};\r\ntype props = {\r\n  currentUser: currentUser;\r\n  handleFlipCard: () => void;\r\n};\r\n\r\nconst MyProfileRank = ({ currentUser, handleFlipCard }: props) => {\r\n  const [numberOfTrainings, setNumberOfTrainings] = useState<number>(0);\r\n\r\n  const uploadTrainingsAmount = function (snapshot: any) {\r\n    setNumberOfTrainings(snapshot.numChildren());\r\n  };\r\n  const trainingName =\r\n    numberOfTrainings >= trainingList[3].min\r\n      ? trainingList[3].name\r\n      : numberOfTrainings >= trainingList[2].min\r\n      ? trainingList[2].name\r\n      : numberOfTrainings >= trainingList[1].min\r\n      ? trainingList[1].name\r\n      : trainingList[0].name;\r\n  useEffect(() => {\r\n    var ref = firebase.database().ref(`users/${currentUser.uid}/trainings`);\r\n    ref.once(\"value\").then(uploadTrainingsAmount);\r\n    return () => {\r\n      ref.off(\"value\", uploadTrainingsAmount);\r\n    };\r\n  }, [currentUser.uid]);\r\n  return (\r\n    <span onClick={handleFlipCard} className=\"my-profile-rank\">\r\n      {trainingName}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default MyProfileRank;\r\n","import React from \"react\";\r\nimport { Button } from \"components\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { trainingList } from \"utils/constants\";\r\nimport \"./rank.scss\";\r\ntype props = {\r\n  handleFlipCard: () => void;\r\n};\r\n\r\nconst Ranks = ({ handleFlipCard }: props) => {\r\n  return (\r\n    <div className=\"rank\">\r\n      <Button onClick={handleFlipCard}>\r\n        <IoIosArrowBack />\r\n      </Button>\r\n      <div className=\"rank__div\">\r\n        <h1 className=\"rank__h1\">Liczba treningów</h1>\r\n        <div className=\"rank__div-list\">\r\n          {trainingList.map((trainingItem) => (\r\n            <p key={trainingItem.name} className=\"rank__p\">\r\n              <span className=\"rank__span-name\">{trainingItem.name}</span>\r\n              <span className=\"rank__span-min\">{trainingItem.min}</span>\r\n            </p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ranks;\r\n","import React, { useRef } from \"react\";\r\nimport { MyProfileName, MyProfileRank, Ranks } from \"./components\";\r\nimport \"./myProfile.scss\";\r\n\r\ntype currentUser = {\r\n  uid: string;\r\n};\r\nexport type props = {\r\n  name: string;\r\n  surname: string;\r\n  currentUser: currentUser;\r\n};\r\n\r\nconst MyProfile = ({ name, surname, currentUser }: props) => {\r\n  const refFlipper = useRef<HTMLDivElement>(null);\r\n  const handleFlipCard = () => {\r\n    if (refFlipper.current) {\r\n      refFlipper.current.classList.toggle(\"active-card\");\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"my-profile\">\r\n      <div ref={refFlipper} className=\"my-profile__inner \">\r\n        <div className=\"my-profile__front\">\r\n          <MyProfileName name={name} surname={surname} />\r\n          <MyProfileRank\r\n            currentUser={currentUser}\r\n            handleFlipCard={handleFlipCard}\r\n          />\r\n        </div>\r\n        <div className=\"my-profile__back\">\r\n          <Ranks handleFlipCard={handleFlipCard} />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MyProfile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./eatenCalories.scss\";\r\ntype ingredients = {\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n};\r\nexport type props = {\r\n  ingredients: ingredients;\r\n};\r\n\r\nconst EatenCalories = ({\r\n  ingredients: { carbs, fats, proteins, calories },\r\n}: props) => {\r\n  return (\r\n    <div className=\"eaten-calories\">\r\n      <p className=\"eaten-calories__title\">Dieta</p>\r\n      <div className=\"eaten-calories__calories\">\r\n        {carbs && (\r\n          <Link to=\"settings\" className=\"eaten-calories__p\">\r\n            Węglowodany: {carbs}\r\n          </Link>\r\n        )}\r\n        {fats && (\r\n          <Link to=\"settings\" className=\"eaten-calories__p\">\r\n            Tłuszcze: {fats}\r\n          </Link>\r\n        )}\r\n        {proteins && (\r\n          <Link to=\"settings\" className=\"eaten-calories__p\">\r\n            Białko: {proteins}\r\n          </Link>\r\n        )}\r\n        {calories && (\r\n          <Link to=\"settings\" className=\"eaten-calories__p\">\r\n            Kalorie: {calories}\r\n          </Link>\r\n        )}\r\n        {!carbs && !fats && !proteins && !calories && (\r\n          <Link className=\"eaten-calories__a\" to=\"settings\">\r\n            Brak ustawionej diety\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EatenCalories;\r\n","export const dayMonthYearWithSeparator = (\r\n  dateToModifie: Date,\r\n  separator: string,\r\n  reverse: string = \"no\"\r\n) => {\r\n  const date = new Date(dateToModifie);\r\n  const dayOfMonth = date.getDate() > 9 ? date.getDate() : \"0\" + date.getDate();\r\n  const month =\r\n    date.getMonth() + 1 > 9 ? date.getMonth() + 1 : \"0\" + (date.getMonth() + 1);\r\n  const year = date.getFullYear();\r\n  const modifiedDate =\r\n    reverse === \"yes\"\r\n      ? `${year}${separator}${month}${separator}${dayOfMonth}`\r\n      : `${dayOfMonth}${separator}${month}${separator}${year}`;\r\n  return modifiedDate;\r\n};\r\nexport const hoursMinutesWithSeparator = (\r\n  dateToModifie: Date,\r\n  separator: string\r\n) => {\r\n  const date = new Date(dateToModifie);\r\n  const hours = date.getHours() > 9 ? date.getHours() : \"0\" + date.getHours();\r\n  const minutes =\r\n    date.getMinutes() > 9 ? date.getMinutes() : \"0\" + date.getMinutes();\r\n  return `${hours}${separator}${minutes}`;\r\n};\r\nexport const slicedDayMonthYearWithSeparator = (\r\n  stringDate: string,\r\n  separator: string,\r\n  reverse: string = \"no\"\r\n) => {\r\n  const dayOfMonth = stringDate.slice(6, 8);\r\n  const month = stringDate.slice(4, 6);\r\n  const year = stringDate.slice(0, 4);\r\n  const modifiedDate =\r\n    reverse === \"yes\"\r\n      ? `${year}${separator}${month}${separator}${dayOfMonth}`\r\n      : `${dayOfMonth}${separator}${month}${separator}${year}`;\r\n  return modifiedDate;\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"./todayTrainings.scss\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport { dayMonthYearWithSeparator } from \"utils/dateFunctions\";\r\ntype Trainings = Array<training>;\r\ntype training = {\r\n  id: string;\r\n  date: string;\r\n  workoutName: string;\r\n};\r\nconst TodayTrainings = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [trainings, setTrainings] = useState<Trainings>();\r\n  const date = new Date();\r\n  const modifiedDate = dayMonthYearWithSeparator(date, \"-\", \"yes\");\r\n  const uploadTrainings = function (snapshot: any) {\r\n    const trainingArray: Trainings = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const childData = childSnapshot.val();\r\n      trainingArray.push(childData);\r\n    });\r\n    setTrainings(trainingArray);\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/trainings\")\r\n        .orderByChild(\"date\")\r\n        .startAt(modifiedDate);\r\n      ref.on(\"value\", uploadTrainings);\r\n      return () => {\r\n        ref.off(\"value\", uploadTrainings);\r\n      };\r\n    }\r\n  }, [currentUser, modifiedDate]);\r\n  return (\r\n    <div className=\"today-trainings\">\r\n      <p className=\"today-trainings__title\">Treningi</p>\r\n      {trainings && trainings.length !== 0 ? (\r\n        trainings.map((training) => {\r\n          return (\r\n            <Link\r\n              key={training.id}\r\n              to={`trainings/${training.id}`}\r\n              className=\"today-trainings__link\"\r\n            >\r\n              {training.workoutName}\r\n            </Link>\r\n          );\r\n        })\r\n      ) : (\r\n        <div className=\"today-trainings__unset\">\r\n          <Link className=\"today-trainings__a\" to=\"trainings\">\r\n            Brak ustawionych treningów\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodayTrainings;\r\n","import React from \"react\";\r\nimport { EatenCalories, TodayTrainings } from \"./components\";\r\nimport \"./activities.scss\";\r\ntype ingredients = {\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n};\r\nexport type props = {\r\n  ingredients: ingredients;\r\n};\r\n\r\nconst Activities = ({ ingredients }: props) => {\r\n  return (\r\n    <section className=\"activities\">\r\n      <p className=\"activities__title\">Dzisiaj</p>\r\n      <EatenCalories ingredients={ingredients} />\r\n      <TodayTrainings />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Activities;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"./tableResults.scss\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\ntype users = {\r\n  name: string;\r\n  surname: string;\r\n  numberOfTrainings: number;\r\n};\r\n\r\nconst TableResults = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [statistics, setStatistics] = useState<Array<users>>();\r\n  const handleStatistics = function (snapshot: any) {\r\n    const usersStatistics: Array<users> = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const name = childSnapshot.child(\"settings/user/name\").val();\r\n      const surname = childSnapshot.child(\"settings/user/surname\").val();\r\n      if (name && surname) {\r\n        const numberOfTrainings = childSnapshot\r\n          .child(\"trainings\")\r\n          .numChildren();\r\n        usersStatistics.push({ name, surname, numberOfTrainings });\r\n      }\r\n    });\r\n    usersStatistics.sort((a, b) => b.numberOfTrainings - a.numberOfTrainings);\r\n    setStatistics(usersStatistics.slice(0, 10));\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase.database().ref(\"users\");\r\n      ref.on(\"value\", handleStatistics);\r\n      return () => {\r\n        ref.off(\"value\", handleStatistics);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n  return (\r\n    <section className=\"table-results\">\r\n      <h3 className=\"table-results__h3\">Statystyki</h3>\r\n      <table className=\"table-results__table\">\r\n        <thead>\r\n          <tr className=\"table-results__tr\">\r\n            <th className=\"table-results__th\">Miejsce</th>\r\n            <th className=\"table-results__th\">Imię</th>\r\n            <th className=\"table-results__th\">Nazwisko</th>\r\n            <th className=\"table-results__th\">Liczba treningów</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {statistics &&\r\n            statistics.map((item, index) => {\r\n              return (\r\n                <tr\r\n                  className=\"table-results__tr\"\r\n                  key={`${item.name}/${item.surname}/${item.numberOfTrainings}`}\r\n                >\r\n                  <td className=\"table-results__td\">{index + 1}</td>\r\n                  <td className=\"table-results__td\">{item.name}</td>\r\n                  <td className=\"table-results__td\">{item.surname}</td>\r\n                  <td className=\"table-results__td\">\r\n                    {item.numberOfTrainings}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n      <span className=\"table-results__span\"></span>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TableResults;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport { Greetings, MyProfile, Activities, TableResults } from \"./components\";\r\nimport firebase from \"firebase/app\";\r\nimport \"./loggedHome.scss\";\r\nimport { LoadingIndicator } from \"components\";\r\ntype ingredients = {\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n};\r\ntype user = {\r\n  name: string;\r\n  surname: string;\r\n  ingredients: ingredients;\r\n};\r\nconst Home = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [user, setUser] = useState<user>();\r\n  const uploadUser = function (snapshot: any) {\r\n    setUser({\r\n      name: snapshot.child(\"user/name\").val(),\r\n      surname: snapshot.child(\"user/surname\").val(),\r\n      ingredients: {\r\n        carbs: snapshot.child(\"diet/carbs\").val(),\r\n        fats: snapshot.child(\"diet/fats\").val(),\r\n        proteins: snapshot.child(\"diet/proteins\").val(),\r\n        calories: snapshot.child(\"diet/calories\").val(),\r\n      },\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/settings\");\r\n      ref.on(\"value\", uploadUser);\r\n      return () => {\r\n        ref.off(\"value\", uploadUser);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n  return (\r\n    <>\r\n      {currentUser && user ? (\r\n        <main className=\"logged-home\">\r\n          <Greetings name={user.name} />\r\n          <section className=\"logged-home__profile\">\r\n            <MyProfile\r\n              name={user.name}\r\n              surname={user.surname}\r\n              currentUser={currentUser}\r\n            />\r\n            <Activities ingredients={user.ingredients} />\r\n          </section>\r\n\r\n          <TableResults />\r\n        </main>\r\n      ) : (\r\n        <LoadingIndicator />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./backgroundImage.scss\";\r\nimport { Button } from \"components\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst BackgroundImage = () => {\r\n  const history = useHistory();\r\n  const handleRegister = () => {\r\n    history.push(`/login`);\r\n  };\r\n  return (\r\n    <section className=\"background-image\">\r\n      <div className=\"background-image__div\">\r\n        <h2 className=\"background-image__h2\">To do workout</h2>\r\n        <p className=\"background-image__p\">\r\n          Wejdź na wyższy poziom trenowania!\r\n        </p>\r\n        <Button onClick={handleRegister}>Zarejestruj się</Button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BackgroundImage;\r\n","import React from \"react\";\r\nimport \"./feature.scss\";\r\nexport type props = {\r\n  icon: any;\r\n  title: string;\r\n  text: string;\r\n};\r\n\r\nconst Feature = ({ icon, title, text }: props) => {\r\n  return (\r\n    <div className=\"feature\">\r\n      <div className=\"feature__div\">{icon}</div>\r\n      <p className=\"feature__title\">{title}</p>\r\n      <p className=\"feature__p\">{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feature;\r\n","import React from \"react\";\r\nimport \"./features.scss\";\r\nimport { Feature } from \"./components\";\r\nimport { BsCardText } from \"react-icons/bs\";\r\nimport { GiMeal } from \"react-icons/gi\";\r\nimport { RiRunLine } from \"react-icons/ri\";\r\nimport { AiOutlineBarChart } from \"react-icons/ai\";\r\n\r\nconst Features = () => {\r\n  return (\r\n    <section className=\"features\">\r\n      <h3 className=\"features__title\">Możliwości</h3>\r\n      <Feature\r\n        icon={<BsCardText />}\r\n        title=\"Plan treningowy\"\r\n        text=\"Zaprojektuj zestaw ćwiczeń do swojej aktualnej formy i pozwoli osiągnąć\r\n        wymarzoną sylwetkę oraz zadbać o zdrowie.\"\r\n      />\r\n      <Feature\r\n        icon={<GiMeal />}\r\n        title=\"Zaplanuj dietę\"\r\n        text=\"Prawidłowa dieta jest kluczowa dla zdrowia, kondycji i świetnego samopoczucia.\"\r\n      />\r\n      <Feature\r\n        icon={<RiRunLine />}\r\n        title=\"Motywacja\"\r\n        text=\"W osiągnięciu sukcesu najważniejsze jest to, co dzieje się w głowie. Trenuj regularnie i patrz jak rośnie Twoja pozycja w rankingu.\"\r\n      />\r\n      <Feature\r\n        icon={<AiOutlineBarChart />}\r\n        title=\"Monitorowanie rozwoju ciala\"\r\n        text=\"Wykresy to najlepszy przyjaciel sportowca. Dzięki aplikacji możesz śledź\r\n        przyrost swojej siły!\"\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Features;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./feedback.scss\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst Feedback = () => {\r\n  const [opinions, setOpinions] = useState<Array<string>>([]);\r\n  const numberOfOpinions = opinions.length;\r\n  const [indexOfActiveFeedback, setIndexOfActiveFeedback] = useState(0);\r\n  useEffect(() => {\r\n    if (numberOfOpinions > 1) {\r\n      const indexActiveFeedback = setInterval(() => {\r\n        setIndexOfActiveFeedback((prevState) => {\r\n          if (prevState === numberOfOpinions - 1) return 0;\r\n          return prevState + 1;\r\n        });\r\n      }, 10000);\r\n      return () => clearInterval(indexActiveFeedback);\r\n    }\r\n  }, [indexOfActiveFeedback, numberOfOpinions]);\r\n\r\n  const handleActiveFeedback = (direction: string) => {\r\n    if (numberOfOpinions > 1) {\r\n      if (direction === \"left\") {\r\n        setIndexOfActiveFeedback((prevState) => {\r\n          if (prevState === 0) return numberOfOpinions - 1;\r\n          return prevState - 1;\r\n        });\r\n      } else if (direction === \"right\") {\r\n        setIndexOfActiveFeedback((prevState) => {\r\n          if (prevState === numberOfOpinions - 1) return 0;\r\n          return prevState + 1;\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const uploadOpinions = function (snapshot: any) {\r\n    const opinionArray: Array<string> = [];\r\n\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      opinionArray.push(childSnapshot.child(\"opinion\").val());\r\n    });\r\n    setOpinions(opinionArray);\r\n  };\r\n  useEffect(() => {\r\n    const ref = firebase.database().ref(\"app/data/form\").limitToLast(3);\r\n    ref.on(\"value\", uploadOpinions);\r\n    return () => {\r\n      ref.off(\"value\", uploadOpinions);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"feedback\">\r\n      <h4 className=\"feedback__title\">Najświeższe opinie</h4>\r\n      <div className=\"feedback__opinions\">\r\n        <span\r\n          onClick={() => handleActiveFeedback(\"left\")}\r\n          className=\"feedback__left\"\r\n        >\r\n          <IoIosArrowBack />\r\n        </span>\r\n        <p className=\"feedback__p\">\r\n          {numberOfOpinions > 0 ? opinions[indexOfActiveFeedback] : \"Brak\"}\r\n        </p>\r\n        <span\r\n          onClick={() => handleActiveFeedback(\"right\")}\r\n          className=\"feedback__right\"\r\n        >\r\n          <IoIosArrowBack />\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Feedback;\r\n","import React, { useState } from \"react\";\r\nimport \"./sendMessage.scss\";\r\nimport { FormTemplate } from \"components\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport {\r\n  dayMonthYearWithSeparator,\r\n  hoursMinutesWithSeparator,\r\n} from \"utils/dateFunctions\";\r\nimport { minValue, maxValue } from \"utils/validation\";\r\nimport firebase from \"firebase/app\";\r\ntype values = {\r\n  name: string;\r\n  surname: string;\r\n  opinion: string;\r\n};\r\nconst SendMessage = () => {\r\n  const [isSendForm, setIsSendForm] = useCookies([\"sendForm\"]);\r\n  const [isSameSession, setIsSameSession] = useState(false);\r\n\r\n  const formFields = {\r\n    fields: [\r\n      {\r\n        name: \"name\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Imię\",\r\n        placeholder: \"Imię\",\r\n        type: \"text\",\r\n      },\r\n      {\r\n        name: \"surname\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Nazwisko\",\r\n        placeholder: \"Nazwisko\",\r\n        type: \"text\",\r\n      },\r\n      {\r\n        name: \"opinion\",\r\n        validate: composeValidators(\r\n          required(\"To pole jest wymagane!\"),\r\n          minValue(10, \"Tekst musi mieć conajmniej 10 znaków\"),\r\n          maxValue(400, \"Tekst nie może być dłuższy niż 400 znaków\")\r\n        ),\r\n        initialValue: undefined,\r\n        text: \"Twoja opinia\",\r\n        placeholder: \"Twoja opinia...\",\r\n        component: \"textarea\",\r\n        type: \"text\",\r\n      },\r\n    ],\r\n    button: {\r\n      text: \"Wyślij\",\r\n    },\r\n  };\r\n  const handleSubmitOpinion = (values: values) => {\r\n    const date = new Date();\r\n    const year = new Date(date).getFullYear();\r\n    const month = new Date(date).getMonth();\r\n    const dayOfMonth = date.getDate();\r\n    const newDate = new Date(year, month, dayOfMonth + 14);\r\n    const modifiedDate =\r\n      dayMonthYearWithSeparator(new Date(date), \"-\", \"yes\") +\r\n      \"T\" +\r\n      hoursMinutesWithSeparator(new Date(date), \":\");\r\n    firebase.database().ref(\"app/data/form\").push().set({\r\n      name: values.name,\r\n      surname: values.surname,\r\n      opinion: values.opinion,\r\n      date: modifiedDate,\r\n    });\r\n    setIsSendForm(\"sendForm\", \"formularz wysłany\", {\r\n      expires: newDate,\r\n    });\r\n    setIsSameSession(true);\r\n  };\r\n\r\n  return (\r\n    <section className=\"send-message\">\r\n      {isSendForm.sendForm === \"formularz wysłany\" ? (\r\n        <p className=\"send-message__sent\">\r\n          {isSendForm.sendForm === \"formularz wysłany\" && isSameSession\r\n            ? \"Dzięki za opinię!\"\r\n            : \"Formularz został już wysłany!\"}\r\n        </p>\r\n      ) : (\r\n        <FormTemplate\r\n          formFields={formFields}\r\n          handleSubmit={handleSubmitOpinion}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SendMessage;\r\n","import React from \"react\";\r\nimport \"./footer.scss\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer__info\">\r\n        <h5 className=\"footer__h5\">To do workout</h5>\r\n        <p className=\"footer__text\">\r\n          Aplikacja umożliwiająca łatwiejsze zarządzanie swoimi treningami,\r\n          projekt w ciągłym rozwoju.\r\n        </p>\r\n      </div>\r\n      <p className=\"footer__rights\">© 2020 All Rights Reserved</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./home.scss\";\r\nimport {\r\n  BackgroundImage,\r\n  Features,\r\n  Feedback,\r\n  SendMessage,\r\n  Footer,\r\n} from \"./components\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main className=\"home\">\r\n      <BackgroundImage />\r\n      <Features />\r\n      <Feedback />\r\n      <SendMessage />\r\n      <Footer />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport { LoggedHome, Home } from \"./components\";\r\nconst Root = () => {\r\n  const { currentUser }: any | undefined = useContext(AuthContext);\r\n  return <>{currentUser ? <LoggedHome /> : <Home />}</>;\r\n};\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { dayMonthYearWithSeparator } from \"utils/dateFunctions\";\r\nimport \"./listItems.scss\";\r\ntype exercise = {\r\n  workoutName: string;\r\n  series: Array<string>;\r\n};\r\ntype training = {\r\n  id: string;\r\n  date: string;\r\n  workoutName: string;\r\n  exercises?: exercise;\r\n};\r\nexport type props = {\r\n  trainings: Array<training>;\r\n};\r\nconst Table = ({ trainings }: props) => {\r\n  const history = useHistory();\r\n  const handleTraining = (training: training) => {\r\n    history.push(`/trainings/${training.id}`);\r\n  };\r\n\r\n  return (\r\n    <ul className=\"list-items\">\r\n      {trainings\r\n        .map((training: training) => {\r\n          const date = new Date(training.date);\r\n          const modifiedDate = `${dayMonthYearWithSeparator(date, \"/\")}`;\r\n          let exercisesCount = 0;\r\n          if (training.exercises) {\r\n            exercisesCount = Object.keys(training.exercises).length;\r\n          }\r\n          return (\r\n            <li\r\n              onClick={() => handleTraining(training)}\r\n              key={training.id}\r\n              className=\"list-items__li\"\r\n            >\r\n              <span className=\"list-items__name\">{training.workoutName}</span>\r\n              <span className=\"list-items__date\">{modifiedDate}</span>\r\n              <span className=\"list-items__count\">{exercisesCount}</span>\r\n            </li>\r\n          );\r\n        })\r\n        .reverse()}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./trainingsList.scss\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport { ListItems } from \"./components\";\r\nimport { LoadingIndicator } from \"components\";\r\ntype Trainings = Array<training>;\r\ntype training = {\r\n  id: string;\r\n  date: string;\r\n  workoutName: string;\r\n};\r\n\r\nconst TrainingsList = () => {\r\n  const [trainings, setTrainings] = useState<Trainings>([]);\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const uploadTrainings = function (snapshot: any) {\r\n    const trainingArray: any = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const childData = childSnapshot.val();\r\n      trainingArray.push(childData);\r\n    });\r\n    setTrainings(trainingArray);\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/trainings\")\r\n        .orderByChild(\"date\");\r\n      ref.on(\"value\", uploadTrainings);\r\n      return () => {\r\n        ref.off(\"value\", uploadTrainings);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <section className=\"trainings__list\">\r\n      <h2 className=\"trainings__h2\">Treningi</h2>\r\n      {isLoaded ? <ListItems trainings={trainings} /> : <LoadingIndicator />}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TrainingsList;\r\n","import { required, composeValidators, maxValue } from \"utils/validation\";\r\nimport {\r\n  dayMonthYearWithSeparator,\r\n  hoursMinutesWithSeparator,\r\n} from \"utils/dateFunctions\";\r\nconst date = new Date();\r\nconst datePattern = `${dayMonthYearWithSeparator(\r\n  date,\r\n  \"-\",\r\n  \"yes\"\r\n)}T${hoursMinutesWithSeparator(date, \":\")}`;\r\nexport default {\r\n  fields: [\r\n    {\r\n      name: \"date\",\r\n      validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n      initialValue: datePattern,\r\n      text: \"Data treningu\",\r\n      placeholder: \"Data treningu\",\r\n      type: \"datetime-local\",\r\n      max: datePattern,\r\n    },\r\n    {\r\n      name: \"workoutName\",\r\n      validate: composeValidators(\r\n        required(\"To pole jest wymagane!\"),\r\n        maxValue(40, \"Nazwa treningu maksymalnie może mieć 40 znaków\")\r\n      ),\r\n      initialValue: undefined,\r\n      text: \"Nazwa treningu\",\r\n      placeholder: \"Nazwa treningu\",\r\n    },\r\n  ],\r\n  button: {\r\n    text: \"Dodaj trening\",\r\n  },\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { FormTemplate } from \"components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport formFields from \"./formFields\";\r\n\r\nconst AddTraining = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const saveNewTraining = (\r\n    userId: string,\r\n    id: string,\r\n    date: string,\r\n    workoutName: string\r\n  ) => {\r\n    firebase\r\n      .database()\r\n      .ref(\"users/\" + userId + \"/trainings/\" + id)\r\n      .set({ id, date, workoutName });\r\n  };\r\n  const handleSubmit = (values: any) => {\r\n    const date = values.date\r\n      .replace(/-/g, \"\")\r\n      .replace(/T/g, \"\")\r\n      .replace(/:/g, \"\");\r\n\r\n    if (currentUser) {\r\n      saveNewTraining(currentUser.uid, date, values.date, values.workoutName);\r\n      history.push(`/trainings/${date}`);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"add-training\">\r\n      <FormTemplate formFields={formFields} handleSubmit={handleSubmit} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddTraining;\r\n","import React from \"react\";\r\nimport { AddTraining, TrainingsList } from \"./components\";\r\nimport \"./trainings.scss\";\r\n\r\nconst Trainings = () => {\r\n  return (\r\n    <main className=\"trainings\">\r\n      <AddTraining />\r\n      <TrainingsList />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Trainings;\r\n","import firebase from \"firebase/app\";\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyAkx7U5xHRytqTxEvWcAeBafAnn0RxvCGE\",\r\n  authDomain: \"workout-app-react.firebaseapp.com\",\r\n  databaseURL: \"https://workout-app-react.firebaseio.com\",\r\n  projectId: \"workout-app-react\",\r\n  storageBucket: \"workout-app-react.appspot.com\",\r\n  messagingSenderId: \"525427559623\",\r\n  appId: \"1:525427559623:web:086662897279ef7ca942e2\",\r\n  measurementId: \"G-LRVXXWQ6R2\",\r\n};\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nexport default fire;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./trainingExerciseList.scss\";\r\ntype exerciseItem = {\r\n  workoutName: string;\r\n  series?: Array<string>;\r\n  key: string;\r\n};\r\nexport type props = {\r\n  exercises: Array<exerciseItem>;\r\n  id: string;\r\n};\r\nconst TrainingExerciseList = ({ exercises, id }: props) => {\r\n  const history = useHistory();\r\n  const handleTrainingExercise = (\r\n    exerciseKey: string,\r\n    exerciseName: string\r\n  ) => {\r\n    history.push({\r\n      pathname: `/trainings/${id}/${exerciseKey}`,\r\n      state: { exerciseName },\r\n    });\r\n  };\r\n  return (\r\n    <ul className=\"training-exercise-list__ul\">\r\n      {exercises.map((exerciseName: exerciseItem) => {\r\n        return (\r\n          <li\r\n            key={exerciseName.key}\r\n            onClick={() =>\r\n              handleTrainingExercise(exerciseName.key, exerciseName.workoutName)\r\n            }\r\n            className=\"training-exercise-list__exercise\"\r\n          >\r\n            <span className=\"training-exercise-list__workout-name\">\r\n              {exerciseName.workoutName}\r\n            </span>\r\n            <div className=\"training-exercise-list__series-div\">\r\n              {exerciseName.series?.map((strinNumber, inx) => {\r\n                if (inx % 2 === 0 && exerciseName.series) {\r\n                  const seriesString = `${exerciseName.series[inx]}:${\r\n                    exerciseName.series[inx + 1]\r\n                  }`;\r\n                  return (\r\n                    <span key={inx} className=\"training-exercise-list__series\">\r\n                      {seriesString}\r\n                    </span>\r\n                  );\r\n                }\r\n              })}\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TrainingExerciseList;\r\n","import React, { useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport \"./dragAndDropList.scss\";\r\nimport firebase from \"firebase/app\";\r\nconst reorder = (list: any, startIndex: any, endIndex: any) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n  return result;\r\n};\r\nexport type props = {\r\n  exercises: any;\r\n  id: string;\r\n  refUrl: string;\r\n};\r\nconst DragAndDropList = ({ exercises, id, refUrl }: props) => {\r\n  const [listItems, setListItems] = useState(\r\n    exercises.map((exercise: any, index: number) => {\r\n      return {\r\n        id: `${index + 1}`,\r\n        content: exercise.workoutName,\r\n        key: exercise.key,\r\n      };\r\n    })\r\n  );\r\n  const onDragEnd = (result: any) => {\r\n    if (!result.destination) return;\r\n    const items: any = reorder(\r\n      listItems,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    setListItems(items);\r\n    firebase.database().ref(refUrl).set({});\r\n    items.forEach((item: any) => {\r\n      firebase.database().ref(refUrl).push().set({ workoutName: item.content });\r\n    });\r\n  };\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <Droppable droppableId=\"droppable\">\r\n        {(provided, snapshot) => (\r\n          <div\r\n            className=\"list\"\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {listItems.map((item: any, index: number) => (\r\n              <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    className=\"list__item\"\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    {item.content}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\nexport default DragAndDropList;\r\n","import React, { useContext } from \"react\";\r\nimport { TrainingExerciseList } from \"./..\";\r\nimport { FormTemplate } from \"components\";\r\nimport { required, composeValidators, maxValue } from \"utils/validation\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\ntype Exercise = {\r\n  workoutName: string;\r\n};\r\nexport type props = {\r\n  exercises: any | undefined;\r\n  id: string;\r\n};\r\n\r\nconst TrainingItem = ({ exercises, id }: props) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const formFields = {\r\n    fields: [\r\n      {\r\n        name: \"workoutName\",\r\n        validate: composeValidators(\r\n          required(\"To pole jest wymagane!\"),\r\n          maxValue(60, \"Nazwa treningu maksymalnie może mieć 60 znaków\")\r\n        ),\r\n        initialValue: undefined,\r\n        text: \"Nowe ćwiczenie\",\r\n        placeholder: \"Nowe ćwiczenie\",\r\n      },\r\n    ],\r\n    button: {\r\n      text: \"Dodaj ćwiczenie\",\r\n    },\r\n  };\r\n  const handleSubmit = (values: Exercise) => {\r\n    if (currentUser) {\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/trainings/${id}`)\r\n        .child(\"exercises\")\r\n        .push()\r\n        .set({ workoutName: values.workoutName });\r\n      values.workoutName = \"\";\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <FormTemplate formFields={formFields} handleSubmit={handleSubmit} />\r\n      <TrainingExerciseList exercises={exercises} id={id} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingItem;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport fire from \"fire\";\r\nimport { DragAndDropList, TrainingItem } from \"./components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { EditTitle, GoBackDelete } from \"components\";\r\nimport firebase from \"firebase/app\";\r\nimport \"./training.scss\";\r\n\r\ntype Id = {\r\n  id: string;\r\n};\r\ntype MatchParams = {\r\n  params: Id;\r\n};\r\nexport type props = {\r\n  match: MatchParams;\r\n};\r\nconst Training = ({ match }: props) => {\r\n  const history = useHistory();\r\n  const { id } = match.params;\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [isActiveEditing, setIsActiveEditing] = useState(false);\r\n\r\n  const handleDeleteTraining = () => {\r\n    if (currentUser) {\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/trainings/${id}`)\r\n        .remove();\r\n      history.goBack();\r\n    }\r\n  };\r\n\r\n  const [exercises, setExercises] = useState();\r\n  const loadTrainings = function (snapshot: any) {\r\n    const exerciseArray: any = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const { series, workoutName } = childSnapshot.val();\r\n      const key = childSnapshot.key;\r\n      exerciseArray.push({ workoutName, key, series });\r\n    });\r\n    setExercises(exerciseArray);\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = fire\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/trainings/${id}`);\r\n      ref.child(`exercises`).on(\"value\", loadTrainings);\r\n      return () => {\r\n        ref.child(`exercises`).off(\"value\", loadTrainings);\r\n      };\r\n    }\r\n  }, [currentUser, id]);\r\n\r\n  return (\r\n    <main className=\"training\">\r\n      <GoBackDelete\r\n        handleEdit={handleDeleteTraining}\r\n        editTitle=\"Usuń trening\"\r\n      />\r\n\r\n      <section className=\"training__add-exercise\">\r\n        {currentUser && (\r\n          <EditTitle\r\n            labelText=\"Nazwa treningu\"\r\n            editDate={true}\r\n            refUrl={`users/${currentUser.uid}/trainings/${id}`}\r\n            isActiveEditing={isActiveEditing}\r\n            setIsActiveEditing={setIsActiveEditing}\r\n          />\r\n        )}\r\n        {isActiveEditing && currentUser ? (\r\n          <DragAndDropList\r\n            exercises={exercises}\r\n            id={id}\r\n            refUrl={`users/${currentUser.uid}/trainings/${id}/exercises`}\r\n          />\r\n        ) : (\r\n          exercises && <TrainingItem exercises={exercises} id={id} />\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Training;\r\n","const generateRandomString = () => {\r\n  return (\r\n    Math.random().toString(36).substr(2, 9) +\r\n    Math.random().toString(36).substr(2, 9) +\r\n    Math.random().toString(36).substr(2, 9)\r\n  );\r\n};\r\nexport default generateRandomString;\r\n","import React from \"react\";\r\nimport \"./line.scss\";\r\nimport generateRandomString from \"utils/generateRandomString\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\ntype Fields = {\r\n  name: string;\r\n  validate: (value: any) => void;\r\n  initialValue: string | undefined;\r\n  text: string;\r\n  placeholder: string;\r\n};\r\ntype Button = {\r\n  text: string;\r\n};\r\nexport type props = {\r\n  fields: Fields[];\r\n  button: Button;\r\n  setFormFields: (cos: any) => void;\r\n};\r\n\r\nconst Line = ({ fields, button, setFormFields }: props) => {\r\n  const handleAddSeries = () => {\r\n    fields.push(\r\n      {\r\n        name: `exerciseWeight${generateRandomString()}`,\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Ciężar (kg)\",\r\n        placeholder: \"Ciężar (kg)\",\r\n      },\r\n      {\r\n        name: `exerciseRepeat${generateRandomString()}`,\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Liczba powtórzeń\",\r\n        placeholder: \"Liczba powtórzeń\",\r\n      }\r\n    );\r\n    setFormFields({\r\n      fields,\r\n      button,\r\n    });\r\n  };\r\n  return (\r\n    <div onClick={handleAddSeries} className=\"exercise__line\">\r\n      <div className=\"exercise__check\">+</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Line;\r\n","import React from \"react\";\r\nimport \"./removeSeries.scss\";\r\nexport type props = {\r\n  index: number;\r\n  handleRemoveSeries: (index: number) => void;\r\n};\r\n\r\nconst RemoveSeries = ({ index, handleRemoveSeries }: props) => {\r\n  return (\r\n    <div className=\"remove-series\">\r\n      <button\r\n        onClick={() => handleRemoveSeries(index)}\r\n        type=\"button\"\r\n        className=\"remove-series__button\"\r\n      >\r\n        Usuń serię\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemoveSeries;\r\n","import React from \"react\";\r\nimport \"./seriesNumber.scss\";\r\nexport type props = {\r\n  index: number;\r\n};\r\n\r\nconst SeriesNumber = ({ index }: props) => {\r\n  return (\r\n    <>\r\n      {index % 2 === 0 && (\r\n        <p className=\"series-number\">Seria {index / 2 + 1}</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SeriesNumber;\r\n","import React, { useContext } from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport \"./formInput.scss\";\r\nimport { Line, RemoveSeries, SeriesNumber } from \"./components\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport { toast } from \"react-toastify\";\r\nimport firebase from \"firebase/app\";\r\ntype Fields = {\r\n  name: string;\r\n  validate: (value: any) => void;\r\n  initialValue: string | undefined;\r\n  text: string;\r\n  placeholder: string;\r\n};\r\ntype Button = {\r\n  type: string;\r\n  text: string;\r\n};\r\ntype FormFields = {\r\n  fields: Fields[];\r\n  button: Button;\r\n};\r\ntype props = {\r\n  formFields: FormFields;\r\n  setFormFields: React.Dispatch<React.SetStateAction<FormFields>>;\r\n  id: string;\r\n  paramId: string;\r\n};\r\n\r\nconst FormInput = ({\r\n  formFields: { fields, button },\r\n  setFormFields,\r\n  id,\r\n  paramId,\r\n}: props) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const handleSubmit = (values: any) => {\r\n    const newArray: any = [];\r\n    fields.forEach((field) => {\r\n      newArray.push(values[field.name]);\r\n    });\r\n    if (currentUser) {\r\n      const url = `users/${currentUser.uid}/trainings/${id}/exercises/${paramId}`;\r\n      firebase.database().ref(url).child(\"series\").set(newArray);\r\n      toast(\"Zaktualizowano ćwiczenie\");\r\n    }\r\n  };\r\n\r\n  const handleRemoveSeries = (number: number) => {\r\n    fields.splice(number - 1, 2);\r\n    setFormFields({\r\n      fields,\r\n      button,\r\n    });\r\n  };\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      {(props) => (\r\n        <form onSubmit={props.handleSubmit} className=\"form\">\r\n          {fields.map((formField: any, index: number) => {\r\n            return (\r\n              <Field\r\n                key={formField.name}\r\n                name={formField.name}\r\n                validate={formField.validate}\r\n                defaultValue={formField.initialValue}\r\n                parse={formField.parse}\r\n              >\r\n                {({ input, meta }) => (\r\n                  <>\r\n                    <SeriesNumber index={index} />\r\n                    <div className=\"form__wrapper\">\r\n                      <label className=\"form__label\">{formField.text}</label>\r\n                      <input\r\n                        className=\"form__input\"\r\n                        {...input}\r\n                        type=\"number\"\r\n                        step=\"1\"\r\n                        min=\"0\"\r\n                        placeholder={formField.placeholder}\r\n                      />\r\n                      {meta.error && meta.touched && (\r\n                        <span className=\"form__span\">{meta.error}</span>\r\n                      )}\r\n                    </div>\r\n                    {index % 2 === 1 && (\r\n                      <RemoveSeries\r\n                        index={index}\r\n                        handleRemoveSeries={handleRemoveSeries}\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Field>\r\n            );\r\n          })}\r\n          <Line fields={fields} button={button} setFormFields={setFormFields} />\r\n          <button className=\"form__button\">{button.text}</button>\r\n        </form>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\nexport default FormInput;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport { FormInput } from \"./components\";\r\nimport { EditTitle, GoBackDelete } from \"components\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\nimport generateRandomString from \"utils/generateRandomString\";\r\nimport firebase from \"firebase/app\";\r\nimport \"./exercise.scss\";\r\ntype Id = {\r\n  id: string;\r\n};\r\ntype Params = {\r\n  params: Id;\r\n  path: string;\r\n  url: string;\r\n};\r\ntype Field = {\r\n  name: string;\r\n  validate: (value: any) => void;\r\n  initialValue: string | undefined;\r\n  text: string;\r\n  placeholder: string;\r\n};\r\ntype Button = {\r\n  type: string;\r\n  text: string;\r\n};\r\ntype FormFields = {\r\n  fields: Field[];\r\n  button: Button;\r\n};\r\nexport type props = {\r\n  match: Params;\r\n};\r\nconst Exercise = ({ match: { url, params } }: props) => {\r\n  const history = useHistory();\r\n  const { currentUser } = useContext(AuthContext);\r\n  const newUrl = url.replace(\"/trainings/\", \"\");\r\n  const id = newUrl.replace(\"/\" + params.id, \"\");\r\n  const [isActiveEditing, setIsActiveEditing] = useState(false);\r\n  const [formFields, setFormFields] = useState<FormFields>({\r\n    fields: [\r\n      {\r\n        name: \"exerciseWeight\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Ciężar (kg)\",\r\n        placeholder: \"Ciężar (kg)\",\r\n      },\r\n      {\r\n        name: \"exerciseRepeat\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Liczba powtórzeń\",\r\n        placeholder: \"Liczba powtórzeń\",\r\n      },\r\n    ],\r\n    button: {\r\n      type: \"submit\",\r\n      text: \"Zapisz\",\r\n    },\r\n  });\r\n  const handleSaveExercise = () => {\r\n    if (currentUser) {\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/trainings/${id}/exercises/${params.id}`)\r\n        .remove();\r\n      history.goBack();\r\n    }\r\n  };\r\n  const uploadExercise = function (snapshot: any) {\r\n    if (snapshot) {\r\n      const fields: Field[] = [];\r\n      const button = {\r\n        type: \"submit\",\r\n        text: \"Zapisz\",\r\n      };\r\n      snapshot.forEach(function (childSnapshot: any) {\r\n        const text =\r\n          fields.length % 2 === 0 ? \"Ciężar (kg)\" : \"Liczba powtórzeń\";\r\n\r\n        fields.push({\r\n          name: `${\r\n            fields.length % 2 === 0 ? \"exerciseWeight\" : \"exerciseRepeat\"\r\n          }${generateRandomString()}`,\r\n          validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n          initialValue: childSnapshot.val(),\r\n          text: text,\r\n          placeholder: text,\r\n        });\r\n      });\r\n      if (fields.length > 0) {\r\n        setFormFields({\r\n          fields,\r\n          button,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\r\n          `users/${currentUser.uid}/trainings/${id}/exercises/${params.id}/series`\r\n        );\r\n      ref.on(\"value\", uploadExercise);\r\n      return () => {\r\n        ref.off(\"value\", uploadExercise);\r\n      };\r\n    }\r\n  }, [currentUser, id, params.id]);\r\n  return (\r\n    <main className=\"exercise\">\r\n      <GoBackDelete\r\n        handleEdit={handleSaveExercise}\r\n        editTitle=\"Usuń ćwiczenie\"\r\n      />\r\n      <section className=\"exercise__add-series\">\r\n        {currentUser && (\r\n          <EditTitle\r\n            labelText=\"Nazwa ćwiczenia\"\r\n            editDate={false}\r\n            refUrl={`users/${currentUser.uid}/trainings/${id}/exercises/${params.id}`}\r\n            isActiveEditing={isActiveEditing}\r\n            setIsActiveEditing={setIsActiveEditing}\r\n          />\r\n        )}\r\n        {!isActiveEditing && (\r\n          <FormInput\r\n            formFields={formFields}\r\n            setFormFields={setFormFields}\r\n            id={id}\r\n            paramId={params.id}\r\n          />\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Exercise;\r\n","import React from \"react\";\r\nimport { Chart } from \"components\";\r\nimport { monthsNames } from \"utils/constants\";\r\ntype training = {\r\n  date: string;\r\n  id: string;\r\n  workoutName: string;\r\n  exercises?: object;\r\n};\r\nexport type props = {\r\n  trainings: Array<training>;\r\n};\r\n\r\nconst TrainingsPerMonth = ({ trainings }: props) => {\r\n  const weekNames = monthsNames;\r\n  const trainingsPerMonth: Array<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n  trainings.forEach((training: training) => {\r\n    trainingsPerMonth[new Date(training.date).getMonth()] += 1;\r\n  });\r\n  const specification = {\r\n    type: \"bar\",\r\n    data: {\r\n      labels: weekNames,\r\n      datasets: [\r\n        {\r\n          minBarLength: 1,\r\n          data: trainingsPerMonth,\r\n          backgroundColor: function (context: any) {\r\n            const index = context.dataIndex;\r\n            return index % 2\r\n              ? \"rgba(102, 252, 241, 1)\"\r\n              : \"rgba(197, 198, 199, 1)\";\r\n          },\r\n        },\r\n      ],\r\n    },\r\n\r\n    options: {\r\n      title: {\r\n        display: true,\r\n        text: \"Liczba treningów w roku\",\r\n      },\r\n      legend: {\r\n        display: false,\r\n        labels: {},\r\n        position: \"right\",\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              lineHeight: 2,\r\n              beginAtZero: true,\r\n              callback: function (value: any) {\r\n                if (Number.isInteger(value)) {\r\n                  return value;\r\n                }\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  return <>{<Chart specification={specification}> </Chart>}</>;\r\n};\r\n\r\nexport default TrainingsPerMonth;\r\n","import React from \"react\";\r\nimport { Chart } from \"components\";\r\ntype trainingsPerTrainingNameItem = {\r\n  name: Array<string>;\r\n  amount: Array<number>;\r\n};\r\ntype training = {\r\n  date: string;\r\n  id: string;\r\n  workoutName: string;\r\n  exercises?: object;\r\n};\r\nexport type props = {\r\n  trainings: Array<training>;\r\n};\r\n\r\nconst TrainingsPerTrainingName = ({ trainings }: props) => {\r\n  const trainingsPerTrainingName: trainingsPerTrainingNameItem = {\r\n    name: [],\r\n    amount: [],\r\n  };\r\n  trainings.forEach((training: training) => {\r\n    const index = trainingsPerTrainingName.name.findIndex(\r\n      (item) => item === training.workoutName\r\n    );\r\n    if (index !== -1) {\r\n      ++trainingsPerTrainingName.amount[index];\r\n    } else {\r\n      trainingsPerTrainingName.name.push(training.workoutName);\r\n      trainingsPerTrainingName.amount.push(1);\r\n    }\r\n  });\r\n\r\n  const specification = {\r\n    type: \"pie\",\r\n\r\n    data: {\r\n      labels: trainingsPerTrainingName.name,\r\n      datasets: [\r\n        {\r\n          data: trainingsPerTrainingName.amount,\r\n          backgroundColor: [\r\n            \"rgba(102, 252, 241, 1)\",\r\n            \"rgba(197, 198, 199, 1)\",\r\n            \"rgba(230, 25, 75, 1)\",\r\n            \"rgba(245, 130, 48, 1)\",\r\n            \"rgba(255, 225, 25, 1)\",\r\n            \"rgba(210, 245,60, 1)\",\r\n            \"rgba(60, 180, 75, 1)\",\r\n            \"rgba(70, 240, 75, 1)\",\r\n            \"rgba(0, 130, 200, 1)\",\r\n            \"rgba(0, 0, 128, 1)\",\r\n            \"rgba(145, 30, 180, 1)\",\r\n            \"rgba(240, 30, 180, 1)\",\r\n            \"rgba(128, 128, 128, 1)\",\r\n            \"rgba(0, 0, 0, 1)\",\r\n          ],\r\n          borderColor: [\r\n            \"rgba(102, 252, 241, 0.8)\",\r\n            \"rgba(197, 198, 199, 0.8)\",\r\n            \"rgba(230, 25, 75, 0.8)\",\r\n            \"rgba(245, 130, 48, 0.8)\",\r\n            \"rgba(255, 225, 25, 0.8)\",\r\n            \"rgba(210, 245,60,0.8)\",\r\n            \"rgba(60, 180, 75, 0.8)\",\r\n            \"rgba(70, 240, 75,0.8)\",\r\n            \"rgba(0, 130, 200,0.8)\",\r\n            \"rgba(0, 0, 128, 0.8)\",\r\n            \"rgba(145, 30, 180, 0.8)\",\r\n            \"rgba(240, 30, 180, 0.8)\",\r\n            \"rgba(128, 128, 128, 0.8)\",\r\n            \"rgba(0, 0, 0, 0.8)\",\r\n          ],\r\n          hoverBackgroundColor: [\r\n            \"rgba(102, 252, 241, 0.8)\",\r\n            \"rgba(197, 198, 199, 0.8)\",\r\n            \"rgba(230, 25, 75, 0.8)\",\r\n            \"rgba(245, 130, 48, 0.8)\",\r\n            \"rgba(255, 225, 25, 0.8)\",\r\n            \"rgba(210, 245,60, 0.8)\",\r\n            \"rgba(60, 180, 75, 0.8)\",\r\n            \"rgba(70, 240, 75, 0.8)\",\r\n            \"rgba(0, 130, 200, 0.8)\",\r\n            \"rgba(0, 0, 128, 0.8)\",\r\n            \"rgba(145, 30, 180, 0.8)\",\r\n            \"rgba(240, 30, 180, 0.8)\",\r\n            \"rgba(128, 128, 128, 0.8)\",\r\n            \"rgba(0, 0, 0, 0.8)\",\r\n          ],\r\n          hoverBorderWidth: 2,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return <>{<Chart specification={specification}> </Chart>}</>;\r\n};\r\n\r\nexport default TrainingsPerTrainingName;\r\n","import React, { useState } from \"react\";\r\nimport { Chart } from \"components\";\r\nimport { dayMonthYearWithSeparator } from \"utils/dateFunctions\";\r\nimport \"./weightRaisedPerTrainingName.scss\";\r\ntype trainingsPerTrainingNameItem = {\r\n  date: Array<string>;\r\n  amount: Array<number>;\r\n};\r\ntype training = {\r\n  date: string;\r\n  id: string;\r\n  workoutName: string;\r\n  exercises?: object;\r\n};\r\nexport type props = {\r\n  trainings: Array<training>;\r\n};\r\n\r\nconst WeightRaisedPerTrainingName = ({ trainings }: props) => {\r\n  const options: Array<string> = [];\r\n  trainings.forEach((training: training) => {\r\n    if (!options.includes(training.workoutName)) {\r\n      options.push(training.workoutName);\r\n    }\r\n  });\r\n  const [selectChange, setSelectChange] = useState<string>(options[0]);\r\n  const data = trainings.filter((training: training) => {\r\n    return training.workoutName === selectChange;\r\n  });\r\n  const trainingsArray: trainingsPerTrainingNameItem = { date: [], amount: [] };\r\n  data.forEach((training) => {\r\n    let amount = 0;\r\n    if (training.exercises) {\r\n      for (const [, value] of Object.entries(training.exercises)) {\r\n        if (value.series) {\r\n          let seriesArray = [];\r\n\r\n          for (const [, series] of Object.entries(value.series)) {\r\n            seriesArray.push(series);\r\n          }\r\n          for (let i = 0; i < seriesArray.length; i += 2) {\r\n            amount += Number(seriesArray[i]) * Number(seriesArray[i + 1]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const date = new Date(training.date);\r\n    const formatedDate = `${dayMonthYearWithSeparator(date, \"/\")}`;\r\n    trainingsArray.date.push(formatedDate);\r\n    trainingsArray.amount.push(amount);\r\n  });\r\n\r\n  const specification = {\r\n    type: \"line\",\r\n    data: {\r\n      labels: trainingsArray.date,\r\n      datasets: [\r\n        {\r\n          data: trainingsArray.amount,\r\n          fill: \"false\",\r\n          borderColor: \"rgba(102, 252, 241, 1)\",\r\n          backgroundColor: \"rgba(102, 252, 241, 1)\",\r\n        },\r\n      ],\r\n    },\r\n\r\n    options: {\r\n      title: {\r\n        display: true,\r\n        text: \"Liczba podniesionych kg\",\r\n      },\r\n      legend: {\r\n        display: false,\r\n        labels: {},\r\n        position: \"right\",\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              lineHeight: 2,\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n  const handleSelectChange = (e: any) => {\r\n    setSelectChange(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"weight-chart\">\r\n      <label className=\"weight-chart__label\">Wybierz nazwe treningu</label>\r\n      <select onChange={handleSelectChange} className=\"weight-chart__select\">\r\n        {options.map((item, index) => {\r\n          return (\r\n            <option key={index} value={item}>\r\n              {item}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n\r\n      {<Chart specification={specification}> </Chart>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeightRaisedPerTrainingName;\r\n","import React from \"react\";\r\nimport {\r\n  TrainingsPerMonth,\r\n  TrainingsPerTrainingName,\r\n  WeightRaisedPerTrainingName,\r\n} from \"./components\";\r\ntype training = {\r\n  date: string;\r\n  id: string;\r\n  workoutName: string;\r\n  exercises?: object;\r\n};\r\nexport type props = {\r\n  trainings: Array<training>;\r\n};\r\nconst Charts = ({ trainings }: props) => {\r\n  return (\r\n    <>\r\n      <TrainingsPerMonth trainings={trainings} />\r\n      <TrainingsPerTrainingName trainings={trainings} />\r\n      <WeightRaisedPerTrainingName trainings={trainings} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport { Charts } from \"./components\";\r\nimport \"./statistics.scss\";\r\nimport { LoadingIndicator } from \"components\";\r\ntype exercise = {\r\n  workoutName: string;\r\n  series?: Array<string>;\r\n};\r\ntype training = {\r\n  date: string;\r\n  id: string;\r\n  workoutName: string;\r\n  exercises?: object;\r\n};\r\n\r\nconst Statistics = () => {\r\n  const { currentUser }: any | undefined = useContext(AuthContext);\r\n  const [trainings, setTrainings] = useState<Array<training>>();\r\n  const uploadTrainings = function (snapshot: any) {\r\n    const trainingArray: Array<training> = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      trainingArray.push(childSnapshot.val());\r\n    });\r\n    setTrainings(trainingArray);\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase.database().ref(`users/${currentUser.uid}/trainings`);\r\n      ref.once(\"value\", uploadTrainings);\r\n      return () => {\r\n        ref.off(\"value\", uploadTrainings);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <main className=\"statistics\">\r\n      {trainings ? <Charts trainings={trainings} /> : <LoadingIndicator />}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { useState } from \"react\";\r\nexport type props = {};\r\n\r\nconst Input = ({ type }: any) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const input = (\r\n    <input\r\n      value={value}\r\n      onChange={(e) => setValue(e.target.value)}\r\n      type={type}\r\n      min={0}\r\n    />\r\n  );\r\n  return [value, input];\r\n};\r\n\r\nexport default Input;\r\n","import * as React from \"react\";\r\nimport \"./dietNutrient.scss\";\r\nexport type props = {\r\n  title: string;\r\n  nutrients: Array<number>;\r\n  index: number;\r\n};\r\n\r\nconst DietNutrient = ({ title, nutrients, index }: props) => {\r\n  return (\r\n    <>\r\n      <div className=\"diet-nutrient\">\r\n        <p className=\"diet-nutrient__title\">{title}</p>\r\n        <p className=\"diet-nutrient__amount\">{nutrients[index]}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DietNutrient;\r\n","import React from \"react\";\r\nimport { DietNutrient } from \"./components\";\r\nimport \"./dietElement.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ingredientTitles } from \"utils/constants\";\r\nimport { slicedDayMonthYearWithSeparator } from \"utils/dateFunctions\";\r\nexport type props = {\r\n  date: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n};\r\nconst DietElement = ({ date, carbs, fats, proteins, calories }: props) => {\r\n  const history = useHistory();\r\n  const titles = ingredientTitles;\r\n  const nutrients = [carbs, fats, proteins, calories];\r\n  const handleDietDay = (date: string) => {\r\n    history.push(`diet/${date}`);\r\n  };\r\n\r\n  const modifiedDate = slicedDayMonthYearWithSeparator(date, \"/\");\r\n  return (\r\n    <div\r\n      onClick={() => handleDietDay(date)}\r\n      className=\"diet-element\"\r\n      key={date}\r\n    >\r\n      <div className=\"diet-element__date\">{modifiedDate}</div>\r\n      <div className=\"diet-element__nutrients\">\r\n        {titles.map((title: string, index: number) => (\r\n          <DietNutrient\r\n            key={title}\r\n            title={title}\r\n            nutrients={nutrients}\r\n            index={index}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DietElement;\r\n","import React from \"react\";\r\nimport { DietElement } from \"./components\";\r\ntype list = {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n};\r\ntype meal = {\r\n  mealName: string;\r\n  list: Array<list>;\r\n};\r\ntype diet = {\r\n  date: string;\r\n  meal: Array<meal>;\r\n};\r\nexport type props = {\r\n  diets: Array<diet>;\r\n};\r\n\r\nconst DietList = ({ diets }: props) => {\r\n  return (\r\n    <>\r\n      {diets\r\n        .map((diet) => {\r\n          let [carbs, fats, proteins, calories] = [0, 0, 0, 0];\r\n          if (diet.meal) {\r\n            diet.meal.forEach((meal) => {\r\n              if (meal.list) {\r\n                meal.list.forEach((item) => {\r\n                  carbs += item.carbs;\r\n                  fats += item.fats;\r\n                  proteins += item.proteins;\r\n                  calories += item.calories;\r\n                });\r\n              }\r\n            });\r\n          }\r\n          return (\r\n            <DietElement\r\n              key={diet.date}\r\n              date={diet.date}\r\n              carbs={carbs}\r\n              fats={fats}\r\n              proteins={proteins}\r\n              calories={calories}\r\n            />\r\n          );\r\n        })\r\n        .reverse()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DietList;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { DietList } from \"./components\";\r\nimport \"./diet.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport { Button, LoadingIndicator } from \"components\";\r\nimport { dayMonthYearWithSeparator } from \"utils/dateFunctions\";\r\ntype list = {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n};\r\ntype meal = {\r\n  mealName: string;\r\n  list: Array<list>;\r\n};\r\ntype diet = {\r\n  date: string;\r\n  meal: Array<meal>;\r\n};\r\nconst Diet = () => {\r\n  const history = useHistory();\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [diets, setDiets] = useState<Array<diet>>([]);\r\n  const [flag, setFlag] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const handleAddDiet = () => {\r\n    const today = new Date();\r\n    const todayDatePattern = dayMonthYearWithSeparator(today, \"\", \"yes\");\r\n    let flag = true;\r\n    diets.forEach((item) => {\r\n      if (todayDatePattern === item.date) {\r\n        flag = false;\r\n        setFlag(true);\r\n      }\r\n    });\r\n    if (flag) {\r\n      const saveNewDiet = (userId: string, date: string) => {\r\n        firebase\r\n          .database()\r\n          .ref(\"users/\" + userId + \"/diet/\" + date)\r\n          .set({ date });\r\n      };\r\n\r\n      if (currentUser) {\r\n        saveNewDiet(currentUser.uid, todayDatePattern);\r\n        history.push(`/diet/${todayDatePattern}`);\r\n      }\r\n    }\r\n  };\r\n  const uploadDiet = function (snapshot: any) {\r\n    const dietArray: Array<diet> = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const childData = childSnapshot.val();\r\n      dietArray.push(childData);\r\n    });\r\n    setDiets(dietArray);\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/diet\")\r\n        .orderByChild(\"date\");\r\n      ref.on(\"value\", uploadDiet);\r\n      return () => {\r\n        ref.off(\"value\", uploadDiet);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n  return (\r\n    <main className=\"diet\">\r\n      <div className=\"diet__div\">\r\n        <Button onClick={handleAddDiet}>Dodaj dietę</Button>\r\n        {flag && (\r\n          <span className=\"diet__span\">Dzisiejsza dieta jest już dodana</span>\r\n        )}\r\n      </div>\r\n      {isLoaded ? <DietList diets={diets} /> : <LoadingIndicator />}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Diet;\r\n","import React, { useContext } from \"react\";\r\nimport { IoIosRemoveCircleOutline } from \"react-icons/io\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\ntype mealItem = {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n};\r\ntype meal = {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n};\r\nexport type props = {\r\n  meal: meal;\r\n  item: mealItem;\r\n  index: number;\r\n  indexList: number;\r\n  id: string;\r\n};\r\n\r\nconst IngredientItem = ({ meal, item, index, indexList, id }: props) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const handleRemoveMealItem = (index: number) => {\r\n    if (currentUser) {\r\n      const filteredList = meal.list.filter((item, ind) => ind !== index);\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/diet/${id}/meal/${indexList}/list`)\r\n        .set([...filteredList]);\r\n    }\r\n  };\r\n  return (\r\n    <tr>\r\n      <td className=\"meal-table__td\">{item.ingredient}</td>\r\n      <td className=\"meal-table__td\">{item.carbs}</td>\r\n      <td className=\"meal-table__td\">{item.fats}</td>\r\n      <td className=\"meal-table__td\">{item.proteins}</td>\r\n      <td className=\"meal-table__td\">{item.calories}</td>\r\n      <td className=\"meal-table__td\">\r\n        <IoIosRemoveCircleOutline\r\n          onClick={() => handleRemoveMealItem(index)}\r\n          className=\"meal-table__remove\"\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default IngredientItem;\r\n","import React from \"react\";\r\ntype mealItem = {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n};\r\ntype meal = {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n};\r\nexport type props = {\r\n  meal: meal;\r\n  titles: Array<string>;\r\n};\r\n\r\nconst SumNutrientsByType = ({ meal, titles }: props) => {\r\n  const sumNutrientsByType = [0, 0, 0, 0];\r\n  if (meal.list) {\r\n    meal.list.forEach((item) => {\r\n      sumNutrientsByType[0] += item.carbs;\r\n      sumNutrientsByType[1] += item.fats;\r\n      sumNutrientsByType[2] += item.proteins;\r\n      sumNutrientsByType[3] += item.calories;\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      {sumNutrientsByType.map((item, index) => {\r\n        return (\r\n          <td key={titles[index]} className=\"meal-table__td\">\r\n            {item}\r\n          </td>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SumNutrientsByType;\r\n","import React from \"react\";\r\nimport { AiOutlineCheckCircle } from \"react-icons/ai\";\r\nimport { IoIosRemoveCircleOutline } from \"react-icons/io\";\r\nimport firebase from \"firebase/app\";\r\nimport { Input } from \"utils/customHooks\";\r\ntype mealItem = {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n};\r\nexport type props = {\r\n  setActiveMeal: (active: boolean) => void;\r\n  mealList: Array<mealItem>;\r\n  currentUserId: string;\r\n  id: string;\r\n  indexList: number;\r\n};\r\n\r\nconst AddIngredient = ({\r\n  setActiveMeal,\r\n  mealList,\r\n  currentUserId,\r\n  id,\r\n  indexList,\r\n}: props) => {\r\n  const [ingredient, setIngredient] = Input({ type: \"text\" });\r\n  const [carbs, setCarbs] = Input({ type: \"number\" });\r\n  const [fats, setFats] = Input({ type: \"number\" });\r\n  const [proteins, setProteins] = Input({ type: \"number\" });\r\n  const [calories, setCalories] = Input({ type: \"number\" });\r\n  let isNameTaken;\r\n  if (mealList) {\r\n    isNameTaken =\r\n      mealList.findIndex((item) => item.ingredient === String(ingredient)) !==\r\n      -1;\r\n  }\r\n  const maxNameLength =\r\n    typeof ingredient === \"string\" && ingredient.length >= 40;\r\n  const handleSaveMealItem = () => {\r\n    const mealItem = {\r\n      ingredient: String(ingredient),\r\n      carbs: Number(carbs),\r\n      fats: Number(fats),\r\n      proteins: Number(proteins),\r\n      calories: Number(calories),\r\n    };\r\n    if (currentUserId) {\r\n      let mealItems = [];\r\n      if (mealList) {\r\n        mealItems = [...mealList, mealItem];\r\n      } else {\r\n        mealItems = [mealItem];\r\n      }\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUserId}/diet/${id}/meal/${indexList}/list`)\r\n        .set(mealItems);\r\n      setActiveMeal(false);\r\n    }\r\n  };\r\n  return (\r\n    <tr className=\"meal-table__tr\">\r\n      <td className=\"meal-table__td\">\r\n        {setIngredient}\r\n        <span className=\"meal-table__span\">\r\n          {isNameTaken && \"Podana nazwa jest zajęta\"}{\" \"}\r\n          {maxNameLength && \"Maksymalna długość to 40 znaków\"}\r\n        </span>\r\n      </td>\r\n      <td className=\"meal-table__td\">{setCarbs}</td>\r\n      <td className=\"meal-table__td\">{setFats}</td>\r\n      <td className=\"meal-table__td\">{setProteins}</td>\r\n      <td className=\"meal-table__td\">{setCalories}</td>\r\n      <td className=\"meal-table__td\">\r\n        <span>\r\n          {ingredient !== \"\" &&\r\n          carbs !== \"\" &&\r\n          fats !== \"\" &&\r\n          proteins !== \"\" &&\r\n          calories !== \"\" &&\r\n          !isNameTaken &&\r\n          !maxNameLength ? (\r\n            <AiOutlineCheckCircle\r\n              className=\"meal-table__save\"\r\n              onClick={() => handleSaveMealItem()}\r\n            />\r\n          ) : (\r\n            <IoIosRemoveCircleOutline\r\n              onClick={() => setActiveMeal(false)}\r\n              className=\"meal-table__remove\"\r\n            />\r\n          )}\r\n        </span>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default AddIngredient;\r\n","import { Button } from \"components\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport {\r\n  IngredientItem,\r\n  SumNutrientsByType,\r\n  AddIngredient,\r\n} from \"./components\";\r\nimport \"./mealTable.scss\";\r\nimport { ingredientTitles } from \"utils/constants\";\r\ntype mealItem = {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n};\r\ntype meal = {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n};\r\nexport type props = {\r\n  meals: Array<meal>;\r\n  meal: meal;\r\n  indexList: number;\r\n  id: string;\r\n};\r\n\r\nconst MealTable = ({ meals, meal, indexList, id }: props) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [activeMeal, setActiveMeal] = useState(false);\r\n  const titles = ingredientTitles;\r\n\r\n  const handleAddMealElement = () => {\r\n    setActiveMeal(true);\r\n  };\r\n\r\n  const handleRemoveMeal = (mealName: string) => {\r\n    if (currentUser) {\r\n      const filteredMealList = meals.filter(\r\n        (item) => item.mealName !== mealName\r\n      );\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/diet/${id}/meal`)\r\n        .set([...filteredMealList]);\r\n    }\r\n  };\r\n  return (\r\n    <table key={meal.mealName} className=\"meal-table\">\r\n      <thead className=\"meal-table__thead\">\r\n        <tr className=\"meal-table__tr\">\r\n          <th className=\"meal-table__th\">{meal.mealName}</th>\r\n          {titles.map((title) => (\r\n            <th key={title} className=\"meal-table__th\">\r\n              {title}\r\n            </th>\r\n          ))}\r\n\r\n          <th className=\"meal-table__th\">\r\n            <AiFillDelete onClick={() => handleRemoveMeal(meal.mealName)} />\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"meal-table__tbody\">\r\n        {meal.list &&\r\n          meal.list.map((item, index) => {\r\n            return (\r\n              <IngredientItem\r\n                key={item.ingredient}\r\n                meal={meal}\r\n                item={item}\r\n                index={index}\r\n                indexList={indexList}\r\n                id={id}\r\n              />\r\n            );\r\n          })}\r\n        {activeMeal && currentUser && (\r\n          <AddIngredient\r\n            setActiveMeal={setActiveMeal}\r\n            mealList={meal.list}\r\n            currentUserId={currentUser.uid}\r\n            id={id}\r\n            indexList={indexList}\r\n          />\r\n        )}\r\n        <tr className=\"meal-table__tr\">\r\n          <td className=\"meal-table__td\">\r\n            <Button onClick={handleAddMealElement}>Dodaj</Button>\r\n          </td>\r\n          <SumNutrientsByType meal={meal} titles={titles} />\r\n          <td className=\"meal-table__td\"></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default MealTable;\r\n","import React from \"react\";\r\n\r\nimport { MealTable } from \"./components\";\r\ntype mealItem = {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n};\r\ntype meal = {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n};\r\n\r\nexport type props = {\r\n  meals: Array<meal>;\r\n  id: string;\r\n};\r\nconst MealList = ({ meals, id }: props) => {\r\n  return (\r\n    <>\r\n      {meals &&\r\n        meals.map((meal, index) => {\r\n          return (\r\n            <MealTable\r\n              key={meal.mealName}\r\n              meals={meals}\r\n              meal={meal}\r\n              indexList={index}\r\n              id={id}\r\n            />\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MealList;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { AiFillDelete, AiOutlineCheckCircle } from \"react-icons/ai\";\r\nimport firebase from \"firebase/app\";\r\nimport { ingredientTitles } from \"utils/constants\";\r\n\r\ntype mealItem = {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n};\r\ntype meal = {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n};\r\nexport type props = {\r\n  meals: Array<meal>;\r\n  setActiveMeal: (arg1: boolean) => void;\r\n  currentUserId: string;\r\n  id: string;\r\n};\r\n\r\nconst AddMeal = ({ meals, setActiveMeal, currentUserId, id }: props) => {\r\n  const inputNameRef = useRef<HTMLInputElement>(null);\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const titles = ingredientTitles;\r\n  const maxNameLength = inputName.length >= 20;\r\n  const handleAddMeal = () => {\r\n    if (currentUserId) {\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUserId}/diet/${id}/meal`)\r\n        .set([...meals, { mealName: inputName }]);\r\n      setActiveMeal(false);\r\n    }\r\n    setActiveMeal(false);\r\n  };\r\n  useEffect(() => {\r\n    if (inputNameRef.current) {\r\n      inputNameRef.current.focus();\r\n    }\r\n  }, []);\r\n  return (\r\n    <table key=\"add-meal\" className=\"meal-table\">\r\n      <thead className=\"meal-table__thead\">\r\n        <tr className=\"meal-table__tr\">\r\n          <th className=\"meal-table__th\">\r\n            <input\r\n              type=\"text\"\r\n              value={inputName}\r\n              placeholder=\"Nazwa\"\r\n              onChange={(e) => setInputName(e.target.value)}\r\n              ref={inputNameRef}\r\n            />\r\n            <span className=\"meal-table__error\">\r\n              {meals.findIndex((meal) => meal.mealName === inputName) !== -1 &&\r\n                \"Nazwa zajęta\"}{\" \"}\r\n              {maxNameLength && \"Maksymalna długość to 20 znaków\"}\r\n            </span>\r\n          </th>\r\n          {titles.map((title) => (\r\n            <th key={title} className=\"meal-table__th\">\r\n              {title}\r\n            </th>\r\n          ))}\r\n\r\n          <th className=\"meal-table__th\">\r\n            {meals &&\r\n            meals.findIndex((meal) => meal.mealName === inputName) === -1 &&\r\n            inputName !== \"\" &&\r\n            !maxNameLength ? (\r\n              <AiOutlineCheckCircle\r\n                className=\"meal-table__save-meal\"\r\n                onClick={() => handleAddMeal()}\r\n              />\r\n            ) : (\r\n              <AiFillDelete onClick={() => setActiveMeal(false)} />\r\n            )}\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"meal-table__tbody\"></tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default AddMeal;\r\n","import React from \"react\";\r\nexport type props = {\r\n  sumNutrientsByType: Array<number>;\r\n  titles: Array<string>;\r\n};\r\n\r\nconst TrLine = ({ sumNutrientsByType, titles }: props) => {\r\n  return (\r\n    <tr className=\"meal-summary__tr\">\r\n      <td className=\"meal-summary__td\">Razem</td>\r\n      {sumNutrientsByType.map((type, index) => {\r\n        return (\r\n          <td key={titles[index]} className=\"meal-summary__td\">\r\n            {type}\r\n          </td>\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TrLine;\r\n","import React from \"react\";\r\nexport type props = {\r\n  titles: Array<string>;\r\n  diet: Array<number>;\r\n};\r\n\r\nconst DailyPlan = ({ titles, diet }: props) => {\r\n  return (\r\n    <tr className=\"meal-summary__tr\">\r\n      <td className=\"meal-summary__td\">Dzienny plan</td>\r\n      {titles.map((title, index) => (\r\n        <td key={title} className=\"meal-summary__td\">\r\n          {diet[index] === undefined ? \"-\" : diet[index]}\r\n        </td>\r\n      ))}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default DailyPlan;\r\n","import React from \"react\";\r\nexport type props = {\r\n  sumNutrientsByType: Array<number>;\r\n  diet: Array<number>;\r\n  titles: Array<string>;\r\n};\r\n\r\nconst MissingCalories = ({ sumNutrientsByType, diet, titles }: props) => {\r\n  return (\r\n    <>\r\n      <tr className=\"meal-summary__tr\">\r\n        <td className=\"meal-summary__td\">Brakujące</td>\r\n        {sumNutrientsByType.map((type, index) => {\r\n          const distinction =\r\n            diet[index] === undefined ? \"-\" : type - diet[index];\r\n          if (distinction >= 0) {\r\n            return (\r\n              <td\r\n                key={titles[index]}\r\n                className=\"meal-summary__td meal-summary__above-zero\"\r\n              >\r\n                {distinction}\r\n              </td>\r\n            );\r\n          } else if (distinction === \"-\") {\r\n            return (\r\n              <td key={titles[index]} className=\"meal-summary__td\">\r\n                {distinction}\r\n              </td>\r\n            );\r\n          } else {\r\n            return (\r\n              <td\r\n                key={titles[index]}\r\n                className=\"meal-summary__td meal-summary__below-zero\"\r\n              >\r\n                {distinction}\r\n              </td>\r\n            );\r\n          }\r\n        })}\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MissingCalories;\r\n","import React from \"react\";\r\nexport type props = {\r\n  titles: Array<string>;\r\n};\r\n\r\nconst Tfoot = ({ titles }: props) => {\r\n  return (\r\n    <tfoot className=\"meal-summary__tfoot\">\r\n      <tr className=\"meal-summary__tr\">\r\n        <th className=\"meal-summary__th\"></th>\r\n        {titles.map((title) => (\r\n          <th key={title} className=\"meal-summary__th\">\r\n            {title}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </tfoot>\r\n  );\r\n};\r\n\r\nexport default Tfoot;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./mealSummary.scss\";\r\nimport firebase from \"firebase/app\";\r\nimport { ingredientTitles } from \"utils/constants\";\r\nimport {\r\n  SumOfEatenIngredients,\r\n  DailyPlan,\r\n  MissingCalories,\r\n  Tfoot,\r\n} from \"./components\";\r\ntype mealItem = {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n};\r\ntype meal = {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n};\r\nexport type props = {\r\n  meals: Array<meal>;\r\n  currentUserId: string;\r\n};\r\nconst MealSummary = ({ meals, currentUserId }: props) => {\r\n  const sumNutrientsByType = [0, 0, 0, 0];\r\n  const titles = ingredientTitles;\r\n  const [diet, setDiet] = useState([0, 0, 0, 0]);\r\n  const [flag, setFlag] = useState(false);\r\n  meals.forEach((meal) => {\r\n    if (meal.list) {\r\n      meal.list.forEach((item) => {\r\n        sumNutrientsByType[0] += item.carbs;\r\n        sumNutrientsByType[1] += item.fats;\r\n        sumNutrientsByType[2] += item.proteins;\r\n        sumNutrientsByType[3] += item.calories;\r\n      });\r\n    }\r\n  });\r\n  const uploadDiet = (snapshot: any) => {\r\n    if (snapshot.val()) {\r\n      const { carbs, fats, proteins, calories } = snapshot.val();\r\n      setDiet([carbs, fats, proteins, calories]);\r\n      setFlag(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (currentUserId) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUserId + \"/settings/diet\");\r\n      ref.on(\"value\", uploadDiet);\r\n      return () => {\r\n        ref.off(\"value\", uploadDiet);\r\n      };\r\n    }\r\n  }, [currentUserId]);\r\n  return (\r\n    <>\r\n      {flag && (\r\n        <table className=\"meal-summary\">\r\n          <tbody className=\"meal-summary__tbody\">\r\n            <SumOfEatenIngredients\r\n              sumNutrientsByType={sumNutrientsByType}\r\n              titles={titles}\r\n            />\r\n            <DailyPlan diet={diet} titles={titles} />\r\n            <MissingCalories\r\n              sumNutrientsByType={sumNutrientsByType}\r\n              diet={diet}\r\n              titles={titles}\r\n            />\r\n          </tbody>\r\n          <Tfoot titles={titles} />\r\n        </table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MealSummary;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport \"./dietDay.scss\";\r\nimport { GoBackDelete, Button, LoadingIndicator } from \"components\";\r\nimport { MealList, AddMeal, MealSummary } from \"./components\";\r\n\r\ntype params = {\r\n  id: string;\r\n};\r\ntype mealItem = {\r\n  ingredient: string;\r\n  carbs: number;\r\n  fats: number;\r\n  proteins: number;\r\n  calories: number;\r\n};\r\ntype meal = {\r\n  mealName: string;\r\n  list: Array<mealItem>;\r\n};\r\nconst DietDay = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const params: params = useParams();\r\n  const history = useHistory();\r\n  const [meals, setMeals] = useState<Array<meal>>([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const uploadDietDay = function (snapshot: any) {\r\n    const dietDayArray: Array<meal> = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const childData = childSnapshot.val();\r\n      dietDayArray.push(childData);\r\n    });\r\n    setMeals(dietDayArray);\r\n  };\r\n  const [activeMeal, setActiveMeal] = useState(false);\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/diet/\" + params.id + \"/meal\");\r\n      ref.on(\"value\", uploadDietDay);\r\n      setIsLoaded(true);\r\n      return () => {\r\n        ref.off(\"value\", uploadDietDay);\r\n      };\r\n    }\r\n  }, [currentUser, params.id]);\r\n\r\n  const handleRemoveDietDay = () => {\r\n    if (currentUser) {\r\n      firebase\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/diet/${params.id}`)\r\n        .remove();\r\n      history.goBack();\r\n    }\r\n  };\r\n  return (\r\n    <main className=\"diet-day\">\r\n      <GoBackDelete handleEdit={handleRemoveDietDay} editTitle=\"Usuń dietę\" />\r\n      {isLoaded ? (\r\n        <section className=\"diet-day__section\">\r\n          <Button onClick={() => setActiveMeal(true)}>Dodaj posiłek</Button>\r\n          <MealList meals={meals} id={params.id} />\r\n          {activeMeal && currentUser && (\r\n            <AddMeal\r\n              meals={meals}\r\n              setActiveMeal={setActiveMeal}\r\n              currentUserId={currentUser.uid}\r\n              id={params.id}\r\n            />\r\n          )}\r\n          {meals.length !== 0 && currentUser && (\r\n            <MealSummary meals={meals} currentUserId={currentUser.uid} />\r\n          )}\r\n        </section>\r\n      ) : (\r\n        <LoadingIndicator />\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default DietDay;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FormTemplate, LoadingIndicator } from \"components\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\nimport firebase from \"firebase/app\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./user.scss\";\r\ntype Fields = {\r\n  name: string;\r\n  validate: (value: any) => void;\r\n  initialValue: string;\r\n  text: string;\r\n  placeholder: string;\r\n};\r\ntype Button = {\r\n  text: string;\r\n};\r\ntype FormFields = {\r\n  fields: Fields[];\r\n  button: Button;\r\n};\r\ntype user = {\r\n  name: string;\r\n  surname: string;\r\n};\r\ntype currentUser = {\r\n  uid: string;\r\n};\r\nexport type props = {\r\n  currentUser: currentUser;\r\n};\r\n\r\nconst User = ({ currentUser }: props) => {\r\n  const [settings, setSettings] = useState<FormFields>();\r\n  const uploadUserInfo = function (snapshot: any) {\r\n    setSettings({\r\n      fields: [\r\n        {\r\n          name: \"name\",\r\n          validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n          initialValue: snapshot.child(\"name\").val(),\r\n          text: \"Imię\",\r\n          placeholder: \"Imię\",\r\n        },\r\n        {\r\n          name: \"surname\",\r\n          validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n          initialValue: snapshot.child(\"surname\").val(),\r\n          text: \"Nazwisko\",\r\n          placeholder: \"Nazwisko\",\r\n        },\r\n      ],\r\n      button: {\r\n        text: \"Aktualizuj\",\r\n      },\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/settings/user\");\r\n      ref.once(\"value\", uploadUserInfo);\r\n      return () => {\r\n        ref.off(\"value\", uploadUserInfo);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n  const handleSubmit = (values: user) => {\r\n    if (currentUser) {\r\n      firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/settings/user\")\r\n        .set(values);\r\n      toast(\"Zaktualizowano dane\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"user\">\r\n      <h2 className=\"user__h2\">Dane</h2>\r\n      {settings ? (\r\n        <FormTemplate formFields={settings} handleSubmit={handleSubmit} />\r\n      ) : (\r\n        <LoadingIndicator />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FormTemplate, LoadingIndicator } from \"components\";\r\nimport firebase from \"firebase/app\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./diet.scss\";\r\ntype Fields = {\r\n  name: string;\r\n  initialValue: string;\r\n  text: string;\r\n  placeholder: string;\r\n  type: string;\r\n  step: string;\r\n  min: string;\r\n};\r\ntype Button = {\r\n  text: string;\r\n};\r\ntype FormFields = {\r\n  fields: Fields[];\r\n  button: Button;\r\n};\r\ntype currentUser = {\r\n  uid: string;\r\n};\r\nexport type props = {\r\n  currentUser: currentUser;\r\n};\r\nconst Diet = ({ currentUser }: props) => {\r\n  const [diet, setDiet] = useState<FormFields>();\r\n  const uploadDiet = function (snapshot: any) {\r\n    setDiet({\r\n      fields: [\r\n        {\r\n          name: \"carbs\",\r\n          initialValue: snapshot.child(\"carbs\").val(),\r\n          text: \"Węglowodany\",\r\n          placeholder: \"Węglowodany\",\r\n          type: \"number\",\r\n          step: \"1\",\r\n          min: \"0\",\r\n        },\r\n        {\r\n          name: \"fats\",\r\n          initialValue: snapshot.child(\"fats\").val(),\r\n          text: \"Tłuszcze\",\r\n          placeholder: \"Tłuszcze\",\r\n          type: \"number\",\r\n          step: \"1\",\r\n          min: \"0\",\r\n        },\r\n        {\r\n          name: \"proteins\",\r\n          initialValue: snapshot.child(\"proteins\").val(),\r\n          text: \"Białko\",\r\n          placeholder: \"Białko\",\r\n          type: \"number\",\r\n          step: \"1\",\r\n          min: \"0\",\r\n        },\r\n        {\r\n          name: \"calories\",\r\n          initialValue: snapshot.child(\"calories\").val(),\r\n          text: \"Kalorie\",\r\n          placeholder: \"Kalorie\",\r\n          type: \"number\",\r\n          step: \"1\",\r\n          min: \"0\",\r\n        },\r\n      ],\r\n      button: {\r\n        text: \"Aktualizuj\",\r\n      },\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/settings/diet\");\r\n      ref.once(\"value\", uploadDiet);\r\n      return () => {\r\n        ref.off(\"value\", uploadDiet);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n  const handleSubmit = (values: any) => {\r\n    for (var propName in values) {\r\n      if (values[propName] === null || values[propName] === undefined) {\r\n        delete values[propName];\r\n      } else {\r\n        values[propName] = Number(values[propName]);\r\n      }\r\n    }\r\n    if (currentUser) {\r\n      firebase\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/settings/diet\")\r\n        .set(values);\r\n      toast(\"Zaktualizowano dietę\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"diet\">\r\n      <h3 className=\"diet__h3\">Dieta</h3>\r\n      {diet ? (\r\n        <FormTemplate formFields={diet} handleSubmit={handleSubmit} />\r\n      ) : (\r\n        <LoadingIndicator />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Diet;\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"components\";\r\nimport firebase from \"firebase/app\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./deleteAccount.scss\";\r\ntype Button = {\r\n  text: string;\r\n};\r\ntype currentUser = {\r\n  uid: string;\r\n  reauthenticateWithCredential: any;\r\n  delete: any;\r\n  providerData: any;\r\n  email: string;\r\n};\r\nexport type props = {\r\n  currentUser: currentUser;\r\n};\r\n\r\nconst DeleteAccount = ({ currentUser }: props) => {\r\n  const [isActiveForm, setIsActiveForm] = useState(false);\r\n  const [isErrorMessage, setIsErrorMessage] = useState(false);\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const handleSubmit = () => {\r\n    if (currentUser) {\r\n      const credential = firebase.auth.EmailAuthProvider.credential(\r\n        currentUser.email,\r\n        password\r\n      );\r\n      currentUser\r\n        .reauthenticateWithCredential(credential)\r\n        .then(() => {\r\n          currentUser.delete().then(() => {\r\n            firebase\r\n              .database()\r\n              .ref(\"users/\" + currentUser.uid)\r\n              .remove();\r\n          });\r\n        })\r\n        .catch(() => {\r\n          setIsErrorMessage(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"delete-account\">\r\n      {!isActiveForm && (\r\n        <Button onClick={() => setIsActiveForm(true)}>Usuń konto</Button>\r\n      )}\r\n      {isActiveForm && (\r\n        <>\r\n          <h4 className=\"delete-account__h4\">Na pewno chcesz usunąć konto?</h4>\r\n          <div className=\"delete-account__wrapper\">\r\n            <label htmlFor=\"password\" className=\"delete-account__label\">\r\n              Hasło\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n              className=\"delete-account__input\"\r\n              id=\"password\"\r\n            />\r\n            {isErrorMessage && (\r\n              <p className=\"delete-account__error-message\">Niepoprawne hasło</p>\r\n            )}\r\n            <Button onClick={handleSubmit}>Tak</Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteAccount;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport { LoadingIndicator } from \"components\";\r\nimport { User, Diet, DeleteAccount } from \"./components\";\r\nimport \"./settings.scss\";\r\nconst Settings = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  return (\r\n    <main className=\"settings\">\r\n      {currentUser ? (\r\n        <>\r\n          <User currentUser={currentUser} />\r\n          <Diet currentUser={currentUser} />\r\n          <DeleteAccount currentUser={currentUser} />\r\n        </>\r\n      ) : (\r\n        <LoadingIndicator />\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport \"./notFound.scss\";\r\nimport { Button } from \"components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst NotFound = () => {\r\n  const history = useHistory();\r\n  const handleBackToHomePage = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <main className=\"not-found\">\r\n      <div className=\"not-found__div\">\r\n        <h1 className=\"not-found__p\">404 - strona nie istnieje</h1>\r\n        <Button onClick={handleBackToHomePage}>\r\n          Przejdź do strony głównej\r\n        </Button>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport \"reset-css\";\nimport \"./App.scss\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"./styles/firebaseui-styling.global.scss\";\nimport {\n  Login,\n  Root,\n  Trainings,\n  Training,\n  Exercise,\n  Statistics,\n  Diet,\n  DietDay,\n  Settings,\n  NotFound,\n} from \"pages\";\nimport {\n  LoadingIndicator,\n  Header,\n  AuthProvider,\n  PrivateRoute,\n} from \"components\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { CookiesProvider } from \"react-cookie\";\nconst App = () => {\n  return (\n    <CookiesProvider>\n      <React.Suspense fallback={<LoadingIndicator />}>\n        <AuthProvider>\n          <Router basename=\"/workout-app-react\">\n            <ToastContainer />\n            <Header />\n            <Switch>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <PrivateRoute\n                path=\"/trainings\"\n                component={Trainings}\n                exact={true}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/trainings/:id\"\n                component={Training}\n                exact={true}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/trainings/:id/:id\"\n                component={Exercise}\n                exact={true}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/statistics\"\n                exact={true}\n                component={Statistics}\n              ></PrivateRoute>\n              {/* <PrivateRoute\n                path=\"/measurement\"\n                exact={false}\n                component={Measurement}\n              ></PrivateRoute> */}\n              <PrivateRoute\n                path=\"/diet\"\n                exact={true}\n                component={Diet}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/diet/:id\"\n                exact={true}\n                component={DietDay}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/settings\"\n                exact={true}\n                component={Settings}\n              ></PrivateRoute>\n              <Route path=\"/\">\n                <Root />\n              </Route>\n              <Route component={NotFound}></Route>\n            </Switch>\n          </Router>\n        </AuthProvider>\n      </React.Suspense>\n    </CookiesProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}