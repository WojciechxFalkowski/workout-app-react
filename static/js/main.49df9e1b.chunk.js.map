{"version":3,"sources":["pages/Login/Login.tsx","components/LoadingIndicator/LoadingIndicator.tsx","components/Header/components/Navigation.tsx","components/Header/Header.tsx","components/PrivateRoute/PrivateRoute.tsx","components/FormTemplate/FormTemplate.js","components/Button/Button.tsx","components/Arrow/Arrow.tsx","components/AuthProvider/AuthProvider.tsx","pages/Root/Root.tsx","pages/Home/Home.tsx","fire.jsx","pages/Trainings/components/List/List.tsx","utils/validation.ts","pages/Trainings/Trainings.tsx","pages/Training/components/TrainingExerciseList/TrainingExerciseList.tsx","pages/Training/Training.tsx","pages/Exercise/components/FormInput/components/Line/Line.tsx","pages/Exercise/components/FormInput/components/RemoveSeries/RemoveSeries.tsx","pages/Exercise/components/FormInput/components/SeriesNumber/SeriesNumber.tsx","pages/Exercise/components/FormInput/FormInput.tsx","pages/Exercise/Exercise.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LoginPage","useState","isSignedIn","setIsSignedIn","console","log","uiConfig","signInFlow","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccess","to","firebaseAuth","LoadingIndicator","className","Navigation","Header","currentUser","useContext","AuthContext","useEffect","onClick","signOut","then","error","PrivateRoute","RouteComponent","component","rest","render","routeProps","FormTemplate","formFields","fields","button","handleSubmit","onSubmit","props","map","formField","key","name","validate","defaultValue","initialValue","parse","input","meta","text","type","placeholder","step","undefined","min","touched","variant","Button","children","Arrow","history","useHistory","goBack","createContext","AuthProvider","fire","setCurrentUser","pending","setPending","onAuthStateChanged","user","database","ref","child","uid","once","snapshot","userId","email","val","set","Provider","value","Home","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","List","trainings","training","modifiedDate","date","replace","push","id","handleTraining","trainingName","reverse","required","composeValidators","validators","reduce","validator","Trainings","setTrainings","today","Date","todayDatePattern","getFullYear","getMonth","getDate","getHours","getMinutes","uploadTrainings","trainingArray","forEach","childSnapshot","childData","orderByChild","on","off","values","saveNewTraining","TrainingExerciseList","exercises","exerciseName","exerciseKey","pathname","state","handleTrainingExercise","Training","match","params","setTrainingName","setExercises","loadTrainingName","loadTrainings","exerciseArray","remove","Line","handleAddSeries","RemoveSeries","index","handleRemoveSeries","SeriesNumber","FormInput","setFormFields","ID","Math","random","toString","substr","number","splice","Exercise","location","url","length","newArray","field","App","Suspense","fallback","path","Login","exact","Root","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.49df9e1b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nexport interface Props {}\r\nexport interface Test {\r\n  signInFlow: string;\r\n  signInOptions: Array<string> | any;\r\n  callbacks: any;\r\n}\r\nconst LoginPage: React.FC<Props> = () => {\r\n  const [isSignedIn, setIsSignedIn] = useState(false);\r\n  console.log(\"Login\");\r\n  const uiConfig: Test = {\r\n    signInFlow: \"popup\",\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      // firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n      // firebase.auth.TwitterAuthProvider.PROVIDER_ID,\r\n      // firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n    ],\r\n    callbacks: {\r\n      signInSuccess: () => {\r\n        setIsSignedIn(true);\r\n\r\n        return false;\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isSignedIn ? (\r\n        <Redirect to=\"/home\" />\r\n      ) : (\r\n        <StyledFirebaseAuth\r\n          uiConfig={uiConfig}\r\n          firebaseAuth={firebase.auth()}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport \"./LoadingIndicator.scss\";\r\nconst LoadingIndicator = () => {\r\n  console.log(\"LoadingIndicator\");\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"root__div\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingIndicator;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./navigation.scss\";\r\nexport interface Props {}\r\n\r\nconst Navigation: React.FC<Props> = () => {\r\n  return (\r\n    <>\r\n      <div className=\"navigation\">\r\n        <ul className=\"navigation__ul\">\r\n          {/* <li className=\"navigation__li\">\r\n            <Link to=\"/training\" className=\"navigation__a\">\r\n              Nowy Trening\r\n            </Link>\r\n          </li> */}\r\n          <li className=\"navigation__li\">\r\n            <Link to=\"/trainings\" className=\"navigation__a\">\r\n              Treningi\r\n            </Link>\r\n          </li>\r\n          <li className=\"navigation__li\">\r\n            <Link to=\"/statistics\" className=\"navigation__a\">\r\n              Statystyki\r\n            </Link>\r\n          </li>\r\n          <li className=\"navigation__li\">\r\n            <Link to=\"/measurement\" className=\"navigation__a\">\r\n              Pomiary\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport \"./header.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport Navigation from \"./components\";\r\ninterface Props {}\r\n\r\nconst Header: React.FC<Props> = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  useEffect(() => {}, []);\r\n  const handleSignOut = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(\r\n        function () {},\r\n        function (error) {}\r\n      );\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"header__logo\">\r\n        <Link to=\"/\" className=\"header__link\">\r\n          TO DO WORKOUT\r\n        </Link>\r\n      </h1>\r\n\r\n      {currentUser ? (\r\n        <>\r\n          <Navigation />\r\n\r\n          <button className=\"header__link\" onClick={handleSignOut}>\r\n            Wyloguj się\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <Link className=\"header__link\" to=\"/login\">\r\n          Zaloguj się\r\n        </Link>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nexport interface Props {\r\n  component: any;\r\n  exact: boolean;\r\n  path: string;\r\n}\r\nconst PrivateRoute: React.FC<Props> = ({\r\n  component: RouteComponent,\r\n\r\n  ...rest\r\n}) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport \"./FormTemplate.scss\";\r\nconst FormTemplate = ({ formFields: { fields, button }, handleSubmit }) => {\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      {(props) => (\r\n        <form onSubmit={props.handleSubmit} className=\"form\">\r\n          {fields.map((formField) => {\r\n            return (\r\n              <Field\r\n                key={formField.name}\r\n                name={formField.name}\r\n                validate={formField.validate}\r\n                defaultValue={formField.initialValue}\r\n                parse={formField.parse}\r\n              >\r\n                {({ input, meta }) => (\r\n                  <div className=\"form__wrapper\">\r\n                    <label>{formField.text}</label>\r\n                    {formField.component === \"textarea\" ? (\r\n                      <textarea\r\n                        className=\"form__textarea\"\r\n                        {...input}\r\n                        type=\"text\"\r\n                        placeholder={\"Description\"}\r\n                      />\r\n                    ) : (\r\n                      <input\r\n                        className=\"form__input\"\r\n                        {...input}\r\n                        type={formField.type ? formField.type : \"text\"}\r\n                        step={formField.step ? formField.step : undefined}\r\n                        min={formField.min ? formField.min : undefined}\r\n                        placeholder={formField.placeholder}\r\n                      />\r\n                    )}\r\n                    {meta.error && meta.touched && (\r\n                      <span className=\"form__span\">{meta.error}</span>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            );\r\n          })}\r\n\r\n          <button\r\n            variant={button.variant}\r\n            type={button.type}\r\n            className=\"form__button\"\r\n          >\r\n            {button.text}\r\n          </button>\r\n        </form>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormTemplate;\r\n","import React from \"react\";\r\nimport \"./button.scss\";\r\nexport interface Props {\r\n  onClick: () => void;\r\n}\r\n\r\nconst Button: React.FC<Props> = ({ onClick, children }) => {\r\n  return (\r\n    <button onClick={onClick} className=\"button\">\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import \"./arrow.scss\";\r\nimport React from \"react\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Arrow = () => {\r\n  const history = useHistory();\r\n  const handleArrowClick = () => {\r\n    history.goBack();\r\n  };\r\n  return (\r\n    <>\r\n      <span className=\"arrow__span\" onClick={handleArrowClick}>\r\n        <IoIosArrowBack />\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import React, { useEffect, useState, createContext } from \"react\";\r\n\r\nimport { LoadingIndicator } from \"components\";\r\nexport const AuthContext = createContext<Partial<ContextProps>>({});\r\ntype ContextProps = { currentUser: user | null };\r\ninterface user {\r\n  uid: string;\r\n}\r\ninterface Props {\r\n  fire: any;\r\n}\r\nconst AuthProvider: React.FC<Props> = ({ children, fire }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const writeUserData = (userId: string, email: string) => {\r\n      fire\r\n        .database()\r\n        .ref(\"users/\" + userId)\r\n        .set({\r\n          email: email,\r\n        });\r\n    };\r\n    fire.auth().onAuthStateChanged((user: any) => {\r\n      setCurrentUser(user);\r\n      setPending(false);\r\n      if (user) {\r\n        let rootRef = fire.database().ref(\"users/\");\r\n        rootRef.child(user.uid).once(\"value\", function (snapshot: any) {\r\n          let exists = snapshot.val() !== null;\r\n          if (!exists) {\r\n            // console.log(\"To konto nie ma bazy danych\");\r\n            writeUserData(user.uid, user.email);\r\n          } else {\r\n            // console.log(\"To konto ma baze danych\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, [fire]);\r\n\r\n  if (pending) {\r\n    return <LoadingIndicator />;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nexport interface Props {}\r\n\r\nconst Home: React.FC<Props> = () => {\r\n  const { currentUser }: any | undefined = useContext(AuthContext);\r\n  return (\r\n    <>{currentUser ? <div>Witaj zalogowany</div> : <div>Zaloguj się</div>}</>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nexport interface Props {}\r\n\r\nconst Home: React.FC<Props> = () => {\r\n  const { currentUser }: any | undefined = useContext(AuthContext);\r\n  console.log(\"currentUser w HOME:\", currentUser);\r\n  return (\r\n    <>\r\n      <ul>\r\n        Ostatnie treningi\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import firebase from \"firebase\";\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyAkx7U5xHRytqTxEvWcAeBafAnn0RxvCGE\",\r\n  authDomain: \"workout-app-react.firebaseapp.com\",\r\n  databaseURL: \"https://workout-app-react.firebaseio.com\",\r\n  projectId: \"workout-app-react\",\r\n  storageBucket: \"workout-app-react.appspot.com\",\r\n  messagingSenderId: \"525427559623\",\r\n  appId: \"1:525427559623:web:086662897279ef7ca942e2\",\r\n  measurementId: \"G-LRVXXWQ6R2\",\r\n};\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nexport default fire;\r\n","import React from \"react\";\r\nimport \"./List.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport interface Props {\r\n  trainings: Array<training>;\r\n}\r\ninterface training {\r\n  id: string;\r\n  date: string;\r\n  trainingName: string;\r\n}\r\nconst List: React.FC<Props> = ({ trainings }) => {\r\n  let history = useHistory();\r\n  const handleTraining = (training: training) => {\r\n    history.push(`/trainings/${training.id}`);\r\n  };\r\n  return (\r\n    <div className=\"list\">\r\n      <h2 className=\"list__h2\">Ostatnie treningi</h2>\r\n      <ul className=\"list__ul\">\r\n        {trainings &&\r\n          trainings\r\n            .map((training) => {\r\n              const modifiedDate = training.date.replace(/T/g, \" \");\r\n              return (\r\n                <li\r\n                  onClick={() => handleTraining(training)}\r\n                  key={training.date}\r\n                  className=\"list__li\"\r\n                >\r\n                  <p className=\"list__p\">{training.trainingName}</p>\r\n                  <p className=\"list__p\">{modifiedDate}</p>\r\n                </li>\r\n              );\r\n            })\r\n            .reverse()}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","export const required = (text: string) => (\r\n  value: string | number\r\n): undefined | string => (value ? undefined : text);\r\nexport const checkAtSign = (text: string) => (value: string) =>\r\n  value.includes(\"@\") ? undefined : text;\r\nexport const mustBeNumber = (text: string) => (\r\n  value: number\r\n): string | undefined => (isNaN(value) ? text : undefined);\r\nexport const minValue = (min: number, text: string) => (value: string) =>\r\n  isNaN(value.length) || value.length >= min ? undefined : text;\r\nexport const maxValue = (max: number, text: string) => (value: string) =>\r\n  isNaN(value.length) || value.length <= max ? undefined : text;\r\nexport const uniqueString = (contacts: any, text: string) => (value: string) =>\r\n  contacts.find((contact: any) => contact.accountNumber === value) === undefined\r\n    ? undefined\r\n    : text;\r\n\r\nexport const composeValidators = (...validators: any) => (value: any) =>\r\n  validators.reduce(\r\n    (error: any, validator: any) => error || validator(value),\r\n    undefined\r\n  );\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { FormTemplate } from \"components\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport fire from \"../../fire\";\r\nimport { List } from \"./components\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { required, composeValidators } from \"utils/validation\";\r\nexport interface Props {}\r\ntype Trainings = Array<training>;\r\ninterface training {\r\n  id: string;\r\n  date: string;\r\n  trainingName: string;\r\n}\r\nconst Trainings: React.FC<Props> = () => {\r\n  let history = useHistory();\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [trainings, setTrainings] = useState<Trainings>();\r\n\r\n  const today = new Date();\r\n  const todayDatePattern = `${today.getFullYear()}-${today.getMonth() + 1}-${\r\n    today.getDate() > 9 ? today.getDate() : \"0\" + today.getDate()\r\n  }T${today.getHours() > 9 ? today.getHours() : \"0\" + today.getHours()}:${\r\n    today.getMinutes() > 9 ? today.getMinutes() : \"0\" + today.getMinutes()\r\n  }`;\r\n  const formFields = {\r\n    fields: [\r\n      {\r\n        name: \"date\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: todayDatePattern,\r\n        text: \"Data treningu\",\r\n        placeholder: \"Data treningu\",\r\n        type: \"datetime-local\",\r\n      },\r\n      {\r\n        name: \"trainingName\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Nazwa treningu\",\r\n        placeholder: \"Nazwa treningu\",\r\n      },\r\n    ],\r\n    button: {\r\n      type: \"submit\",\r\n      text: \"Dodaj trening\",\r\n    },\r\n  };\r\n  const saveNewTraining = (\r\n    userId: string,\r\n    id: string,\r\n    date: string,\r\n    trainingName: string\r\n  ) => {\r\n    fire\r\n      .database()\r\n      .ref(\"users/\" + userId + \"/trainings/\" + id)\r\n      .set({ id, date, trainingName });\r\n  };\r\n  const handleSubmit = (values: any) => {\r\n    const date = values.date\r\n      .replace(/-/g, \"\")\r\n      .replace(/T/g, \"\")\r\n      .replace(/:/g, \"\");\r\n\r\n    if (currentUser) {\r\n      saveNewTraining(currentUser.uid, date, values.date, values.trainingName);\r\n      history.push(`/trainings/${date}`);\r\n    }\r\n  };\r\n  const uploadTrainings = function (snapshot: any) {\r\n    const trainingArray: any = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const childData = childSnapshot.val();\r\n      trainingArray.push(childData);\r\n    });\r\n    setTrainings(trainingArray);\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = fire\r\n        .database()\r\n        .ref(\"users/\" + currentUser.uid + \"/trainings\")\r\n        .orderByChild(\"date\");\r\n      ref.on(\"value\", uploadTrainings);\r\n      return () => {\r\n        ref.off(\"value\", uploadTrainings);\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n  return (\r\n    <>\r\n      <FormTemplate formFields={formFields} handleSubmit={handleSubmit} />\r\n      {trainings && <List trainings={trainings} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trainings;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./trainingExerciseList.scss\";\r\nexport interface Props {\r\n  exercises: any;\r\n  id: string;\r\n}\r\n\r\nconst TrainingExerciseList: React.FC<Props> = ({ exercises, id }) => {\r\n  const history = useHistory();\r\n  const handleTrainingExercise = (exerciseKey: any, exerciseName: any) => {\r\n    history.push({\r\n      pathname: `/trainings/${id}/${exerciseKey}`,\r\n      state: { exerciseName },\r\n    });\r\n  };\r\n  return (\r\n    <ul className=\"training-exercise-list__ul\">\r\n      {exercises\r\n        .map((exerciseName: any) => {\r\n          return (\r\n            <li\r\n              onClick={() =>\r\n                handleTrainingExercise(exerciseName.key, exerciseName.name)\r\n              }\r\n              key={exerciseName.key}\r\n              className=\"training-exercise-list__exercise\"\r\n            >\r\n              {exerciseName.name}\r\n            </li>\r\n          );\r\n        })\r\n        .reverse()}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TrainingExerciseList;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport fire from \"fire\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { TrainingExerciseList } from \"./components\";\r\nimport { FormTemplate, Button, Arrow } from \"components\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\nimport \"./training.scss\";\r\ninterface Exercise {\r\n  exerciseName: string;\r\n}\r\ninterface Id {\r\n  id: string;\r\n}\r\ntype MatchParams = {\r\n  params: Id;\r\n};\r\nexport interface Props {\r\n  match: MatchParams;\r\n}\r\nconst Training: React.FC<Props> = ({ match }) => {\r\n  const history = useHistory();\r\n  const { id } = match.params;\r\n  const { currentUser } = useContext(AuthContext);\r\n  const formFields = {\r\n    fields: [\r\n      {\r\n        name: \"exerciseName\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Nowe ćwiczenie\",\r\n        placeholder: \"Nowe ćwiczenie\",\r\n      },\r\n    ],\r\n    button: {\r\n      type: \"submit\",\r\n      text: \"Dodaj ćwiczenie\",\r\n    },\r\n  };\r\n\r\n  const handleDeleteTraining = () => {\r\n    if (currentUser) {\r\n      fire.database().ref(`users/${currentUser.uid}/trainings/${id}`).remove();\r\n      history.goBack();\r\n    }\r\n  };\r\n  const handleSubmit = (values: Exercise) => {\r\n    if (currentUser) {\r\n      fire\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/trainings/${id}`)\r\n        .child(\"exercises\")\r\n        .push()\r\n        .set({ name: values.exerciseName });\r\n      // history.push(`/trainings/${date}`); //think about that\r\n    }\r\n  };\r\n\r\n  const [trainingName, setTrainingName] = useState();\r\n  if (currentUser) {\r\n  }\r\n  const [exercises, setExercises] = useState();\r\n  const loadTrainingName = function (snapshot: any) {\r\n    setTrainingName(snapshot.val().trainingName);\r\n  };\r\n  const loadTrainings = function (snapshot: any) {\r\n    const exerciseArray: any = [];\r\n    snapshot.forEach(function (childSnapshot: any) {\r\n      const { name } = childSnapshot.val();\r\n      const key = childSnapshot.key;\r\n      exerciseArray.push({ name, key });\r\n    });\r\n    setExercises(exerciseArray);\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const ref = fire\r\n        .database()\r\n        .ref(`users/${currentUser.uid}/trainings/${id}`);\r\n      ref.once(\"value\").then(loadTrainingName);\r\n      ref.child(`exercises`).on(\"value\", loadTrainings);\r\n      return () => {\r\n        ref.off(\"value\", loadTrainingName);\r\n        ref.child(`exercises`).off(\"value\", loadTrainings);\r\n      };\r\n    }\r\n  }, [currentUser, id]);\r\n  return (\r\n    <div className=\"training\">\r\n      <Arrow />\r\n      <Button onClick={handleDeleteTraining}>Usuń trening</Button>\r\n      <h2 className=\"exercise__h2\">{trainingName}</h2>\r\n      <FormTemplate formFields={formFields} handleSubmit={handleSubmit} />\r\n      {exercises && <TrainingExerciseList exercises={exercises} id={id} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Training;\r\n","import React from \"react\";\r\nimport \"./line.scss\";\r\nexport interface Props {\r\n  handleAddSeries: () => void;\r\n}\r\n\r\nconst Line: React.FC<Props> = ({ handleAddSeries }) => {\r\n  return (\r\n    <div onClick={handleAddSeries} className=\"exercise__line\">\r\n      <div className=\"exercise__check\">+</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Line;\r\n","import React from \"react\";\r\nimport \"./removeSeries.scss\";\r\nexport interface Props {\r\n  index: number;\r\n  handleRemoveSeries: (index: number) => void;\r\n}\r\n\r\nconst RemoveSeries: React.FC<Props> = ({ index, handleRemoveSeries }) => {\r\n  return (\r\n    <div className=\"remove-series\">\r\n      <button\r\n        onClick={() => handleRemoveSeries(index)}\r\n        type=\"button\"\r\n        className=\"remove-series__button\"\r\n      >\r\n        Usuń serię\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemoveSeries;\r\n","import React from \"react\";\r\nimport \"./seriesNumber.scss\";\r\nexport interface Props {\r\n  index: number;\r\n}\r\n\r\nconst SeriesNumber: React.FC<Props> = ({ index }) => {\r\n  return (\r\n    <>\r\n      {index % 2 === 0 && <p className=\"seriesNumber\">Seria {index / 2 + 1}</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SeriesNumber;\r\n","import React from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\nimport \"./formInput.scss\";\r\nimport { Line, RemoveSeries, SeriesNumber } from \"./components\";\r\ninterface Fields {\r\n  name: string;\r\n  validate: (value: any) => void;\r\n  initialValue: string | undefined;\r\n  text: string;\r\n  placeholder: string;\r\n}\r\ninterface Button {\r\n  text: string;\r\n}\r\ninterface FormFields {\r\n  fields: Fields[];\r\n  button: Button;\r\n}\r\ninterface Props {\r\n  formFields: FormFields;\r\n  setFormFields: (cos: any) => void;\r\n  handleSubmit: (values: any) => void;\r\n}\r\n\r\nconst FormInput: React.FC<Props> = ({\r\n  formFields: { fields, button },\r\n  handleSubmit,\r\n  setFormFields,\r\n}) => {\r\n  const handleAddSeries = () => {\r\n    fields.push(\r\n      {\r\n        name: `exerciseWeight${ID()}`,\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Ciężar\",\r\n        placeholder: \"Ciężar\",\r\n      },\r\n      {\r\n        name: `exerciseRepeat${ID()}`,\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Liczba powtórzeń\",\r\n        placeholder: \"Liczba powtórzeń\",\r\n      }\r\n    );\r\n    setFormFields({\r\n      fields,\r\n      button,\r\n    });\r\n  };\r\n  const ID = function () {\r\n    return (\r\n      Math.random().toString(36).substr(2, 9) +\r\n      Math.random().toString(36).substr(2, 9)\r\n    );\r\n  };\r\n  const handleRemoveSeries = (number: number) => {\r\n    fields.splice(number - 1, 2);\r\n    setFormFields({\r\n      fields,\r\n      button,\r\n    });\r\n  };\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      {(props) => (\r\n        <form onSubmit={props.handleSubmit} className=\"form\">\r\n          {fields.map((formField: any, index: number) => {\r\n            return (\r\n              <Field\r\n                key={formField.name}\r\n                name={formField.name}\r\n                validate={formField.validate}\r\n                defaultValue={formField.initialValue}\r\n                parse={formField.parse}\r\n              >\r\n                {({ input, meta }) => (\r\n                  <>\r\n                    <SeriesNumber index={index} />\r\n                    <div className=\"form__wrapper\">\r\n                      <label>{formField.text}</label>\r\n                      <input\r\n                        className=\"form__input\"\r\n                        {...input}\r\n                        type=\"number\"\r\n                        step=\"1\"\r\n                        min=\"0\"\r\n                        placeholder={formField.placeholder}\r\n                      />\r\n                      {meta.error && meta.touched && (\r\n                        <span className=\"form__span\">{meta.error}</span>\r\n                      )}\r\n                    </div>\r\n                    {index % 2 === 1 && (\r\n                      <RemoveSeries\r\n                        index={index}\r\n                        handleRemoveSeries={handleRemoveSeries}\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Field>\r\n            );\r\n          })}\r\n          <Line handleAddSeries={handleAddSeries} />\r\n          <button className=\"form__button\">{button.text}</button>\r\n        </form>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"components/AuthProvider/AuthProvider\";\r\nimport { FormInput } from \"./components\";\r\nimport { Button, Arrow } from \"components\";\r\nimport { required, composeValidators } from \"utils/validation\";\r\nimport fire from \"./../../fire\";\r\nimport \"./exercise.scss\";\r\ninterface Id {\r\n  id: string;\r\n}\r\ninterface Params {\r\n  params: Id;\r\n  path: string;\r\n  url: string;\r\n}\r\nexport interface Props {\r\n  match: Params;\r\n}\r\n\r\nconst Exercise: React.FC<Props> = (props) => {\r\n  let history = useHistory();\r\n  const { currentUser } = useContext(AuthContext);\r\n  const { exerciseName }: any = history.location.state;\r\n  const url = props.match.url.replace(\"/trainings/\", \"\");\r\n  const id = url.replace(\"/\" + props.match.params.id, \"\");\r\n  const [formFields, setFormFields] = useState({\r\n    fields: [\r\n      {\r\n        name: \"exerciseWeight\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Ciężar\",\r\n        placeholder: \"Ciężar\",\r\n      },\r\n      {\r\n        name: \"exerciseRepeat\",\r\n        validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n        initialValue: undefined,\r\n        text: \"Liczba powtórzeń\",\r\n        placeholder: \"Liczba powtórzeń\",\r\n      },\r\n    ],\r\n    button: {\r\n      type: \"submit\",\r\n      text: \"Zapisz\",\r\n    },\r\n  });\r\n  const handleSaveExercise = () => {\r\n    if (currentUser) {\r\n      fire\r\n        .database()\r\n        .ref(\r\n          `users/${currentUser.uid}/trainings/${id}/exercises/${props.match.params.id}`\r\n        )\r\n        .remove();\r\n      history.goBack();\r\n    }\r\n  };\r\n  const handleSubmit = (values: any) => {\r\n    const newArray: any = [];\r\n    formFields.fields.forEach((field) => {\r\n      newArray.push(values[field.name]);\r\n    });\r\n    if (currentUser) {\r\n      const url = `users/${currentUser.uid}/trainings/${id}/exercises/${props.match.params.id}`;\r\n      fire.database().ref(url).child(\"series\").set(newArray);\r\n    }\r\n  };\r\n  const ID = function () {\r\n    return (\r\n      Math.random().toString(36).substr(2, 9) +\r\n      Math.random().toString(36).substr(2, 9)\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      fire\r\n        .database()\r\n        .ref(\r\n          `users/${currentUser.uid}/trainings/${id}/exercises/${props.match.params.id}/series`\r\n        )\r\n        .on(\"value\", function (snapshot) {\r\n          if (snapshot) {\r\n            const fields: any = [];\r\n            const button = {\r\n              type: \"submit\",\r\n              text: \"Zapisz\",\r\n            };\r\n            snapshot.forEach(function (childSnapshot) {\r\n              fields.push({\r\n                name: `${\r\n                  fields.length % 2 === 0 ? \"exerciseWeight\" : \"exerciseRepeat\"\r\n                }${ID()}`,\r\n                validate: composeValidators(required(\"To pole jest wymagane!\")),\r\n                initialValue: childSnapshot.val(),\r\n                text: \"Ciężar\",\r\n                placeholder: \"Ciężar\",\r\n              });\r\n            });\r\n            if (fields.length > 0) {\r\n              setFormFields({\r\n                fields,\r\n                button,\r\n              });\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }, [currentUser, id, props.match.params.id]);\r\n  return (\r\n    <div className=\"exercise\">\r\n      <Arrow />\r\n      <Button onClick={handleSaveExercise}>Usuń ćwiczenie</Button>\r\n      <h2 className=\"exercise__h2\">{exerciseName}</h2>\r\n      <FormInput\r\n        formFields={formFields}\r\n        setFormFields={setFormFields}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Exercise;\r\n","import React from \"react\";\nimport \"reset-css\";\nimport \"./App.scss\";\nimport { Login, Root, Home, Trainings, Training, Exercise } from \"pages\";\nimport fire from \"fire\";\n\nimport {\n  LoadingIndicator,\n  Header,\n  AuthProvider,\n  PrivateRoute,\n} from \"components\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <>\n      <React.Suspense fallback={<LoadingIndicator />}>\n        <AuthProvider fire={fire}>\n          <div className=\"app__wrapper\">\n            <Router>\n              <Header />\n              <Switch>\n                <Route path=\"/login\">\n                  <Login />\n                </Route>\n                <PrivateRoute\n                  path=\"/home\"\n                  exact={false}\n                  component={Home}\n                ></PrivateRoute>\n                <PrivateRoute\n                  path=\"/trainings\"\n                  component={Trainings}\n                  exact={true}\n                ></PrivateRoute>\n                <PrivateRoute\n                  path=\"/trainings/:id\"\n                  component={Training}\n                  exact={true}\n                ></PrivateRoute>\n                <PrivateRoute\n                  path=\"/trainings/:id/:id\"\n                  component={Exercise}\n                  exact={true}\n                ></PrivateRoute>\n                {/* <PrivateRoute path=\"/exercises\" component={Home}></PrivateRoute> */}\n                <PrivateRoute\n                  path=\"/statistics\"\n                  exact={false}\n                  component={Home}\n                ></PrivateRoute>\n                <PrivateRoute\n                  path=\"/measurement\"\n                  exact={false}\n                  component={Home}\n                ></PrivateRoute>\n                <Route path=\"/\" exact>\n                  <Root />\n                </Route>\n              </Switch>\n            </Router>\n          </div>\n        </AuthProvider>\n      </React.Suspense>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}